.. _sync-errors:

===========
Sync Errors
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

While you develop applications using {+sync+}, you may run into errors. This
section details some common errors. 


Error Reporting
---------------

.. tabs-realm-sdks::

   .. tab::
      :tabid: android

      To learn how to detect and respond to any failed sync-related API calls with the Android SDK, see the :ref:`Handle Sync Errors <android-handle-sync-errors>` documentation.

   .. tab::
      :tabid: ios

      To learn how to detect and respond to any failed sync-related API calls with the iOS SDK, see the :ref:`Handle Sync Errors <ios-handle-sync-errors>` documentation.

   .. tab::
      :tabid: node
      
      To learn how to detect and respond to any failed sync-related API calls with the Node.js SDK, see the :ref:`Handle Sync Errors <node-handle-sync-errors>` documentation.

   .. tab::
      :tabid: react-native
      
      To learn how to detect and respond to any failed sync-related API calls with the React Native SDK, see the :ref:`Handle Sync Errors <react-native-handle-sync-errors>` documentation.

   .. tab::
      :tabid: dotnet

      To learn how to detect and respond to any failed sync-related API calls with the .NET SDK, see the :ref:`Handle Sync Errors <dotnet-handle-sync-errors>` documentation.


Client Resets
-------------

When using :doc:`{+sync+} </sync>`, a **client
reset** is a serious error recovery task that your client
app must perform in the following situation:

- The given synced {+realm+} on the server was restored from a backup.
  For example, due to a {+service-short+} server crash.

- The client app made changes to that {+realm+} since the backup was made,
  but did not sync those changes back to the server before the server
  was restored.

In other words, the client app must carry out a client reset
on a given synced {+realm+} if the server is restored to a
version older than the version on the client.

A client reset erases all local data and downloads a new copy of the
data stored in MongoDB Atlas. Performing a client reset loses all local
changes made since the client last successfully synced.


.. tabs-realm-sdks::

   .. tab::
      :tabid: android

      To learn more about client resets with the Android SDK, see the :ref:`Android Client Reset <android-client-resets>` documentation.

   .. tab::
      :tabid: ios

      To learn how to perform a client reset with the iOS SDK, see the :ref:`iOS Client Reset <ios-reset-a-client-realm-file>` documentation.

   .. tab::
      :tabid: node
      
      To learn more about client resets with the Node.js SDK, see the :ref:`Node.js Client Reset <node-client-resets>` documentation.

   .. tab::
      :tabid: react-native
      
      To learn more about client resets with the React Native SDK, see the :ref:`React Native Client Reset <react-native-client-resets>` documentation.

   .. tab::
      :tabid: dotnet

      To learn more about client resets with the .NET SDK, see the :ref:`Android Client Reset <dotnet-client-resets>` documentation.



Unable to Open Realm at Path
----------------------------


Session Specific Errors
-----------------------


Connection level and protocol errors
------------------------------------