.. _client-maximum-offline-time:
.. _backend-compaction:

===========================
Client Maximum Offline Time
===========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

The **client maximum offline time** controls how long a client can
remain offline between synchronization sessions with the {+backend+}
backend. Clients that exceed the client maximum offline time will
experience a :ref:`client reset <client-resets>`.

Background
----------

{+service-short+} keeps a history of changes to underlying data, similar
to the :manual:`MongoDB oplog </core/replica-set-oplog/>`. This history
is used to synchronize data between client {+client-database+} instances
and the {+backend+} backend.

When a client does not check in for a long period of time, the data
stored on that client can predate the beginning of the history of
changes stored in the backend. In order to converge at the same end state
as the backend and all other clients, the client requires the full
history of changes beginning immediately after the client's last
synchronization session. When the client does not have access to that
entire history, it cannot synchronize.

As a result, the client must complete a client reset before it can
resume synchronization. In a client reset scenario, the client deletes
the client-local copy of a {+realm+} and downloads the current state of
that {+realm+} from the backend. Synchronization then resumes from that
point in time as other clients synchronize changes.

The client maximum offline time of your {+app+} controls the number of
days of history your app maintains. As a result, any clients who have not
synchronized data in *more than client maximum offline time days* must
perform a client reset.
