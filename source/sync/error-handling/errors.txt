.. _sync-errors:

===========
Sync Errors
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

While you develop applications using {+sync+}, you may run into errors. This
section lists common errors and describes how to and handle them.

.. note::
   
   If you encounter an error not listed on this page, you can file a `support
   ticket <https://support.mongodb.com/welcome>`_.

.. _sync-protocol-errors:

Sync Protocol Errors 
--------------------

The following table describes :ref:`{+sync-short+} protocol <sync-protocol>`
errors and how to handle them. {+service+} reports errors in your
:doc:`{+sync-short+} logs </logs>`.

.. list-table::
   :header-rows: 1
   :widths: 35 65

   * - Error Name
     - Description

   * - ErrorBadClientFileIdent
     - This error occurs when the client is using a {+realm+} file that the
       server cannot access after :ref:`terminating and re-enabling
       {+sync-short+} <terminating-and-reenabling-sync>`.
       
       This error triggers a client reset. To recover from this error, 
       perform a :ref:`client reset <client-resets>`.

   * - ErrorClientFileUserMismatch
     - This error indicates that the client attempted to synchronize a
       {+realm+} file associated with an identity other than the specified user.
       This may occur if {+sync-short+} is :ref:`terminated and reenabled
       <terminating-and-reenabling-sync>` while the user is
       offline, which invalidates their previous identity.
       
       To recover from this error, delete the local realm file and then re-open
       the realm.

   * - ErrorDivergingHistories
     - This error indicates that the client attempted to synchronize a 
       {+realm+} file that has a different sync history than the server
       {+realm+}. This may occur if {+sync-short+} is :ref:`terminated and
       reenabled <terminating-and-reenabling-sync>` while the
       user is offline, which invalidates their previous sync history.
       
       This error triggers a client reset. To recover from this error, 
       perform a :ref:`client reset <client-resets>`.

   * - ErrorPermissionDenied
     - This error occurs when a user's data access permissions are not
       sufficient for a given request. This can occur if a user attempts to open
       a realm without read permission or modify data without write permission.
       
       To troubleshoot this error, review your :ref:`{+sync-short+} rules
       <sync-rules>` to make sure that users have proper data access
       permissions.
   
   * - ErrorOtherError
     - This error indicates an internal failure that is not covered by a more
       specific error. For example, this might occur when you hit the storage
       limit of a free tier Atlas cluster.

.. _partition-based-sync-errors:

Partition-Based Sync Errors
~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following errors may occur when your {+app+} uses :ref:`Partition-Based Sync 
<partition-based-sync>`.

.. list-table::
   :header-rows: 1
   :widths: 35 65

   * - Error Name
     - Description

   * - ErrorIllegalRealmPath
     - This error indicates that the client attempted to open a {+realm+} with a
       partition value of the wrong type. For example, you might see the error
       message "attempted to bind on illegal realm partition: expected partition
       to have type objectId but found string".
       
       To recover from this error, ensure that the type of the partition value
       used to open the realm matches the partition key type in your
       {+sync-short+} configuration.

.. _flexible-sync-errors:

Flexible Sync Errors
~~~~~~~~~~~~~~~~~~~~

The following errors may occur when your {+app+} uses :ref:`Flexible Sync 
<flexible-sync>`.

.. list-table::
   :header-rows: 1
   :widths: 35 65

   * - Error Name
     - Description

   * - ErrorBadQuery
     - This error indicates the client query is invalid or malformed. This 
       error includes a message that provides details about why the query
       is invalid.

       To recover from this error, you may need to verify the :ref:`query 
       syntax <realm-query-language>` is correct, and that you are using 
       :ref:`query operators that are supported on the server 
       <flexible-sync-rql-limitations>`. Additionally, confirm you are querying
       a :ref:`queryable field <queryable-fields>` in your Flexible Sync 
       configuration.

   * - ErrorServerPermissionsChanged
     - This error indicates that server permissions for the file ident have changed
       since the last time it was used.

       This error triggers a client reset. To recover from this error, 
       perform a :ref:`client reset <client-resets>`.

   * - ErrorInitialSyncNotCompleted
     - This error indicates that the client tried to open a session before the 
       initial sync was complete. This may occur when the app has just
       enabled Sync, and is still in the process of building the Sync history.

       The client attempts to reconnect until this process is complete. Then,
       this error resolves and Sync begins working normally.
    
   * - ErrorWriteNotAllowed
     - This error occurs when a client attempts a write that is disallowed 
       by permissions, or if the write modifies an object outside of the 
       subscription query. 
       
       Consider an example where the client application opens a subscription 
       on a ``Places`` object type with the query ``name = "NY"``. If the 
       client then tries to insert a ``Places`` object with a field 
       ``name: "CT"``, the write triggers an ``ErrorWriteNotAllowed`` because 
       the object is not within the subscription query.

       This error triggers a client reset. To recover from this error, 
       perform a :ref:`client reset <client-resets>`.

.. _mongodb-translator-errors:

MongoDB Translator Errors
-------------------------

The following errors may occur in the translation process between {+sync-short+}
and MongoDB Atlas.

.. list-table::
   :header-rows: 1
   :widths: 35 65

   * - Error Name
     - Description

   * - MongoEncodingError
     - This error occurs when a MongoDB Atlas write (i.e. not a Sync client)
       modifies a document such that it no longer conforms to the app's schema.
       Documents that do not match the schema cannot be synced and any local
       updates to the object represented by such a document will not propagate.
       
       For more information, see :ref:`Unsynced Documents <unsynced-documents>`.
   
   * - TranslatorCorrectiveErasure
     - This error occurs when a synced MongoDB cluster rejects the write
       operation for a propagated {+sync-short+} change. This is usually caused by
       a duplicate key exception, which means that two objects use the same
       primary key. To avoid this error, use an ``ObjectId`` or ``UUID`` as the
       primary key value. Alternatively, ensure that every synced object has a
       unique primary key, even across partitions.

   * - TranslatorFatalError - ChangeStreamHistoryLost
     - This error occurs when old entries in the :manual:`oplog
       </core/replica-set-oplog/>` have expired before the server-side
       "translator" process could read them. Without these entries, the
       translator cannot bring the MongoDB cluster and the Realm object
       server to an equivalent state.
       
       This can happen when:
       
       - Sync is paused for so long that entries fall off the oplog.
       - You drop a collection that the translator was using.
       - The MongoDB cluster is unreachable for too long.
       
       Because the free tier has a shared oplog, it is more vulnerable
       to this error.
       
       To resolve this error, :ref:`terminate
       <terminating-realm-sync>` and :ref:`re-enable Sync
       <re-enable-realm-sync>`.

.. _sync-client-errors:

Sync Client Errors
------------------

The :ref:`sync protocol <sync-protocol>` returns an :sync-server-message:`ERROR`
message when an error appears to have been caused by a connected client. Each
message contains a code number and a description of the error.

To see the full list of sync errors, refer to the :github:`error code list
<realm/realm-core/blob/master/doc/protocol/protocol_1.md#error-codes>` in the
Realm Core GitHub repository.

.. _handle-and-log-sync-errors:

Handle and Log Sync Errors
--------------------------

You can configure the Realm SDKs to handle errors and generate error logs based
on their severity level. To learn how, check out the following examples:

.. tabs-realm-sdks::

   .. tab::
      :tabid: android

      - :ref:`Handle Sync Errors <java-handle-sync-errors>`
      
      - :ref:`Set the Client Log Level <java-set-the-client-log-level>`

   .. tab::
      :tabid: ios

      - :ref:`Handle Sync Errors <ios-handle-sync-errors>`
      
      - :ref:`Set the Client Log Level <ios-set-the-client-log-level>`

   .. tab::
      :tabid: node

      - :ref:`Handle Sync Errors <node-handle-sync-errors>`
      
      - :ref:`Set the Client Log Level <node-set-the-client-log-level>`

   .. tab::
      :tabid: react-native

      - :ref:`Handle Sync Errors <react-native-handle-sync-errors>`
      
      - :ref:`Set the Client Log Level <react-native-set-the-client-log-level>`

   .. tab::
      :tabid: dotnet

      - :ref:`Handle Sync Errors <dotnet-handle-sync-errors>`
      
      - :ref:`Set the Client Log Level <dotnet-set-the-client-log-level>`
