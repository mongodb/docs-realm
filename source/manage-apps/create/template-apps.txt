.. _template-apps:

=============
Template Apps 
=============

.. default-domain:: mongodb

.. contents:: On this page
   :class: singlecol
   :backlinks: none
   :depth: 2
   :local:

Overview
--------

You can get up and running with a {+app+} using one of our premade template apps. 
Template Realm apps bring together many of the building blocks available in {+service+}
and start you off with a prebuilt {+app+} that you can customize. You can create a 
template app in the :ref:`{+ui+} <create-a-realm-app>` or :ref:`{+cli+} <create-app-cli>`
or :ref:`Admin API <create-app-api>`. 

.. tabs::
   
   .. tab:: Realm UI
      :tabid: ui
      
      If you already have a {+app+} in your project, click the 
      :guilabel:`Create App from Template` button in the top right of the screen
      to see a dropdown menu with all the template apps and pick one that suits your needs. 

      If you do not have a {+app+} in your project yet, opening the :guilabel:`Realm` tab
      will bring up a screen with all of the template app options for you to choose from.

      .. seealso::
         
         :ref:`Create a Realm App with Realm UI <create-a-realm-app>` 

   .. tab:: {+cli-bin+}
      :tabid: cli

      Follow the procedure described in the 
      :ref:`Create a Realm App with Realm CLI <create-app-cli>` guide and include
      the ``template`` flag followed by one of the allowed values: web.graphql.todo, 
      web.mql.todo, triggers, ios.swift.todo, android.kotlin.todo, react-native.todo, 
      xamarin.todo.
      
      .. code-block:: shell
         
         realm-cli apps create -n "<your new app name>" --template "<template to use>"

   .. tab:: Admin API
      :tabid: api

      Follow the procedure described in the 
      :ref:`Create a Realm App with Realm API <create-app-api>` guide, making sure to choose
      the :guilabel:`Template` tab in the :guilabel:`Create a new Realm App` step. 
      When calling the create endpoint you should include a request body that looks like this:
      
      .. code-block:: json
         
         { 
            "name": "<AppName>",
            "template_id": "<ChosenTemplateAppId>",
            "data_source": {
               "name": "mongodb-atlas",
               "type": "mongodb-atlas",
               "config": {
                  "clusterName": "<NameOfExistingCluster"
               }
            }
         }
         
When you create a template app, you get certain functionality included, the 
specifics differ depending on the specific app you choose. a list of what is included can 
be seen in the :guilabel:`Welcome to Your Application` section that shows up when you 
navigate to your template app. You can:

1. Learn more about what your chosen template app includes.

2. Follow on screen guides for customizing your app.

3. Download the code for your app to build the frontend (if one is included) and interact
   with the {+app+} through the cli. 

   .. note::
      All the template apps except Database Triggers come with a frontend that uses
      the appropriate :ref:`{+client-database+} SDK <realm-sdks>`. The prebuilt app is a 
      todo app similar to the task tracker app introduced in the :ref:`tutorial <tutorial>`. 

.. figure:: /images/welcome-template-app.png
   :alt: Welcome section for template apps
   :figwidth: 750px
   :width: 750px
