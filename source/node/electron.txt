.. _node-electron-client-quick-start:

=========================
Quick Start with Electron
=========================


.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


Overview
--------


This page contains information to integrate {+service+} into your
Electron application quickly. To learn how to set up an Electron
application with Realm without using any additional frameworks, see the
:ref:`Electron set up <electron-setup>` instructions. If you have
already created an application using `Create React App
<https://reactjs.org/docs/create-a-new-react-app.html>`_ or are
interested in integrating a React App with Realm using Electron, check
out the :ref:`Electron with React set up <react-electron-setup>`
instructions.

Before you begin, ensure you have:

- :ref:`Created a {+app+} <create-a-realm-app>`
- :ref:`Enabled {+sync+} <enable-sync>`

.. admonition:: Version Requirement
   :class: note

   {+service+} works with any of the officially supported Electron
   versions. We recommend using the latest stable release. To see the
   officially supported Electron versions, check out the `Electron
   Releases <https://www.electronjs.org/releases/>`_ document.

.. _electron-setup:

Setup
------

.. include:: /includes/steps/realm-with-electron.rst


Open a Realm
------------

Authenticate a user, define a schema, and :ref:`sync enabled {+sync+}
<enable-sync>`, then call :js-sdk:`Realm.open() <Realm.html#.open>` in your
renderer.js file:

.. code-block:: javascript
   :emphasize-lines: 17

   const app = new Realm.App({ id: "<Your App ID>" }); // create a new instance of the Realm.App
   async function run() {

     // login with an anonymous credential
     await app.logIn(Realm.Credentials.anonymous());

     const DogSchema = {
         name: "Dog",
         properties: {
           _id: 'int',
           name: "string",
           age: "int",
         },
         primaryKey: '_id'
     };

     const realm = await Realm.open({
       schema: [DogSchema],
       sync: {
         user: app.currentUser,
         partitionValue: "myPartition",
       },
     });
     
     // The myPartition realm is now synced to the device. You can
     // access it through the `realm` object returned by `Realm.open()`
   }
   run().catch(err => {
     console.error("Failed to open realm:", err)
   });

.. seealso::

   - :ref:`Sync Data <node-sync-data>`
   - :ref:`Define Your Schema <node-realm-objects>`
   - :ref:`Authenticate a User <node-authenticate>`
