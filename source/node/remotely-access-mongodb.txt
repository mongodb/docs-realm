.. _node-client-remote:

=======================
Remotely Access MongoDB
=======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

Query data stored in MongoDB directly from your client application code
with the MongoDB query language by using MongoDB Realm's
``RemoteMongoClient`` on a ``RealmUser`` object. MongoDB Realm provides
data access :ref:`rules <mongodb-rules>` for collections to securely
retrieve results based on the logged-in user or the content of each
document.


Prerequisites
-------------

Before you can remotely access mongodb, you must:

- Have a :term:`linked Atlas cluster <linked cluster>` 


Use the ``RemoteMongoClient`` to Query For Data in Your Collection
------------------------------------------------------------------

.. note::

   The following code snippet requires that :ref:`Anonymous
   Authentication <anonymous-authentication>` is enabled in your MongoDB
   Realm App.

.. code-block:: javascript
   :emphasize-lines: 17
   
   const Realm = require("realm");
   const appId = "<appId>"; // Set Realm app ID here.
   
   const appConfig = {
     id: appId,
     timeout: 1000,
   };
   
   async function run() {
     let user;
     try {
       const app = new Realm.App(appConfig);
   
       const credentials = Realm.Credentials.anonymous(); // create an anonymous credential
       user = await app.logIn(credentials);
       
       const mongo = user.remoteMongoClient("mongodb-atlas");
       const coll = mongo.db("exampleDB").collection("exampleCollection");
   
       item = await coll.findOne({});
       console.dir(item);
   
     } finally {
       user.logOut();
     }
   }
   run().catch(console.dir);
