.. _node-realm-objects:

=============
Realm Objects
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

{+service+} applications model data as objects composed of field-value
pairs that each contain one or more primitive data types or other
{+service-short+} objects. :term:`{+service-short+} objects <Realm
object>` are essentially the same as regular objects, but they also
include additional features like :ref:`real-time updating data views
<node-live-object>` and reactive :ref:`change event handlers
<node-client-notifications>`.

Every {+service-short+} object has an *object type* that refers to the object's
class. Objects of the same type share an :ref:`object schema
<node-object-schema>` that defines the properties and relationships of those
objects. In most languages you define object schemas using the native
class implementation.

.. example::

   The following code block shows an object schema that describes a Dog.
   Every Dog object must include a ``name`` and ``age`` and may
   optionally include the dog's ``breed`` and a reference to a Person
   object that represents the dog's ``owner``.

   .. tabs-realm-languages::

      .. tab::
          :tabid: javascript

          .. literalinclude:: /examples/Schemas/DogSchema.js
              :language: javascript


Key Concepts
------------




.. _node-property-schema:

Property Schema
~~~~~~~~~~~~~~~

.. include:: /node/include/property-schema.rst

Summary
-------

- {+service-short+} objects are of a **type** defined by a schema.

- {+service-short+} objects are **live**: they always reflect the latest version
  on disk and update automatically when the underlying object changes.

- A {+service-short+} object type may have a **primary key** property to uniquely
  identify each instance of the object type.

- The {+service-short+} object's **schema** defines the properties of the object and
  which properties are optional, which properties have a default value,
  and which properties are indexed.
