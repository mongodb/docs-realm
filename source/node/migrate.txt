.. _node-migrating-from-stitch-to-realm:

============================
Upgrade from Stitch to Realm
============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------
If you have an existing app built with the Stitch SDK, you should migrate your
app to use the new Realm SDK.  While much of the application logic and flow of
information hasn't changed, there are a few changes to how it connects to the
{+backend+} backend.

New Features
------------

- The Realm Node SDK now includes {+client-database+}, which includes
  local object storage and the ability to synchronize document changes
  across devices over the internet.

Deprecated Features
-------------------

- The {+realm+} SDKs do not provide hooks for calling Services (like the 
  :doc:`Twilio <services/twilio>` and :doc:`AWS <services/aws>` services). We 
  recommend using the AWS and/or Twilio ``npm`` packages within {+realm+} 
  functions to connect to these services moving forward. For more information, 
  see :doc:`Upload External Dependencies </functions/upload-external-dependencies>`.

Changes
-------

.. list-table::
   :header-rows: 1
   :widths: 50 50

   * - What's Changed?
     - Solution
   
   * - The backend app connections previously accessed via `StitchAppClient <http://stitch-sdks.s3-website-us-east-1.amazonaws.com/stitch-sdks/js-server/4/interfaces/stitchappclient.html>`__ are now available through :js-sdk:`Realm.App <Realm.App.html>`. Use the ``Realm.App`` class to access authentication functionality such as logging in and getting the current user. The ``Realm.App`` is not an interface to access {+backend+} functions.

     - Migrate all occurrences of ``StitchAppClient`` to ``Realm.App``.

   * - Application users previously accessed via `StitchUser <http://stitch-sdks.s3-website-us-east-1.amazonaws.com/stitch-sdks/js-server/4/interfaces/stitchuser.html>`__ are now accessed through :js-sdk:`Realm.User <Realm.User.html>`.
     - Migrate all occurrences of ``StitchUser`` to ``Realm.User``.

   * - The login API has changed from `stitchAppClient.auth.loginWithCredential() <http://stitch-sdks.s3-website-us-east-1.amazonaws.com/stitch-sdks/js-server/4/interfaces/stitchauth.html#loginwithcredential>`__ to :js-sdk:`Realm.App.logIn() <Realm.App.html#logIn>`
     - Rewrite all authentication logic to use the :ref:`new login API <node-authenticate>`.

   * - The API to log users out has changed from `stitchAppClient.auth.logout() <http://stitch-sdks.s3-website-us-east-1.amazonaws.com/stitch-sdks/js-server/4/interfaces/stitchauth.html#logout>`__ to :js-sdk:`Realm.User.logOut() <Realm.User.html#logOut>`.
     - Rewrite the application logic to log out using the ``Realm.User`` object's ``logOut()`` method.

   * - The Stitch SDK required developers to import authentication credentials from the "mongodb-stitch-server-sdk". The Realm SDK has a class, :js-sdk:`Realm.Credentials <Realm.Credentials.html>` for creating credentials. ``Realm.Credentials`` contains methods to create credentials for each authentication provider.
     - Replace imports of authentication credentials with method calls for each respective authentication provider through the ``Realm.Credentials`` class.

   * - Instead of calling {+backend+} functions using the app client directly via the asynchronous method `stitchAppClient.callFunction() <http://stitch-sdks.s3-website-us-east-1.amazonaws.com/stitch-sdks/js/4/interfaces/stitchappclient.html#callfunction>`__, you must call server {+backend+} functions by using the :js-sdk:`callFunction() <Realm.User.html#callFunction>` synchronous method of a logged in ``Realm.User``. 
     - Call functions ``Realm.User.callFunction()`` instead of an app client. Keep in mind that ``Realm.User.callFunction()`` is a synchronous method.

   * - The MongoDB Data Access API, which contains objects like :js-sdk:`MongoDatabase <Realm-MongoDBDatabase.html>`, and :js-sdk:`MongoCollection <Realm.MongoDBCollection>` was previously accessed 
   by passing the `RemoteMongoClient.Factory <http://stitch-sdks.s3-website-us-east-1.amazonaws.com/stitch-sdks/js-server/4/modules/remotemongoclient.html#factory>`__ to the `StitchAppClient.getServiceClient() <http://stitch-sdks.s3-website-us-east-1.amazonaws.com/stitch-sdks/js-server/4/interfaces/stitchappclient.html#getserviceclient>`__.  It is now accessed via the user object via :js-sdk:`Realm.User.mongoClient <Realm.User.html#mongoClient`.
     - Replace all ``mongoClient`` instatiations with ``Realm.User.mongoClient``.