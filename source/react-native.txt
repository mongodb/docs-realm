.. _react-native-intro:

==============================
MongoDB Realm React Native SDK
==============================

The {+service+} React Native SDK enables client applications using the
`React Native <https://facebook.github.io/react-native/>`__ framework for
iOS and Android to access data stored in local {+realms+} and interact
with backend services like Functions, MongoDB Data Access, and
authentication. React Native enables you to build cross-platform iOS and
Android apps with a single codebase using the `React
<https://reactjs.org/>`__ framework. The React Native SDK supports both
JavaScript and `TypeScript <https://www.typescriptlang.org/>`__
applications.

.. note::

   The React Native SDK does not support JavaScript or TypeScript
   applications written for web browsers. For that use case, you should
   consider the :ref:`Web SDK <web-intro>`. For development on Node.js
   without React, refer to the :ref:`Node.js SDK <node-intro>`
   documentation.

Installation
------------

To learn how to add the {+service+} React Native SDK library as a dependency
to your application, see
:ref:`Install Realm for React Native <react-native-install>`.

Get Started
-----------

To get started quickly with some JavaScript or TypeScript code, see the :ref:`Quick Start
<react-native-client-quick-start>`.


The Realm Data Model
--------------------

You can store a wide variety of data within {+realms+} stored on your
device. With :term:`{+sync+}`, you can share updates to that data across
client devices and {+atlas+}.

For information about the structure of data you can store in {+realms+},
see :ref:`Realms <react-native-realms>`, :ref:`Objects
<react-native-realm-objects>`, and :ref:`Relationships
<react-native-client-relationships>`.

To learn about the results returned from {+realm+} queries, see
:ref:`Collections <react-native-client-collections>`.

Work with Realm Database
------------------------

Once you have defined a data model for your application, you
need to be able to :ref:`write <react-native-realm-database-writes>` and
:ref:`read <react-native-realm-database-reads>` pieces of data to and
from your {+realm+}s.

To learn how to query for data in local {+realms+}, see
:ref:`Query Engine <react-native-client-query-engine>`.

For information about how to react to changes in {+realm+} data, see
:ref:`Notifications <react-native-client-notifications>`.

Work with MongoDB Realm
-----------------------

The React native SDK also connects your {+service-short+} client
application with your {+app+}'s backend services, including Functions,
Services, Webhooks, {+sync+}, and built-in third-party authentication.

To get connected to your {+backend+} app, see
:ref:`Initialize the RealmAppClient <init-appclient>`.

To learn how to connect to a {+backend+} app to call
Functions, query data in an instance of {+atlas+}, and synchronize data
in {+realms+}, see :ref:`Call a Function <react-native-call-a-function>`.

To learn how to handle schema updates in your client application, see
:ref:`Migrations <react-native-client-migrations>`.

To learn how to query for data in MongoDB remotely, see :ref:`Remotely
Access MongoDB <react-native-client-remote>`.

.. toctree::
   :titlesonly:
   :caption: Get Started
   :hidden:

   Install Realm for React Native </react-native/install>
   Quick Start </react-native/quick-start>

.. toctree::
   :titlesonly:
   :caption: The Realm Data Model
   :hidden:

   Collections </react-native/collections>
   Notifications </react-native/notifications>
   Realms </react-native/realms>
   Open and Close a Realm </react-native/open-a-realm>
   Objects </react-native/objects>
   Relationships </react-native/relationships>

.. toctree::
   :titlesonly:
   :caption: Work with Realm Database
   :hidden:

   Reads </react-native/reads>
   Writes </react-native/writes>
   Query Engine </react-native/query-engine>

.. toctree::
   :titlesonly:
   :caption: Work with MongoDB Realm
   :hidden:

   Authenticate a User </react-native/authenticate>
   Manage Email/Password Users </react-native/manage-email-password-users>
   Create & Manage User API Keys </node/create-manage-api-keys>
   Work with Multiple Users </react-native/work-with-multiple-users>
   Call a Function </react-native/call-a-function-from-react-native>
   Sync Data </react-native/sync-data>
   Access MongoDB Remotely </react-native/remotely-access-mongodb>
   MongoDB Data Access <react-native/mongodb>
   Access Custom User Data <react-native/access-custom-user-data>

.. toctree::
   :titlesonly:
   :caption: Reference
   :hidden:

   Migrations </react-native/migrations>
   Auxiliary Files </react-native/auxiliary-files>
   SDK Reference Manual <https://docs.mongodb.com/realm-sdks/js/>
