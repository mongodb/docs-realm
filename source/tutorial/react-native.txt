.. _react-native-tutorial:

=====================
React Native Tutorial
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

MongoDB Realm provides a Node SDK that allows you to create a Mobile Application with
React Native. This tutorial illustrates the creation of a "Task Tracker" React Native
application that allows users to: 

- Sign in to their account with their email and password and sign out later.
- View a list of projects they are a member of.
- View, create, modify, and delete tasks in projects.
- View a list of team members in their project.
- Add and remove team members to their project.

This tutorial should take around 30 minutes.

.. note:: Check Out the Quick Start
   
   If you prefer to explore on your own rather than follow a guided tutorial,
   check out the :ref:`React Native Quick Start
   <react-native-client-quick-start>`. It includes copyable code examples and
   the essential information that you need to set up a MongoDB Realm
   application.

Prerequisites
-------------

Ensure that you have the following:

- `nodejs <https://nodejs.org/dist/latest-v10.x/>`_ version 10.x or later.

- If you plan to run the app on an iOS device or emulator: 
  `Xcode <https://developer.apple.com/xcode/>`__
  version 11.0 or higher, which requires macOS 10.14.4 or higher.

- If you plan to run the app on an Android device or emulator: `Android Studio
  <https://developer.android.com/studio>`_.

- The React Native CLI. Detailed instructions for setting up your development 
  environment, including the CLI tools, can be found in the 
  `React Native docs <https://reactnative.dev/docs/environment-setup>`_.

- :ref:`Set up the backend Realm app <tutorial-task-tracker-create-realm-app>`.

Get Set Up
----------

.. include:: /includes/steps/tutorial-react-native-1.rst


A Look Inside
-------------
For a better understanding of the files used in this tutorial, the following table 
highlights some of the more important files. :

.. cssclass:: config-table
.. list-table::
    :header-rows: 1
    :widths: 30 70
    
    * - File
      - Purpose

    * - getRealmApp.js
      - Provides access to the Realm app instance.

    * - App.js
      - Defines which screens are in the app and sets up the navigation system.

    * - schemas.js
      - Defines the Realm object models used in this app.

    * - providers/AuthProvider.js
      - Defines the AuthProvider, which handles user login, log out, and
        project membership information for the current user.

    * - providers/TasksProvider.js
      - Defines the TasksProvider, which handles fetching, adding, updating,
        and deleting tasks within a project.

    * - components/ActionSheet.js
      - A component that presents the user with a list of actions.

    * - components/AddTask.js
      - A button that, when pressed, prompts the user to enter new task
        information and creates it with the given createTask function.

    * - components/Logout.js
      - A button that handles user log out.

    * - components/ManageTeam.js
      - A list of team members on the current user's project that provides
        controls for adding and removing team members.

    * - components/TaskItem.js
      - A list item that represents a task in a list. When pressed, it presents
        an ActionSheet with actions corresponding to deleting the task or
        updating the task's status.

    * - views/ProjectsView.js
      - The screen that presents a list of projects that the current user is a
        team member of.

    * - views/TasksView.js
      - The screen showing the tasks for a given project. If this is the
        logged-in user's own project, the TasksView includes a button open a
        ManageTeam view.

    * - views/WelcomeView.js
      - The screen that allows a user to log in or register a user.


Build The App
-------------

.. include:: /includes/steps/tutorial-react-native-2.rst

What's Next?
------------

- Read our :ref:`React Native SDK <react-native-intro>` documentation.
- Try the :ref:`{+service+} Backend tutorial <backend-tutorial>`.
- Find developer-oriented blog posts and integration tutorials on the `MongoDB Developer Hub <https://developer.mongodb.com>`__.
- Join the `MongoDB Community forum <https://developer.mongodb.com/community/forums/c/realm/9>`__ to learn from other MongoDB developers and technical experts.

.. include:: /includes/tutorial-request-for-feedback-note.rst
