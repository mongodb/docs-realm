.. _ios-call-a-function:

===============
Call a Function
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 3
   :class: singlecol

Overview
--------

You can call a :doc:`function </functions>` from a connected client
application.

Usage
-----

The examples in this section demonstrate calling a simple function named
``sum`` that takes two arguments, adds them, and returns the result:

.. code-block:: javascript

   // sum: adds two numbers
   exports = function(a, b) {
     return a + b;
   };

Call from a Client Application
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To execute a function from the iOS Client SDK, use the ``functions`` method
of the app. 

.. code-block:: swift

   let app = App(id: "my-realm-app-id")
   // ... log in ...
   let user = app.currentUser()!

   // The dynamic member name `sum` is directly associated with the function
   // name. The first argument is the `BSONArray` of arguments to be provided
   // to the function. The trailing closure is the completion handler
   // to call when the function call is complete. This handler is executed on
   // a non-main global `DispatchQueue`.
   user.functions.sum([1, 2]) { sum, error in
       guard error == nil else {
           print("Function call failed: \(error!.localizedDescription)")
           return
       }
       guard case let .double(value) = sum else {
           print("Unexpected non-double result: \(sum ?? "nil")");
           return
       }
       print("Called function: \(value)")
       assert(value == 3)
   }
