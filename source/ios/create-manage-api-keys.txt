.. _ios-create-manage-api-keys:

========================
Create & Manage API Keys
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

.. _ios-api-key-create-user-key:

Create a User API Key
---------------------

.. tabs-realm-languages::
   
   .. tab::
      :tabid: swift

      .. code-block:: swift
         :emphasize-lines: 6

         let app = App(id: "my-realm-app-id")
         // ... log in ...
         let user = app.currentUser()!
         let client = user.apiKeyAuth()
         
         client.createApiKey(named: "someKeyName") { (maybeApiKey, error) in
             guard error == nil else {
                   fatalError("Failed to create key: \(error!)")
             }
             guard let apiKey = maybeApiKey else {
                   fatalError("Failed to create key! Error unknown")
             }
             // Use apiKey
         }

   .. tab::
      :tabid: objective-c

      .. code-block:: objective-c
         :emphasize-lines: 6

         RLMApp *app = [RLMApp appWithId:@"myappid"];
         // ... log in ...
         RLMUser *user = [app currentUser];
         RLMAPIKeyAuth *client = [user apiKeyAuth];

         [client createApiKeyWithName:@"someKeyName" completion:^(RLMUserAPIKey *apiKey, NSError *error) {
            if (error != nil) {
               // ... handle Error ...
            } else {
               // ... use apiKey ...
            }
         }];

.. _ios-api-key-look-up-user-key:

Look up a User API Key
----------------------

.. tabs-realm-languages::
   
   .. tab::
      :tabid: swift

      .. code-block:: swift
         :emphasize-lines: 7, 12

         let app = App(id: "my-realm-app-id")
         // ... log in ...
         let user = app.currentUser()!
         let client = user.apiKeyAuth()
         
         // Fetch a specific API key by ObjectId
         client.fetchApiKey(ObjectId("someObjectId")) { (maybeApiKey, error) in
               // ...
         }
         
         // Fetch all API keys
         client.fetchApiKeys { (keys, error) in
               guard error == nil else {
                  fatalError("Failed to fetch keys: \(error!)")
               }
               for key in keys! {
                  // use key
               }
         }

   .. tab::
      :tabid: objective-c

      .. code-block:: objective-c
         :emphasize-lines: 9, 18

         RLMApp *app = [RLMApp appWithId:@"myappid"];
         // ... log in ...
         RLMUser *user = [app currentUser];
         RLMAPIKeyAuth *client = [user apiKeyAuth];

         // Fetch API key by a specific ObjectId
         NSError *error = nil;
         RLMObjectId *objectId = [[RLMObjectId alloc] initWithString:@"someObjectId" error:&error];
         [client fetchApiKey:objectId completion:^(RLMUserAPIKey *apiKey, NSError *error) {
            if (error != nil) {
               // ... handle error ...
            } else {
               // ... use apiKey ...
            }
         }];

         // Fetch all API keys
         [client fetchApiKeysWithCompletion:^(NSArray<RLMUserAPIKey *> *keys, NSError *error) {
            if (error != nil) {
               // ... handle error ...
            } else {
               for (RLMUserAPIKey *key in keys) {
                     // ... use key ...
               }
            }
         }];


.. _ios-api-key-enable-disable:

Enable or Disable an API Key
----------------------------

.. tabs-realm-languages::
   
   .. tab::
      :tabid: swift

      .. code-block:: swift
         :emphasize-lines: 7, 12
      
         let app = App(id: "my-realm-app-id")
         // ... log in ...
         let user = app.currentUser()!
         let client = user.apiKeyAuth()

         // Enable the API key
         client.enableApiKey(ObjectId("someObjectId")) { (error) in
             // ...
         }
      
         // Disable the API key
         client.disableApiKey(apiKey.objectId) { (error) in
             // ...
         }
   
   .. tab::
      :tabid: objective-c

      .. code-block:: objective-c
         :emphasize-lines: 8, 12

         RLMApp *app = [RLMApp appWithId:@"myappid"];
         // ... log in ...
         RLMUser *user = [app currentUser];
         RLMAPIKeyAuth *client = [user apiKeyAuth];
         
         RLMUserAPIKey *apiKey = getExampleApiKey(); // Get an API key

         [client enableApiKey:[apiKey objectId] completion:^(NSError *error) {
            // Handle error if any. Otherwise, enable was successful.
         }];

         [client disableApiKey:[apiKey objectId] completion:^(NSError *error) {
            // Handle error if any. Otherwise, disable was successful.
         }];

.. _ios-api-key-delete:

Delete an API Key
-----------------

.. tabs-realm-languages::
   
   .. tab::
      :tabid: swift

      .. code-block:: swift
         :emphasize-lines: 6

         let app = App(id: "my-realm-app-id")
         // ... log in ...
         let user = app.currentUser()!
         let client = user.apiKeyAuth()
         
         client.deleteApiKey(apiKey.objectId) { (error) in
             guard error == nil else {
                 fatalError("Failed to delete key: \(error!)")
             }
             // Key deleted
         }

   .. tab::
      :tabid: objective-c

      .. code-block:: objective-c
         :emphasize-lines: 8

         RLMApp *app = [RLMApp appWithId:@"myappid"];
         // ... log in ...
         RLMUser *user = [app currentUser];
         RLMAPIKeyAuth *client = [user apiKeyAuth];
         
         RLMUserAPIKey *apiKey = getExampleApiKey(); // Get an API key

         [client deleteApiKey:[apiKey objectId] completion:^(NSError *error) {
            // Handle error if any. Otherwise, delete was successful.
         }];
