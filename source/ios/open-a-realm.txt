.. _ios-open-realm:

======================
Open and Close a Realm
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Open a Synced Realm
-------------------
To open a synced {+realm+}, call 
:swift-sdk:`asyncOpen <Structs/Realm.html#/s:10RealmSwift0A0V9asyncOpen13configuration13callbackQueue0F0AC05AsyncD4TaskVAC13ConfigurationV_So17OS_dispatch_queueCyACSg_s5Error_pSgtctFZ>`, 
passing in the user's  
:swift-sdk:`Configuration <Structs/Realm/Configuration.html>` object, which  
includes the partition name. The following code demonstrates this:

.. tabs-realm-languages::
   
   .. tab::
      :tabid: swift

      .. literalinclude:: /examples/generated/code/start/OpenCloseRealm.codeblock.open-synced-realm.swift
         :language: swift

   .. tab::
      :tabid: objective-c

      .. literalinclude:: /examples/generated/code/start/OpenCloseRealm.codeblock.open-synced-realm.m
         :language: objectivec

In the above example, the code shows how to open the realm {+realm+}
*asynchronously* by using ``asyncOpen()``. You can also open a realm
synchronously by using one of the :swift-sdk:`Realm() <Structs/Realm.html>`
initializers. This works if the device is offline, but may lead to temporary
data inconsistencies while the remote data is downloaded.

.. tabs-realm-languages::

   .. tab::
      :tabid: swift

      .. literalinclude:: /examples/generated/code/start/OpenCloseRealm.codeblock.open-synced-realm-synchronously.swift
         :language: swift

   .. tab::
      :tabid: objective-c

      .. literalinclude:: /examples/generated/code/start/OpenCloseRealm.codeblock.open-synced-realm-synchronously.m
         :language: objectivec


Open a Local (Non-Synced) Realm
-------------------------------
When opening a local (non-synced) {+realm+}, you pass a custom 
:swift-sdk:`Configuration <Structs/Realm/Configuration.html>` object that 
must **not** contain a 
:swift-sdk:`SyncConfiguration <Structs/Realm/Configuration.html#/s:10RealmSwift0A0V13ConfigurationV04syncC0AA04SyncC0VSgvp>` 
object. The following example uses the
:swift-sdk:`fileURL <Structs/Realm/Configuration.html#/s:10RealmSwift0A0V13ConfigurationV7fileURL10Foundation0E0VSgvp>`
and
:swift-sdk:`readOnly <Structs/Realm/Configuration.html#/s:10RealmSwift0A0V13ConfigurationV8readOnlySbvp>`
properties to open a *readonly* local {+realm+} with a specific file location:

.. tabs-realm-languages::
   
   .. tab::
      :tabid: swift

      .. literalinclude:: /examples/generated/code/start/OpenCloseRealm.codeblock.open-local-realm.swift
         :language: swift

   .. tab::
      :tabid: objective-c

      .. literalinclude:: /examples/generated/code/start/OpenCloseRealm.codeblock.open-local-realm.m
         :language: objectivec

Close a Realm
-------------
There is no need to manually close a {+realm+} in Swift or Objective-C. When a {+realm+} goes out of 
scope and is removed from memory due to 
`ARC <https://docs.swift.org/swift-book/LanguageGuide/AutomaticReferenceCounting.html>`__,
the {+realm+} is closed.
