.. _ios-open-realm:

======================
Open and Close a Realm
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Open a Synced Realm
-------------------
To open a synced realm, you call 
:swift-sdk:`asyncOpen <Structs/Realm.html#/s:10RealmSwift0A0V9asyncOpen13configuration13callbackQueue0F0AC05AsyncD4TaskVAC13ConfigurationV_So17OS_dispatch_queueCyACSg_s5Error_pSgtctFZ>`, 
passing in a custom 
:swift-sdk:`Configuration <Structs/Realm/Configuration.html>` object that contains 
a :swift-sdk:`SyncConfiguration <Structs/Realm/Configuration.html#/s:10RealmSwift0A0V13ConfigurationV04syncC0AA04SyncC0VSgvp>` 
object. For example, the following code demonstrates how to create a realm with 
specific sync settings created using a ``SyncConfiguration`` object:

.. code-block:: swift

   let syncConfig = SyncConfiguration(user: user, partitionValue: "my project")
   let config = Realm.Configuration(syncConfiguration: syncConfig)
        
   Realm.asyncOpen(configuration: config) { realm, error in
      if let realm = realm {
         // Realm successfully opened
      } else if let error = error {
         // Handle error that occurred while opening the Realm.
      }
   }


In the above example, the code shows how to open the realm *asynchronously* by using 
``asyncOpen``. You can also open a realm *synchronously* by using one of the 
:swift-sdk:`Realm() <Structs/Realm.html>` initializers, but this may 
lead to temporary data inconsistencies while the remote data is downloaded, and 
is generally not recommended. 

.. code-block:: swift

   let realm = try! Realm(configuration: config)

Open a Local (Non-Synced) Realm
-------------------------------
When opening a local (non-synced) realm, you pass a custom 
:swift-sdk:`Configuration <Structs/Realm/Configuration.html>` object that 
must **not** contain a 
:swift-sdk:`SyncConfiguration <Structs/Realm/Configuration.html#/s:10RealmSwift0A0V13ConfigurationV04syncC0AA04SyncC0VSgvp>` 
object. The following example uses the
:swift-sdk:`fileURL <Structs/Realm/Configuration.html#/s:10RealmSwift0A0V13ConfigurationV7fileURL10Foundation0E0VSgvp>`
and
:swift-sdk:`readOnly <Structs/Realm/Configuration.html#/s:10RealmSwift0A0V13ConfigurationV8readOnlySbvp>`
properties to open a *readonly* local realm with a specific file location:

.. code-block:: swift

   let config = Realm.Configuration(
      fileURL: Bundle.main.url(forResource: "MyBundledData", withExtension: "realm"),
      readOnly: true)

   // Open the Realm with the configuration
   let realm = try! Realm(configuration: config)

Close a Realm
-------------
It is important to remember to call the ``close()`` method when done with a 
realm instance. Failing to do so can lead to OutOfMemoryError as the native 
resources cannot be freed.

.. code-block:: swift

   realm.close()
