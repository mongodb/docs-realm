.. _mongodb-service:
.. _mongodb-data-access:

======================
MongoDB Atlas Overview
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. toctree::
   :titlesonly:
   :hidden:

   Atlas Clusters & Data Lakes </mongodb/data-sources>

.. toctree::
   :titlesonly:
   :caption: Reference
   :hidden:
   
   MongoDB Actions </mongodb/actions>
   Watch for Changes </mongodb/watch-documents>
   CRUD & Aggregation APIs </mongodb/crud-and-aggregation-apis>

Overview
--------

{+service+} provides a first-class service interface for `{+atlas+}
<https://www.mongodb.com/realm?tck=docs_realm#atlas-form-container>`_ that 
enables secure querying of one or more {+atlas-short+} data sources. You can use
the :manual:`Query API </tutorial/query-documents>` syntax to access your data 
directly in your client application code or from a :doc:`{+service-short+} Function
</functions>`.

The :ref:`MongoDB service <mongodb-service>` secures your data with a
dynamic, role-based :guilabel:`Rules` engine that proxies and modifies
incoming queries
based on rules that you define. There are three types of MongoDB
collection rules: :ref:`roles <roles>`, :ref:`filters
<filters>`, and :ref:`schemas <schemas>`.

Get Started
~~~~~~~~~~~

To get started with the MongoDB service, :doc:`link a data source to
your application </mongodb/link-a-data-source>` and :doc:`define roles
and permissions </mongodb/define-roles-and-permissions>` for a
collection. After you've created at least one role, you can start to
work with data in the collection.

.. _crud-aggregation-operations:

CRUD & Aggregation Operations
-----------------------------

{+service+} allows you to securely work with data in a {+atlas+} cluster
directly from your client applications and :doc:`Functions </functions>`
using standard, platform-idiomatic MongoDB query syntax. You can also
access a linked `{+atlas+} Data Lake
<https://www.mongodb.com/atlas/data-lake?tck=docs_realm>`_ from a
:ref:`system function <system-functions>`.

The following guides demonstrate how to use :doc:`MongoDB service
actions </mongodb/actions>` to work with data in a :ref:`linked data
source <link-a-data-source>` from a function:

- :doc:`Read </functions/mongodb/read>`
- :doc:`Insert Documents </mongodb/insert-documents>`
- :doc:`Update Documents </mongodb/update-documents>`
- :doc:`Delete Documents </mongodb/delete-documents>`
- :doc:`Watch for Document Changes </mongodb/watch-documents>`
- :doc:`Run Aggregation Pipelines </mongodb/run-aggregation-pipelines>`
- :doc:`Bulk Writes </mongodb/bulk-write>`

.. important:: Define Collection Rules

   When working with a linked {+atlas+} cluster outside of a
   :ref:`system function <system-functions>`, {+backend+} dynamically
   determines which documents and fields in a collection each
   :doc:`application user </authentication>` can read and write for all
   incoming query operations by evaluating :ref:`collection rules
   <rules>` that you define.

   **If you do not define rules for a collection, queries on
   the collection will fail.**   

.. note:: Advanced MongoDB Queries

   {+service+} does not support all MongoDB CRUD and Aggregation
   operations when you query MongoDB as a specific
   :doc:`user </authentication>`. You can bypass this limitation by
   querying MongoDB from a :term:`system function` that
   runs as the :ref:`system user <system-user>`, which has
   access to the full MongoDB CRUD and Aggregation APIs.

   For more information on which operations are unsupported,
   see :doc:`CRUD & Aggregation APIs
   </mongodb/crud-and-aggregation-apis>`.

Related Content
---------------

Configuration Guides
~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 20 50

   * - Guide
     - Description

   * - :doc:`Link a MongoDB Data Source </mongodb/link-a-data-source>`
     - Learn how to connect a MongoDB Atlas cluster or Data Lake to your application.

   * - :doc:`Define Roles and Permissions </mongodb/define-roles-and-permissions>`
     - Learn how to set up role based data access controls on your
       MongoDB collections.

   * - :doc:`Filter Incoming Queries </mongodb/filter-incoming-queries>`
     - Learn how to add additional query parameters to incoming queries
       to secure data and improve query efficiency.

   * - :doc:`Configure Advanced Rules </mongodb/configure-advanced-rules>`
     - Learn how to specify complex MongoDB collection rules by
       modifying the underlying configuration file directly in the
       {+ui+}.

   * - :doc:`Read Preference </mongodb/read-preference>`
     - Learn how to specify which replica set members {+service+} reads data
       from.

Usage Guides
~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 20 50

   * - Guide
     - Description

   * - :doc:`Insert Documents </mongodb/insert-documents>`
     - Learn how to insert one or more documents into a MongoDB
       collection.

   * - :doc:`Find Documents </functions/mongodb/read>`
     - Learn how to find documents in a collection, including
       patterns and operators that you can use to refine your query.

   * - :doc:`Update Documents </mongodb/update-documents>`
     - Learn how to update documents in a collection, including
       operators for manipulating specific fields.

   * - :doc:`Delete Documents </mongodb/delete-documents>`
     - Learn how to remove one or more documents from a MongoDB
       collection.

   * - :doc:`Run Aggregation Pipelines </mongodb/run-aggregation-pipelines>`
     - Learn how to execute an :manual:`aggregation pipeline
       </core/aggregation-pipeline>` on a collection to calculate
       summary statistics and manipulate documents.

   * - :doc:`Bulk Writes </mongodb/bulk-write>`
     - Learn how to execute an :manual:`bulkWrite
       </core/bulk-write-operations>` operation on a collection.

   * - :doc:`Wire Protocol </mongodb/wire-protocol>`
     - Learn how to connect to MongoDB through {+service+} using standard
       MongoDB driver clients.

Reference Documentation
~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 20 50

   * - Guide
     - Description

   * - :doc:`MongoDB Actions </mongodb/actions>`
     - Look up detailed examples and parameters for all MongoDB service
       actions.

   * - :doc:`CRUD & Aggregation APIs </mongodb/crud-and-aggregation-apis>`
     - Look up support for specific MongoDB client operations in
       {+service+}.
