.. _appconfig-data_sources:

=======================================
MongoDB Data Source Configuration Files
=======================================

.. default-domain:: mongodb

.. code-block:: none
   
   app/
   └── data_sources/
       └── <service name>/
           ├── config.json
           └── <database>/
               └── <collection>/
                   ├── schema.json
                   └── rules.json

Service Configuration
---------------------

.. important::

   MongoDB service names are not necessarily the same as their linked data
   source's name in Atlas. You define the service name for a data source when
   you link it to your application. For linked clusters, the default MongoDB
   service name is ``mongodb-atlas``. For linked Data Lakes, the default service
   name is ``mongodb-datalake``.

MongoDB Clusters
~~~~~~~~~~~~~~~~

.. code-block:: json
   :caption: config.json
   
   {
     "name": "<Service Name>",
     "type": "mongodb-atlas",
     "config": {
       "clusterName": "<Atlas Cluster Name>",
       "readPreference": "<Read Preference>",
       "wireProtocolEnabled": <Boolean>
     }
   }

.. list-table::
   :header-rows: 1
   :widths: 10 30
   
   * - Field
     - Description
   
   * - | ``name``
       | String
     - The name of the MongoDB  service. The name may be at most 64 characters
       long and can only contain ASCII letters, numbers, underscores,
       and hyphens. For clusters, the default name is ``mongodb-atlas``.
   
   * - | ``type``
       | String
     - For MongoDB Atlas clusters, this value is always ``"mongodb-atlas"``.
   
   * - | ``config.clusterName``
       | String
     - The name of the service's linked cluster in MongoDB Atlas.

   * - | ``config.readPreference``
       | String
     - The :ref:`read preference <read-preference>` mode for queries sent
       through the service.
       
       .. include:: /mongodb/tables/read-preference-modes.rst
   
   * - | ``config.wireProtocolEnabled``
       | Boolean   
     - If ``true``, clients may :ref:`connect to the app over the MongoDB Wire
       Protocol <wire-protocol-connect>`.

MongoDB Data Lakes
~~~~~~~~~~~~~~~~~~

.. code-block:: json
   :caption: config.json

   {
     "name": "<Service Name>",
     "type": "datalake",
     "config": {
        "dataLakeName": "<Data Lake Name>"
      }
    }

.. list-table::
   :header-rows: 1
   :widths: 10 30
   
   * - Field
     - Description
   
   * - | ``name``
       | String
     - The name of the MongoDB  service. The name may be at most 64 characters
       long and can only contain ASCII letters, numbers, underscores,
       and hyphens. For clusters, the default name is ``mongodb-atlas``.
       For Data Lakes, it is ``mongodb-datalake``.
   
   * - | ``type``
       | String
     - For MongoDB Atlas clusters, this value is always ``"mongodb-atlas"``.
       For Data Lakes, this value is always ``"datalake"``.
   
   * - | ``config.dataLakeName``
       | String   
     - The name of the Data Lake that you want to link to your application.

Databases & Collections
-----------------------

Collection Schema
~~~~~~~~~~~~~~~~~

If you want to enforce a :ref:`document schema <document-schema-config>` for a
collection, you can define a ``schema.json`` configuration file that contains a
JSON schema for the documents. The root level schema must be an :ref:`object
schema <schema-type-objects>`, which has the following form:

.. code-block:: json
   :caption: /<service>/<database>/<collection>/schema.json
   
   {
     "title": "<Object Type Name>",
     "bsonType": "object",
     "properties": {
       "<Property Name>": { <Schema> },
       ...
     }
   }

Collection Rules
~~~~~~~~~~~~~~~~

If the data source is not a :doc:`synced cluster </sync>` or a :ref:`data lake
<data-lake-caveats>`, then you can define collection-level rules in a
collection's ``rules.json`` configuration file.

.. code-block:: json
   :caption: /<service>/<database>/<collection>/rules.json
   
   {
     "database": "<Database Name>",
     "collection": "<Collection Name>",
     "roles": [<Query Role>],
     "filters": [<Query Filter>]
   }

.. list-table::
   :widths: 10 30
   :header-rows: 1

   * - Field
     - Description
   
   * - | ``database``
       | String
     - The name of the database that holds the collection.
   
   * - | ``collection``
       | String
     - The name of the collection.

   * - | ``roles``
       | Array<Document>
     - An array of :ref:`query role configuration documents
       <query-role-config>`, which have the following form:
       
       .. include:: /mongodb/tables/query-role-configuration.rst

   * - | ``filters``
       | Array<Document>
     - An array of :ref:`query filter configuration documents
       <query-filter-config>`, which have the following form:

       .. include:: /mongodb/tables/query-filter-params.rst
