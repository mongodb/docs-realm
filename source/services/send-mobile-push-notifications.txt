==============================
Send Mobile Push Notifications
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

You can send native push notifications to mobile client applications
using the :doc:`Push Notification Service
</services/push-notifications>`.

Management Interface
--------------------

The :guilabel:`Push Notifications` screen in the {+ui+} lets you
write notification drafts, send notifications to users and define
:ref:`notification rules <notification-rules>`.

There are four tabs in the :guilabel:`Push Notifications` screen:

.. list-table::
   :header-rows: 1
   :widths: 10 30

   * - Tab Name
     - Description

   * - :guilabel:`Draft`
     - In the Draft tab, you can view a list of the draft messages. For
       the draft messages, you can:

       - Duplicate draft messages

       - Edit draft messages

       - Delete draft messages

   * - :guilabel:`Sent`
   
     - The Sent tab shows the messages that {+service+} has already sent to registered clients. From here, you can view a list of the sent messages. For the sent messages, you can:

       - Resend sent messages.

       - Duplicate sent messages.

   * - :guilabel:`Config`
     - In the Config tab, you provide the :abbr:`FCM (Firebase Cloud
       Messaging)` credentials (Sender ID and Legacy API key).

   * - :guilabel:`Rules`
     - You can optionally specify :ref:`notification-rules` to restrict the types of push notifications that your application sends.

Send a Push Notification
------------------------

You can send new Push Notifications from the :guilabel:`Push
Notifications` page. Click the :guilabel:`Send New Notification` button
to open the :guilabel:`Send New Notification` dialog. In this dialog,
you provide the notification message, label, and the relevant topic
audience.

.. figure:: /images/new-push-message.png
      :alt: Sending a new Push Notification
      :figwidth: 400px

Set Up Clients to Receive Push Notifications
--------------------------------------------

.. tabs::

   tabs:
     - id: android
       name: Android SDK
       content: |
         The general process of integrating Push Notifications in an Android 
         application is as follows:

         1. Add a dependency for :abbr:`FCM (Firebase Cloud Messaging)`.

         #. Create an instance of :java-sdk:`Push
            <io/realm/mongodb/push/Push.html>`.

         #. Use the :java-sdk:`push.registerDevice()
            <io/realm/mongodb/push/Push.html#registerDevice-java.lang.String->`
            or :java-sdk:`push.registerDeviceAsync()
            <io/realm/mongodb/push/Push.html#registerDeviceAsync-java.lang.String-io.realm.mongodb.App.Callback->`
            methods to register the client for push notifications.

         #. Use FirebaseMessaging's :fcm:`subscribeToTopic()
            <reference/android/com/google/firebase/messaging/FirebaseMessaging>`
            to subscribe to topics.

         #. Create a class that extends the abstract
            :fcm:`FirebaseMessagingService
            <reference/android/com/google/firebase/messaging/FirebaseMessagingService>`
            and implements the :fcm:`onMessageReceived()
            <reference/android/com/google/firebase/messaging/FirebaseMessagingService.html#onMessageReceived(com.google.firebase.messaging.RemoteMessage)>`
            method. This class handles communication with :abbr:`FCM
            (Firebase Cloud Messaging)`.

         #. Update :file:`AndroidManifest.xml` file for your Android project to
            register your ``FirebaseMessagingService``-derived class and a receiver
            for your application.

         To see the latest information and detailed steps on FCM integration with Android Clients, see the official :fcm:`Set up a Firebase Cloud Messaging client app on Android <cloud-messaging/android/client>` guide. 

     - id: ios
       name: iOS SDK
       content: |
         To use FCM with {+service-short+} in an iOS app, follow these
         general steps:

         1. Create a valid Apple Push Notification service (APNs) certificate through the `Apple Developer Member center <https://developer.apple.com/membercenter/index.action>`_.

         #. Copy the :fcm:`GoogleService-Info.plist <cloud-messaging/ios/client#add_firebase_to_your_app>` file to your XCode project.

         #. Configure FCM and add your iOS app. When you register your app, FCM will return a registration token.

         To see the latest information and detailed steps on FCM integration with iOS Clients, see the official :fcm:`Set up a Firebase Cloud Messaging client app on iOS <cloud-messaging/ios/client>` guide. 

   
