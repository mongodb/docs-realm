.. _swiftui-pass-data-between-views:

=================================
Pass Data Between Views - SwiftUI
=================================

.. meta::
   :description: Pass SDK objects explicitly to child views, access data in child views with property wrappers, or pass environment values to access the database. 
   :keywords: Realm, Swift SDK, code example

.. facet::
  :name: genre
  :values: reference

.. facet::
   :name: programming_language
   :values: swift

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Atlas Device SDK provides several ways to pass SDK data between views:

- Pass SDK objects to a view
- Use environment injection to:

  - Inject an opened database into a view
  - Inject a database configuration into a view

Pass SDK Objects to a View
~~~~~~~~~~~~~~~~~~~~~~~~~~

When you use the ``@ObservedRealmObject`` or ``@ObservedResults`` property 
wrapper, you implicitly open a database and retrieve the specified objects 
or results. You can then pass those objects to a view further down the 
hierarchy.

.. literalinclude:: /examples/generated/swiftui/PassObjectsToView.snippet.implicitly-open-realm-and-pass-objects.swift
   :language: swift

.. _swiftui-pass-environment-values:

Pass Environment Values
~~~~~~~~~~~~~~~~~~~~~~~

:apple:`Environment <documentation/swiftui/environment>` injection is a 
useful tool in SwiftUI development with the SDK. 
Atlas Device SDK property wrappers provide different ways for you to 
work with environment values when developing your SwiftUI application.

.. _swiftui-inject-database-as-environment-value:

Inject an Opened Database
`````````````````````````

You can inject a database that you opened in another SwiftUI view into 
a view as an environment value. The property wrapper uses this passed-in 
database to populate the view:

.. code-block:: swift

   ListView()
      .environment(\.realm, realm)

.. _swiftui-inject-database-configuration:

Inject a Database Configuration
```````````````````````````````

You can use a database other than the default database by passing a different 
configuration in an environment object.

.. code-block:: swift

   LocalOnlyContentView()
   .environment(\.realmConfiguration, Realm.Configuration( /* ... */ ))
