============
Transactions
============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

The code snippets on this page demonstrate how to execute writes across
multiple MongoDB queries in a single transaction that will "roll back"
changes in the event of an error.

.. include:: /mongodb/crud-snippets/setup.rst

Implementation
--------------

To perform a transaction:

1. Obtain and start a client session with ``client.startSession()``.

#. (Optional) Define read and write settings for the transaction. Pass
   this object to the method called in the next step.

#. Use the ``session.withTransaction()`` method to start a transaction.

#. Execute the MongoDB queries that you would like to group together in
   your transaction in the callback for this function, which needs to
   either be ``async`` or return a ``Promise``. If the callback
   encounters an error, you should abort the transaction with
   ``session.abortTransaction()``, which you can handle in a ``Promise``
   rejection handler with ``.catch()`` or a ``try/catch``.

#. When the transaction is complete, call ``session.endSession()`` to
   end the session and free resources.

The following example creates two users, "henry" and "michelle", and
a uses a transaction to move "browniePoints" between those users
atomically:

.. literalinclude:: /mongodb/crud-snippets/transactions/transactions.js
   :language: javascript
