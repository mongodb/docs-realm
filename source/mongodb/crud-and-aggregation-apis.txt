.. _mongodb-crud-and-aggregation-apis:

=======================
CRUD & Aggregation APIs
=======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _mongodb-crud-and-aggregation-apis-overview:

Overview
--------

You can access most of the CRUD and Aggregation functionality of MongoDB
version 3.6 with the :doc:`MongoDB service </mongodb>`; however, {+service+}
does not support all operations available in standard tools and clients.
This page lists specific MongoDB operations that are not available when
you connect to {+atlas+} through {+backend+}. For a high-level overview of
MongoDB feature availability in {+service+}, see
:doc:`Service Limitations </mongodb/service-limitations>`.

.. note::

   The following tables track operation support with the labels "User
   Function" and ":term:`System Function <system function>`". A
   "User Function" is a :term:`Function <{+service-short+} Function>` run
   using an :ref:`application user's user context only
   <function-active-user>`. This is the default behavior for all
   Functions, and in this kind of Function all
   rules, roles, and permissions apply to the active
   user. A "System Function" is a Function run without regard
   for rules, roles, and permissions. You can learn more about how to
   run a Functions as a :term:`system user` in the
   :ref:`Functions overview <function-system-user>`.

.. _mongodb-crud-and-aggregation-apis-crud-operations:

CRUD Operations
---------------

.. _mongodb-crud-and-aggregation-apis-query-operators:

Query Operators
~~~~~~~~~~~~~~~

{+service+} supports most :manual:`query operators
</reference/operator/query>` for queries that run in a
:ref:`user function <function-active-user>`. However, some evaluation
operators and all geospatial and bitwise operators are only available
in :ref:`system functions <function-system-user>`.

Comparison Operator Availability
++++++++++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operation
     - User Function
     - System Function

   * - :manual:`$eq </reference/operator/query/eq>`
     - Yes
     - Yes

   * - :manual:`$gt </reference/operator/query/gt>`
     - Yes
     - Yes

   * - :manual:`$gte </reference/operator/query/gte>`
     - Yes
     - Yes

   * - :manual:`$in </reference/operator/query/in>`
     - Yes
     - Yes

   * - :manual:`$lt </reference/operator/query/lt>`
     - Yes
     - Yes

   * - :manual:`$lte </reference/operator/query/lte>`
     - Yes
     - Yes

   * - :manual:`$ne </reference/operator/query/ne>`
     - Yes
     - Yes

   * - :manual:`$nin </reference/operator/query/nin>`
     - Yes
     - Yes

Logical Operator Availability
+++++++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operation
     - User Function
     - System Function

   * - :manual:`$and </reference/operator/query/and>`
     - Yes
     - Yes

   * - :manual:`$not </reference/operator/query/not>`
     - Yes
     - Yes

   * - :manual:`$nor </reference/operator/query/nor>`
     - Yes
     - Yes

   * - :manual:`$or </reference/operator/query/or>`
     - Yes
     - Yes

Array Operator Availability
+++++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operation
     - User Function
     - System Function

   * - :manual:`$all </reference/operator/query/all>`
     - Yes
     - Yes

   * - :manual:`$elemMatch </reference/operator/query/elemMatch>`
     - Yes
     - Yes

   * - :manual:`$size </reference/operator/query/size>`
     - Yes
     - Yes

Element Operator Availability
+++++++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operation
     - User Function
     - System Function

   * - :manual:`$exists </reference/operator/query/exists>`
     - Yes
     - Yes

   * - :manual:`$type </reference/operator/query/type>`
     - Yes
     - Yes

Evaluation Operator Availability
++++++++++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operation
     - User Function
     - System Function

   * - :manual:`$mod </reference/operator/query/mod>`
     - Yes
     - Yes

   * - :manual:`$expr </reference/operator/query/expr>`
     - No
     - Yes

   * - :manual:`$jsonSchema </reference/operator/query/jsonSchema>`
     - No
     - Yes

   * - :manual:`$regex </reference/operator/query/regex>`
     - No
     - Yes

   * - :manual:`$text </reference/operator/query/text>`
     - No
     - Yes

   * - :manual:`$where </reference/operator/query/where>`
     - No
     - Yes

Geospatial Operator Availability
++++++++++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operation
     - User Function
     - System Function

   * - :manual:`$geoIntersects </reference/operator/query/geoIntersects>`
     - No
     - Yes

   * - :manual:`$geoWithin </reference/operator/query/geoWithin>`
     - No
     - Yes

   * - :manual:`$near </reference/operator/query/near>`
     - No
     - Yes

   * - :manual:`$nearSphere </reference/operator/query/nearSphere>`
     - No
     - Yes

Bitwise Operator Availability
+++++++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operation
     - User Function
     - System Function

   * - :manual:`$bitsAllClear </reference/operator/query/bitsAllClear>`
     - No
     - Yes

   * - :manual:`$bitAllSet </reference/operator/query/bitAllSet>`
     - No
     - Yes

   * - :manual:`$bitsAnyClear </reference/operator/query/bitsAnyClear>`
     - No
     - Yes

   * - :manual:`$bitsAnySet </reference/operator/query/bitsAnySet>`
     - No
     - Yes

.. _mongodb-crud-and-aggregation-apis-update-operators:

Update Operators
~~~~~~~~~~~~~~~~

{+service+} supports most :manual:`update operators
</reference/operator/update>` for queries that run in a
:ref:`user function <function-active-user>`. However, some array update
operators are only available in :ref:`system functions
<function-system-user>`.

Field Update Operator Availability
++++++++++++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operation
     - User Function
     - System Function

   * - :manual:`$currentDate </reference/operator/update/currentDate>`
     - Yes
     - Yes

   * - :manual:`$inc </reference/operator/update/inc>`
     - Yes
     - Yes

   * - :manual:`$min </reference/operator/update/min>`
     - Yes
     - Yes

   * - :manual:`$max </reference/operator/update/max>`
     - Yes
     - Yes

   * - :manual:`$mul </reference/operator/update/mul>`
     - Yes
     - Yes

   * - :manual:`$rename </reference/operator/update/rename>`
     - Yes
     - Yes

   * - :manual:`$set </reference/operator/update/set>`
     - Yes
     - Yes

   * - :manual:`$setOnInsert </reference/operator/update/setOnInsert>`
     - Yes
     - Yes

   * - :manual:`$unset </reference/operator/update/unset>`
     - Yes
     - Yes

Array Update Operator Availability
++++++++++++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operation
     - User Function
     - System Function

   * - :manual:`$ (Positional Update) </reference/operator/update/positional>`
     - Yes
     - Yes

   * - :manual:`$addToSet </reference/operator/update/addToSet>`
     - Yes
     - Yes

   * - :manual:`$pop </reference/operator/update/pop>`
     - Yes
     - Yes

   * - :manual:`$pull </reference/operator/update/pull>`
     - Yes
     - Yes

   * - :manual:`$push </reference/operator/update/push>`
     - Yes
     - Yes

   * - :manual:`$pullAll </reference/operator/update/pullAll>`
     - Yes
     - Yes

   * - :manual:`$[] (All Positional Update) </reference/operator/update/positional-all>`
     - Yes
     - Yes

   * - :manual:`$[element] (Filtered Positional Update) </reference/operator/update/positional-filtered>`
     - Yes
     - Yes

Array Update Operator Modifiers Availability
++++++++++++++++++++++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Modifier
     - User Function
     - System Function

   * - :manual:`$each </reference/operator/update/each>`
     - Yes
     - Yes

   * - :manual:`$position </reference/operator/update/position>`
     - Yes
     - Yes

   * - :manual:`$slice </reference/operator/update/slice>`
     - Yes
     - Yes

   * - :manual:`$sort </reference/operator/update/sort>`
     - Yes
     - Yes

Bitwise Update Operator Availability
++++++++++++++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operator
     - User Function
     - System Function

   * - :manual:`$bit </reference/operator/update/bit>`
     - Yes
     - Yes

.. _mongodb-crud-and-aggregation-apis-bulk-write-operations:

Bulk Write Operations
~~~~~~~~~~~~~~~~~~~~~

{+service+} supports bulk write operations using the same API as the MongoDB Node.js driver.

.. note:: {+service+} does not support the ``collection.bulkWrite()`` method.

Ordered Bulk Write Operation Availability
+++++++++++++++++++++++++++++++++++++++++

You define ordered bulk operations by calling
:node-driver:`collection.initializeOrderedBulkOp()
<Collection.html#initializeOrderedBulkOp>` and manipulating the
:node-driver:`OrderedBulkOperation <OrderedBulkOperation.html>` object that it
returns.

{+service-short+} supports the following ``OrderedBulkOperation`` methods:

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operation
     - User Function
     - System Function

   * - :manual:`execute </reference/method/Bulk.execute>`.
     - Yes
     - Yes

   * - :manual:`find </reference/method/Bulk.find>`.
     - Yes
     - Yes

   * - :manual:`insert </reference/method/Bulk.insert>`.
     - Yes
     - Yes

Unordered Bulk Write Operation Availability
+++++++++++++++++++++++++++++++++++++++++++

You define unordered bulk operations by calling
:node-driver:`collection.initializeUnorderedBulkOp()
<Collection.html#initializeUnorderedBulkOp>` and manipulating the
:node-driver:`OrderedBulkOperation <UnorderedBulkOperation.html>` object that it
returns.

{+service-short+} supports the following ``UnorderedBulkOperation`` methods:

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operation
     - User Function
     - System Function

   * - :manual:`execute </reference/method/Bulk.execute>`.
     - Yes
     - Yes

   * - :manual:`find </reference/method/Bulk.find>`.
     - Yes
     - Yes

   * - :manual:`insert </reference/method/Bulk.insert>`.
     - Yes
     - Yes

.. _mongodb-crud-and-aggregation-apis-query-options:

Query Options
~~~~~~~~~~~~~

{+service+} does not support configuring the following options for any
CRUD operation in :ref:`user functions <function-active-user>`. All query
options are available in :ref:`system functions <function-system-user>`.

Query Option Availability
+++++++++++++++++++++++++

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Option
     - User Context
     - System Context

   * - :manual:`Read Isolation (Read Concern) </reference/read-concern>`
     - No
     - Yes

   * - :manual:`Write Acknowledgment (Write Concern) </reference/write-concern>`
     - No
     - Yes

   * - :manual:`Collation </reference/collation>`
     - No
     - Yes

.. _mongodb-crud-and-aggregation-apis-aggregation:

Aggregation
-----------

Aggregation Methods
~~~~~~~~~~~~~~~~~~~

{+service+} supports aggregation on the both the database and collection level
using the following commands:

- :manual:`db.aggregate() </reference/method/db.aggregate>`
- :manual:`db.collection.aggregate() </reference/method/db.collection.aggregate>`

Aggregation Pipeline Stage Availability
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

{+service+} does not support the following :manual:`aggregation pipeline stages
</reference/operator/aggregation-pipeline/>` when you :doc:`run an aggregation
pipeline </mongodb/run-aggregation-pipelines>` in the context of an
:ref:`application user <user-accounts>`. All aggregation pipeline stages are
available to the system user except for ``$indexStats``.

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Stage
     - User Context
     - System Context

   * - :manual:`$collStats </reference/operator/aggregation/collStats/>`
     - No
     - Yes

   * - :manual:`$currentOp </reference/operator/aggregation/currentOp/>`
     - No
     - Yes

   * - :manual:`$facet </reference/operator/aggregation/facet/>`
     - No
     - Yes

   * - :manual:`$geoNear </reference/operator/aggregation/geoNear/>`
     - No
     - Yes

   * - :manual:`$graphLookup </reference/operator/aggregation/graphLookup/>`
     - No
     - Yes

   * - :manual:`$indexStats </reference/operator/aggregation/indexStats/>`
     - No
     - No

   * - :manual:`$lookup </reference/operator/aggregation/lookup/>`
     - Yes
     - Yes

   * - :manual:`$merge </reference/operator/aggregation/merge/>`
     - No
     - Yes

   * - :manual:`$out </reference/operator/aggregation/out/>`
     - No
     - Yes

   * - :atlas:`$search </reference/atlas-search/query-syntax/>`
       
       .. include:: /includes/note-atlas-search-rules.rst
     - Yes
     - Yes

   * - :manual:`$text </reference/operator/aggregation/text/>`
     - No
     - Yes

   * - :manual:`$unionWith </reference/operator/aggregation/unionWith/>`
     - Yes
     - Yes

.. note::
   
   By default, ``$merge`` and ``$out`` route the entire aggregation operation to
   the cluster's primary node. If you want to force these stages to respect your
   configured cluster read preference, set the ``enforceReadPref`` option to
   ``true``.

Aggregation Pipeline Operator Availability
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

{+service+} supports all :manual:`aggregation pipeline operators
</reference/operator/aggregation/>` when you :doc:`run an aggregation pipeline
</mongodb/run-aggregation-pipelines>` in the :ref:`system user
<system-functions>` context. {+service-short+} supports all pipeline operators
in an :ref:`application user <user-accounts>` context with the following
exceptions:

.. list-table::
   :header-rows: 1
   :widths: 25 10 10

   * - Operator
     - User Context
     - System Context

   * - :manual:`$function </reference/operator/aggregation/function/>`
     - No
     - Yes

.. _mongodb-crud-and-aggregation-apis-database-commands:

Database Commands
-----------------

{+service+} does not support any :manual:`database commands
</reference/command>` in the Client SDKs or :doc:`Functions
</functions>`. You can, however, call a limited subset of database
commands when when connected to a MongoDB cluster over the :doc:`{+service+}
wire protocol </mongodb/connect-over-the-wire-protocol>`.

The following :manual:`database commands </reference/command>` are
partially supported over the wire protocol. Unsupported options for each
command are listed below.

.. note::
   
   {+service-short+} apps cannot run commands on the ``admin`` database.

Database Command Availability
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 10 40

   * - Command
     - Unsupported Options
     - Realm-Specific Options

   * - :manual:`find </reference/command/find>`
     - - ``hint``
       - ``skip``
       - ``batchSize``
       - ``comment``
       - ``maxScan``
       - ``maxTimeMS``
       - ``readConcern``
       - ``max``
       - ``min``
       - ``returnKey``
       - ``showRecordId``
       - ``tailable``
       - ``awaitData``
       - ``oplogReplay``
       - ``noCursorTimeout``
       - ``allowPartialResults``
       - ``collation``
     - 

   * - :manual:`aggregate </reference/command/aggregate>`
     - - ``explain``
       - ``allowDiskUse``
       - ``maxTimeMS``
       - ``readConcern``
       - ``collation``
       - ``bypassDocumentValidation``
       - ``hint``
       - ``comment``
       - ``writeConcern``
     - - ``enforceReadPref``

   * - :manual:`count </reference/command/count>`
     - - ``limit``
       - ``skip``
       - ``hint``
       - ``readConcern``
     - 

   * - :manual:`insert </reference/command/insert>`
     - - ``writeConcern``
       - ``bypassDocumentValidation``
     - 

   * - :manual:`update </reference/command/update>`
     - - ``bypassDocumentValidation``
       - ``collation``
       - ``arrayFilters``
     - 

   * - :manual:`delete </reference/command/delete>`
     - - ``collation``
     - 
