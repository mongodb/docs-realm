==============
Static Hosting
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. toctree::
   :titlesonly:
   :hidden:
   
   Enable Hosting </hosting/enable-hosting>
   Configure File Metadata </hosting/configure-file-metadata>
   File Metadata Attributes </hosting/file-metadata-attributes>
   Flush the CDN Cache </hosting/flush-the-cdn-cache>
   Host a Single-Page Application </hosting/host-a-single-page-application>
   Upload Content to Realm </hosting/upload-content-to-realm>
   Use a Custom 404 Page </hosting/use-a-custom-404-page>
   Use a Custom Domain Name </hosting/use-a-custom-domain-name>

Introduction
------------

{+service+} Hosting allows you to host, manage, and serve your application's
static media and document files. You can use Hosting to store individual
pieces of content or to upload and serve your entire client application.

To get started, :doc:`enable hosting </hosting/enable-hosting>` for your
application then start :doc:`uploading content
</hosting/upload-content-to-realm>`.

Concepts
--------

Static Content
~~~~~~~~~~~~~~

A file is *static* if you can serve it directly to clients without
requiring additional processing or logic to generate it. Static content
includes document files, such as HTML, JavaScript, and CSS, as well as
media files like images, audio, and videos.

.. _default-hosting-domain:

Hosting Domain
~~~~~~~~~~~~~~

{+backend+} hosts your application's content behind a unique domain
name. By default, {+service+} uses domains of the following form:

.. code-block:: none

   <Your App ID>.mongodbrealm.com

.. note::

   You can configure {+backend+} to host content at a :doc:`custom domain
   name </hosting/use-a-custom-domain-name>` that you own in addition to
   the default hosting domain.

.. _hosting-resource-path:

Resource Paths
~~~~~~~~~~~~~~

A resource path is a string that uniquely identifies an uploaded file
based on its position in the file tree. You can access a hosted file
through a unique URL that consists of your application's hosting domain
followed by the file's resource path.

For example, a PNG image of a company's logo hosted in a directory named
``images`` would have the resource path ``/images/logo.png``. You could
access this image at a URL similar to the following:

.. code-block:: none

   myapp-abcde.mongodbrealm.com/images/logo.png

Constraints
-----------

{+backend+} enforces constraints on static hosting across several dimensions
for each :term:`{+app+}`. The following constraints apply to all
static content hosted by {+backend+}:

.. list-table::
   :header-rows: 1

   * - Dimension
     - Constraint
   * - **Maximum File Size**
     - 25 megabytes
   * - **Maximum Total Storage**
     - 1 gigabyte
   * - **Maximum Total Files**
     - 20,000 files
   * - **Maximum CDN Flushes**
     - 25 flushes per hour
   * - **Maximum Bandwidth**
     - 100 gigabytes

Usage Guides
------------

.. list-table::
   :header-rows: 1
   :widths: 20 50

   * - Guide
     - Description

   * - :doc:`Enable Hosting </hosting/enable-hosting>`
     - Learn how to enable static file hosting for your {+app+}.

   * - :doc:`Upload Content to Realm </hosting/upload-content-to-realm>`
     - Learn how to add and update files in Realm Hosting.

   * - :doc:`Configure File Metadata </hosting/configure-file-metadata>`
     - Learn how to add descriptive metadata attributes to a file.

   * - :doc:`Flush the CDN Cache </hosting/flush-the-cdn-cache>`
     - Learn how to force CDN servers to refresh their cached copies of
       your application's hosted files.

   * - :doc:`Host a Single-Page Application </hosting/host-a-single-page-application>`
     - Learn how to redirect all external requests to a single hosted
       page. This can be useful for some applications created using
       modern web frameworks such as React, Vue, and Angular.

   * - :doc:`Use a Custom Domain Name </hosting/use-a-custom-domain-name>`
     - Learn how to serve hosted content from a domain name that you
       own.

   * - :doc:`Use a Custom 404 Page </hosting/use-a-custom-404-page>`
     - Learn how to show a custom 404 page when users request a resource
       that does not exist.
