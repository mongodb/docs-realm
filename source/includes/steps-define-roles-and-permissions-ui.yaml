title: Navigate to the MongoDB Rules Screen
ref: navigate-to-the-mongodb-rules-screen
level: 4
content: |
  You can create and manage roles and permissions from the MongoDB rules
  screen in the {+ui+}. To get to the rules screen, click
  :guilabel:`Rules` beneath :guilabel:`Data Access` in the
  {+leftnav+}.
---
title: Add a MongoDB Collection Namespace
ref: add-a-mongodb-collection-namespace
level: 4
content: |
  Data access roles and permissions are scoped to individual collections
  in a linked MongoDB cluster. To define roles and permissions for a
  collection, you need to create the collection namespace in the {+ui+}.

  Find the linked cluster that you want to define access permissions for
  in the rules sidebar and click its :guilabel:`context menu
  (...)`. Select :guilabel:`Add Database/Collection`.

  .. figure:: /images/add-database-collection.png
     :alt: Add a Database/Collection button on the collection rules screen.
---
title: Configure the Collection Namespace
ref: configure-the-collection-namespace
level: 4
content: |
  Enter the :guilabel:`Database Name` and :guilabel:`Collection Name` of
  the MongoDB collection that you want to use.

  .. figure:: /images/collection-namespace-config-values.png
     :alt: Collection namespace inputs.
---
title: Select a Collection Rule Template
ref: select-a-collection-rule-template
level: 4
content: |
  You can choose to apply a rule template to the collection to simplify
  the process of configuring role permissions. Each template is a
  pre-configured set of roles and permissions that represents a common
  use case and data access pattern. You can also select :guilabel:`No
  template`, which creates a default role that can insert and delete
  documents but cannot read or update any fields.

  Once you have selected and configured a template, click :guilabel:`Add
  Collection`.

  .. figure:: /images/collection-rule-templates.png
     :alt: A list of available collection rule templates.

  .. note::

     Templates do not rely on hard-coded field names, so when you select a
     template you will need to map certain fields in your documents to the
     template's fields. For example, the :guilabel:`Users can only read and
     write their own data` template requires that each document in the
     collection contains the ID of the :doc:`user </authentication>` that owns it.
     If you select that template, you will need to specify the name of the
     field that contains the user id.

     .. figure:: /images/rule-template-additional-fields.png
        :alt: Additional fields for a collection rule template.
---
title: Create a New Role
ref: create-a-new-role
level: 4
content: |
  Depending on the rule template you selected, there will already be one
  or more pre-configured roles in the collection. You can use these
  roles as they are, tweak them to fit your use case, or add additional
  roles to cover more cases.

  To add an additional role, click :guilabel:`New Role`. Enter a
  :guilabel:`Name` for the new role on the role configuration screen.
---
title: Define the Role's "Apply When" Condition
ref: define-the-roles-apply-when-condition
level: 4
content: |
  A role's :guilabel:`Apply When` condition determines whether or not
  the role applies to a particular document for the user that issued a
  query.

  Enter a :doc:`JSON Expression </services/json-expressions>` in the
  role's :guilabel:`Apply When` box. The expression should evaluate to
  ``true`` when the role applies to a given document.

  .. figure:: /images/mongodb-role-apply-when.png
     :alt: A MongoDB Role's Apply When Expression
---
title: Define Document-Level Permissions
ref: define-document-level-permissions
level: 4
content: |
  Document-level permissions determine a role's ability to insert, delete, and
  :atlas:`search </reference/atlas-search/query-syntax/>` documents in the
  collection. To define the role's :guilabel:`Document-Level Permissions`, check
  the box for each operation that the role has permission to execute.
  
  Once you have defined the role's document-level permissions, click
  :guilabel:`Done Editing`.

  .. figure:: /images/mongodb-role-document-level-permissions.png
     :alt: A MongoDB Role's Document-Level Permissions
---
title: Define Field-Level Permissions
ref: define-field-level-permissions
level: 4
content: |
  Field-level permissions determine if a role can read and write to
  specific fields within a given document. You can define the
  field-level permissions for a role in that role's column on the
  :guilabel:`Rules` page.

  .. list-table::
     :widths: 20 10

     * - **To define permissions for all fields:**

         Click :guilabel:`Add Field`, enter the field name, then click
         the green check next to the input box to confirm the name. In
         the new field's row, check the :guilabel:`Read` and
         :guilabel:`Write` boxes to indicate whether the role can read
         or write to the field.

       - .. figure:: /images/mongodb-permissions-all-fields.png
            :alt: A role with permission to read and write to specific fields
            :width: 300px

     * - **To define permissions for a specific field:**

         Click :guilabel:`Add Field`, enter the field name, then click
         the green check next to the input box to confirm the name. In
         the new field's row, check the :guilabel:`Read` and
         :guilabel:`Write` boxes to indicate whether the role can read
         or write to the field.

       - .. figure:: /images/mongodb-permissions-specific-fields.png
            :alt: A role with permission to read and write to specific fields
            :width: 300px

     * - **To define default permissions for unlisted fields:**

         Check the :guilabel:`Read` and :guilabel:`Write` boxes for
         :guilabel:`All Additional Fields` to indicate the role's read and
         write privileges for any fields that aren't specifically
         configured.

       - .. figure:: /images/mongodb-permissions-additional-fields.png
            :alt: A role with permission to read any unspecified fields
            :width: 300px
---
title: Add Additional Roles
ref: add-additional-roles
level: 4
content: |
  Repeat steps 5 through 8 of this procedure for any additional roles
  that you want to configure.

  .. note::

     {+service-short+} evaluates roles in order from left-to-right. A user can only
     have one role per document, so once {+service-short+} finds a role that
     applies to the current document it skips evaluating any remaining
     roles and immediately begins evaluating a role for the next
     document in the query.
---
title: Save the Updated Collection Rules
ref: save-the-updated-collection-rules
level: 4
content: |
  Once you have finished defining roles for the collection, click
  :guilabel:`Save`. {+service-short+} will immediately begin using the roles you
  defined for all incoming queries on the collection.
