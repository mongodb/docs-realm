title: Create an Application Directory
ref: create-app-directory
content: |
  Create a new directory for your application and navigate into it.

  Add a :ref:`config.json <appschema-realm-config>` file to the root
  level of the directory. The file should contain an empty JSON object.

  .. code-block:: shell

     echo \{\} > config.json

  .. note::

     Upon successfully creating a new {+app+}, {+cli-bin+}
     will immediately update ``config.json`` to reflect the new app.

     This overwrites any existing values in ``config.json``.
---
title: Initialize Application Entities
ref: initialize-app-entities
optional: true
content: |
  If you'd like to pre-configure any services in your
  application (including linking to a specific MongoDB Atlas
  cluster), create sub-directories and configuration files
  for those entities in the application directory. For
  details on the directory structure and contents, see
  :doc:`Application Configuration Files
  </deploy/application-configuration-files>`.

  .. note::

     If you are importing any new entities that require a :ref:`Secret
     <app-secret>` (e.g. auth tokens, client secrets, etc.), you must create
     those before you import the entities. You can create a secret with
     :ref:`Realm CLI <realm-cli-secrets-add>` or through the :doc:`Realm UI
     </values-and-secrets/define-a-secret>`.
---
title: Authenticate a MongoDB Atlas User
ref: authenticate-atlas-user
content: |
  To create a {+app+} with {+cli-bin+}, users must
  authenticate with Atlas using an API Key.

  .. code-block:: shell

     realm-cli login --api-key="<my api key>" --private-api-key="<my private api key>"
---
title: Run the Import Command
ref: run-import-command
content: |
  Run the following command in your application directory:

  .. code-block:: shell

     realm-cli import

  Before importing, {+cli-bin+} will search existing applications
  that the authenticated user has access to. If ``app_id`` was not
  provided or does not match any existing application, {+cli-bin+}
  will ask you if you'd like to create a new {+app+}. After
  you confirm, {+cli-bin+} will prompt you for the following
  information:

  .. list-table::
     :header-rows: 1
     :widths: 10 30

     * - Field
       - Description

     * - ``Atlas Project ID``
       - The :guilabel:`Project ID` or :guilabel:`Project Name` of the
         :ref:`Atlas project <projects>` that you want to host your
         {+app+}.
         You can find these values on the :guilabel:`Settings` page of
         the Atlas UI.

     * - ``App Name``
       - The name of your application.

         Application names may only contain ASCII letters, numbers,
         underscores, and hyphens.

         .. note:: {+cli-bin+} converts application names to lowercase.
---
title: Verify Application Creation
ref: verify-app-creation
content: |
  You can confirm that your new {+app+} was successfully imported by
  checking ``config.json``. If the creation was successful, the
  ``app_id`` and ``name`` fields will have updated values that reflect
  the new application.

  .. note::

     New application imports happen in two phases:

     1. A new application is created on the server.
     2. The local application directory is imported to the new application.

     It's possible for {+cli-bin+} to successfully create a new app
     but then throw an error during the import phase. In this case, no
     entities are imported but the new application is not deleted. If
     you encounter this, fix any errors causing the import to fail and
     run the :ref:`import <realm-cli-import>` command again.
