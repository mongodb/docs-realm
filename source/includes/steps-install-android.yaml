title: Add the Realm Dependency to the Project-Level ``build.gradle`` File
ref: add-realm-dependency-project-level-gradle
content: |

   Create or open your project in Android Studio. Select the
   "Project" view in the top-left panel:

   .. image:: /images/android-studio-project-view.png   
      :alt: The project view is in the top-left panel.
   
   Open the project-level ``build.gradle`` file:

   .. image:: /images/project-level-build-gradle.png
      :alt: Location of the project-level build.gradle file.

   Paste the {+service-short+} classpath into the
   ``buildscript.dependencies`` block:

   .. code-block:: groovy
    
      classpath "io.realm:realm-gradle-plugin:10.2.0"

   When done, your project-level ``build.gradle`` should look something like this:

   .. code-block:: groovy
      :emphasize-lines: 9

      buildscript {
          repositories {
              google()
              jcenter()
              
          }
          dependencies {
              classpath "com.android.tools.build:gradle:3.5.1"
              classpath "io.realm:realm-gradle-plugin:10.2.0"
          }
      }

      allprojects {
          repositories {
              google()
              jcenter()
          }

          dependencies {
          }
      }

      task clean(type: Delete) {
          delete rootProject.buildDir
      }

---
title: Add Realm to the Application-Level ``build.gradle`` File
ref: add-realm-to-app-level-gradle
content: |

   Expand the ``app`` folder on the "Project" view in the
   top-left panel to reveal the application files. Open the
   application-level ``build.gradle`` file in this folder:

   .. image:: /images/application-level-build-gradle.png
      :alt: Location of the application-level build.gradle file.

   If your application uses the Kotlin programming language, you need to
   apply the ``kotlin-kapt`` plugin:

   .. code-block:: groovy

      apply plugin: 'kotlin-kapt'

   Apply the ``realm-android`` plugin near the top of your application
   level ``build.gradle`` file:

   .. code-block:: groovy

      apply plugin: 'realm-android'

   .. note:: Application Order Matters

      Application order matters for android plugins. Because the
      ``realm-android`` plugin depends upon the ``kotlin-kapt``
      plugin for applications written in Kotlin,
      you must apply the ``realm-android`` plugin *after* the ``kotlin-kapt``
      plugin if your application uses the Kotlin programming language.

   And enable sync:

   .. code-block:: groovy

      realm {
         syncEnabled = true
      }

   When done, your application-level ``build.gradle`` file should look
   something like this:

   .. tabs-realm-languages::

      .. tab::
         :tabid: java

         .. code-block:: groovy
            :emphasize-lines: 2, 19-21

            apply plugin: 'com.android.application'
            apply plugin: 'realm-android'

            android {
               compileSdkVersion 29
               buildToolsVersion "29.0.2"

               defaultConfig {
                  applicationId "com.mongodb.realmsnippets"
                  minSdkVersion 21
                  targetSdkVersion 29
               }
               compileOptions {
                  sourceCompatibility 1.8
                  targetCompatibility 1.8
               }
            }

            realm {
               syncEnabled = true
            }

            dependencies {
               implementation fileTree(dir: 'libs', include: ['*.jar'])
               implementation 'androidx.appcompat:appcompat:1.1.0'
            }
      
      .. tab::
         :tabid: kotlin

         .. code-block:: groovy
            :emphasize-lines: 4, 5, 22-24

            apply plugin: 'com.android.application'
            apply plugin: 'kotlin-android'
            apply plugin: 'kotlin-android-extensions'
            apply plugin: 'kotlin-kapt'
            apply plugin: 'realm-android'

            android {
               compileSdkVersion 29
               buildToolsVersion "29.0.2"

               defaultConfig {
                  applicationId "com.mongodb.realmsnippets"
                  minSdkVersion 21
                  targetSdkVersion 29
               }
               compileOptions {
                  sourceCompatibility 1.8
                  targetCompatibility 1.8
               }
            }

            realm {
               syncEnabled = true
            }

            dependencies {
               implementation fileTree(dir: 'libs', include: ['*.jar'])
               implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
               implementation "androidx.appcompat:appcompat:1.1.0"
               implementation "androidx.core:core-ktx:1.2.0"
            }

---
title: Sync Project with Gradle Files
ref: sync-gradle-dependencies
content: |

   Now that you have updated the ``build.gradle`` files,
   resolve the dependencies by clicking :guilabel:`File >
   Sync Project with Gradle Files`.

   Once Android Studio has resolved the dependencies, you
   can get started with {+service-short+}. Import the {+service-short+} SDK with
   this import statement in your .java or .kt files:

   .. tabs-realm-languages::

      .. tab::
         :tabid: java
      
         .. code-block:: java

            import io.realm.Realm;
      
      .. tab::
         :tabid: kotlin

         .. code-block:: kotlin
      
            import io.realm.Realm
