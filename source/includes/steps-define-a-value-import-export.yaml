title: Export Your Realm Application
ref: export-your-application
content: |
  To define a Value using :doc:`realm-cli
  </deploy/realm-cli-reference>` you need to export an
  :ref:`application directory <application-directory>` for your
  application.

  You can :doc:`export </deploy/export-realm-app>` your application from the
  :guilabel:`Import/Export App` tab of the :guilabel:`Deploy` page in the
  {+ui+}, or by running the following command from an authenticated instance of
  :doc:`realm-cli </deploy/realm-cli-reference>`:

  .. code-block:: shell

     realm-cli export --app-id=<App ID>
---
title: Add a Value Configuration File
ref: add-a-value-configuration-file
content: |
  Each Value is defined in its own JSON file in the ``values``
  subdirectory of your exported application. For example, a Value named
  ``myValue`` would be defined in the file ``/values/myValue.json``.

  Add a configuration file for the new Value to the ``values`` directory:

  .. code-block:: shell

     touch values/<Value Name>.json

  The configuration file should have the following general form:

  .. code-block:: json

     {
       "name": "<Value Name>",
       "from_secret": <boolean>,
       "value": <Stored JSON Value|Secret Name>
     }

  .. list-table::
     :header-rows: 1
     :widths: 25 75

     * - Field
       - Description

     * - ``name``
       - A unique name for the value. This name is how you refer to
         the value in functions and rules.

     * - ``from_secret``
       - Default: ``false``. If ``true``, the Value exposes a
         :ref:`Secret <app-secret>` instead of a plain-text JSON value.

     * - ``value``
       - The stored data that {+service-short+} exposes when the Value is referenced.
         
         If ``from_secret`` is ``false``, ``value`` can be a standard
         JSON string, array, or object.
         
         If ``from_secret`` is ``true``, ``value`` is a string that
         contains the name of the Secret the value exposes.
---
title: Import Your Application Directory
ref: import-your-application-directory
content: |
  Ensure that the Value configuration file is saved and then navigate to
  the root of your exported application directory. Log in to MongoDB
  Atlas with {+cli-bin+}:

  .. code-block:: shell

     realm-cli login --api-key="<my api key>" --private-api-key="<my private api key>"

  Once you're logged in, import the directory:

  .. code-block:: shell

     realm-cli import

  Once the import completes, you can immediately begin to
  :doc:`access the Value
  </values-and-secrets/access-a-value>` in rules and
  functions.
