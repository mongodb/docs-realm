title: Find All Relevant Documents
ref: find-all-relevant-documents
content: |
  {+backend+} evaluates the queried collection's **Filters** in the context
  of the incoming request. Filters dynamically add additional query
  predicates and projections to incoming queries based on an expression
  that you define.

  After evaluating, {+backend+} applies all relevant filters to the incoming
  query and then finds all documents that match the filtered query.

  .. note:: Filters
     
     To learn how to configure a :ref:`filter <filters>` for a collection, see
     :doc:`Filter Incoming Queries </mongodb/filter-incoming-queries>`.
---
title: Evaluate A Role For Each Document
ref: evaluate-a-role-for-each-document
content: |
  {+backend+} evaluates a **Role** with specific read and write
  permissions for each document that matches the filtered query. You
  define the roles for each collection, including the permissions they
  have and the conditions under which they apply.

  .. note:: Roles
     
     To learn how to configure :ref:`role-based permissions <roles>` for a
     collection, see :doc:`Define Roles and Permissions
     </mongodb/define-roles-and-permissions>`.
     
     To learn more about roles, explore the :ref:`roles <roles>` reference page.
     There you'll find more information, including configuration parameters,
     use-case examples, and details on how {+backend+} assigns roles to
     documents.
---
title: Run The Query With The Assigned Roles
ref: run-the-query-with-the-assigned-roles
content: |
  Once {+backend+} has evaluated a role for each document, it runs the
  filtered query and prevents reads and writes on each document unless
  the document's role allows them. If no role applies to a specific
  document, {+backend+} withholds that document entirely and prevents the
  query from reading or writing any fields.
---
title: Validate The Document Schema
ref: validate-the-document-schema
content: |
  If the query was a write operation, {+backend+} checks each affected
  document to ensure that they conform to the collection's **Document
  Schema**. If any document does not match the schema, {+backend+} rolls back
  the operation and rejects the query.

  .. seealso::
     
     - :ref:`schemas`
     - :ref:`enforce-a-schema`
