title: Set Up Your Project
ref: set-up-your-project
level: 4
content: |
  Follow the steps in the :ref:`Install Realm for Web <web-quickstart-install>`
  guide.
---
title: Link a MongoDB Atlas Service Cluster
ref: link-mongodb-atlas-cluster
level: 4
content: |
  Follow the steps in the :doc:`Link a MongoDB Cluster </mongodb/link-a-cluster>`
  guide. Assign your service a meaningful name -- you'll need it to connect to
  the cluster using the {+service-short+} SDK.
---
title: Import Realm Dependencies
ref: import-realm-dependencies
level: 4
content: |
  At the top of your source files where you want to use MongoDB Realm,
  add the following line to import the SDK.

  .. code-block:: javascript

     import * as Realm from "realm-web";

---
title: Instantiate a MongoDB Collection Handle
ref: instantiate-a-mongodb-collection-handle
level: 4
content: |

  .. code-block:: javascript
     :emphasize-lines: 15,16

     const appId = "<your App ID>"; // Set Realm App ID here.
     const appConfig = {
       id: appId,
       timeout: 10000, // timeout in number of milliseconds
     };

     async function run() {
       let user;
       try {
         const app = new Realm.App(appConfig);

         // an authenticated user is required to access a MongoDB instance
         user = await app.logIn(Realm.Credentials.anonymous());

         const mongo = app.services.mongodb("<atlas service name>");
         const mongoCollection = mongo.db("<database name>").collection("<collection name>");

         // the rest of your code ...

        } finally {
          user.logOut();
        }
      }
      run().catch(console.dir);
