title: Define Roles & Permissions for Tasks
ref: define-roles-and-permissions-for-tasks
content: |
  For any given task, a user may be the task's assignee. We want users to be
  able to create, modify, and delete tasks for themselves. They should be able
  to see other users' tasks but shouldn't be allowed to create new tasks for
  other users or delete tasks that don't belong to them.
  
  To accomplish this, we'll define two roles for the ``tasks`` collection. The
  ``isAssignee`` role applies to tasks where the user's id is listed in the
  document's ``asignee`` field and the ``default`` role applies to all other
  tasks.
  
  In the rules editor, select the ``tracker.tasks`` collection and then click
  the :guilabel:`Permissions` tab. Define two roles for the collection that
  match the following specifications:
  
  .. list-table::
     :header-rows: 1
     :widths: 10 40 50
     
     * - Role Name
       - Permissions
       - Apply When
     
     * - ``isAssignee``
       - - **Insert Documents:** true
         - **Delete Documents:** true
         - **Read All Fields:** true
         - **Write All Fields:** true
       - .. code-block:: json
            
            {
              "assignee": "%%user.id"
            }
     
     * - ``default``
       - - **Insert Documents:** false
         - **Delete Documents:** false
         - **Read All Fields:** true
         - **Write All Fields:** false
       - .. code-block:: json
            
            {}
  
  .. cssclass:: bordered-figure
  .. figure:: /images/task-tracker-web-roles-tasks.png
---
title: Define Roles & Permissions for Users
ref: define-roles-and-permissions-for-users
content: |
  In general, you should give special consideration to what user data is
  necessary for your application and who can read and modify that data. For this
  tutorial, we're not storing any sensitive data so we can allow all users to
  read any user document. However, we want to prevent users from editing data
  directly (especially if it's not their data), so we won't allow write
  operations on any document. Instead, we can use server-side system functions
  to handle updates to user documents.
  
  To accomplish this, we'll define a single role for the ``users`` collection
  that applies to all requests.

  In the rules editor, select the ``tracker.users`` collection and then click
  the :guilabel:`Permissions` tab. Define a role for the collection that matches
  the following specification:
  
  .. list-table::
     :header-rows: 1
     :widths: 10 40 50
     
     * - Role Name
       - Permissions
       - Apply When
     
     * - ``default``
       - - **Insert Documents:** false
         - **Delete Documents:** false
         - **Read All Fields:** true
         - **Write All Fields:** false
       - .. code-block:: json
            
            {}
  
  .. cssclass:: bordered-figure
  .. figure:: /images/task-tracker-web-roles-users.png
---
title: Deploy Your App
ref: deploy-your-app
content: |
  Make sure that you deploy your app again to use the updated rules and begin
  allowing clients to access data.
...
