title: Pull the Latest Version of Your App
ref: pull-the-latest-version-of-your-app
content: |
  To configure user metadata with {+cli-bin+}, you need a local copy of your
  application's configuration files.
  
  To pull a local copy of the latest version of your app, run the following:
  
  .. code-block:: bash
     
     realm-cli pull --remote="<Your App ID>"
  
  .. tip::
     
     You can also download a copy of your application's configuration files from
     the :guilabel:`Deploy > Export App` screen in the {+ui+}.
---
title: Configure User Metadata
ref: configure-user-metadata
content: |
  To configure your application to read user metadata from the authentication
  provider, update the :ref:`metadata_fields <config-auth-providers>` in
  the ``/auth/providers.json``:

  For Google or Facebook, this object resembles:

  .. code-block:: javascript
     :caption: /auth/providers.json
     
     { ...other config details...
       "metadata_fields": [
         {
           "required": false,
           "name": "name"
         },
         {
           "required": false,
           "name": "gender"
         }
       ]
     }

  For custom JWT authentication, the metadata_fields object has an additional
  property, ``name``, which represents the path to the field. The 
  ``field_name`` represents the name of the field.

  .. code-block:: javascript
     :caption: /auth/providers.json
     
     { ...other config details...
       "metadata_fields": [
         {
           "required": true,
           "name": "user.name",
           "field_name": "name"
         },
         {
           "required": false,
           "name": "user.favoriteColor",
           "field_name": "favoriteColor"
         }
       ]
     }

---
title: Deploy the Custom User Data Configuration
ref: deploy-the-custom-user-data-configuration
content: |
  Once you've configured custom user data, you can push the updated config to
  your remote app. {+cli+} immediately deploys the update on push.
  
  .. code-block:: bash
     
     realm-cli push --remote="<Your App ID>"
