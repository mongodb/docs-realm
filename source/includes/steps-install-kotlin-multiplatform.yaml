title: Create a KMM App
ref: create-a-kmm-app
content: |

   Create a KMM App using the "KMM Application" template in Android
   Studio. Follow the instructions at the `KMM documentation
   <https://kotlinlang.org/docs/mobile/create-first-app.html>`.

---
title: Add Realm to the Project Gradle Configuration
ref: add-realm-to-project-gradle-config
content: |

   Open the project ``build.gradle.kts`` file in the root directory
   of your project. Add the ``io.realm.kotlin`` dependency to
   ``buildscript.dependencies``:

   .. code-block:: groovy
      :emphasize-lines: 10

      buildscript {
          repositories {
              gradlePluginPortal()
              google()
              mavenCentral()
          }
          dependencies {
              classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.20")
              classpath("com.android.tools.build:gradle:4.2.1")
              classpath("io.realm.kotlin:gradle-plugin:0.2.0")
          }
      }

      allprojects {
          repositories {
              google()
              mavenCentral()
          }
      }

      tasks.register("clean", Delete::class) {
          delete(rootProject.buildDir)
      }

---
title: Add Realm to the Shared Module Gradle Configuration
ref: add-realm-to-shared-module-gradle-config
content: |

   Open the shared module ``build.gradle.kts`` file in the root of the
   shared module directory of your project. By default, this module is
   called "shared". Add the ``io.realm.kotlin`` dependency to
   ``plugins`` and ``implementation("io.realm.kotlin:library:0.2.0")``
   to ``kotlin.sourceSets.commonMain.dependencies``:

   .. code-block:: groovy
      :emphasize-lines: 7, 34

      import org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTarget

      plugins {
          kotlin("multiplatform")
          kotlin("native.cocoapods")
          id("com.android.library")
          id("io.realm.kotlin")
      }

      version = "1.0"

      kotlin {
          android()

          val iosTarget: (String, KotlinNativeTarget.() -> Unit) -> KotlinNativeTarget =
              if (System.getenv("SDK_NAME")?.startsWith("iphoneos") == true)
                  ::iosArm64
              else
                  ::iosX64

          iosTarget("ios") {}

          cocoapods {
              summary = "Some description for the Shared Module"
              homepage = "Link to the Shared Module homepage"
              ios.deploymentTarget = "14.4"
              frameworkName = "shared"
              podfile = project.file("../iosApp/Podfile")
          }
          
          sourceSets {
              val commonMain by getting {
                  dependencies {
                      implementation("io.realm.kotlin:library:0.2.0")
                  }
              }
              val commonTest by getting {
                  dependencies {
                      implementation(kotlin("test-common"))
                      implementation(kotlin("test-annotations-common"))
                  }
              }
              val androidMain by getting
              val androidTest by getting {
                  dependencies {
                      implementation(kotlin("test-junit"))
                      implementation("junit:junit:4.13.2")
                  }
              }
              val iosMain by getting
              val iosTest by getting
          }
      }

      android {
          compileSdkVersion(30)
          sourceSets["main"].manifest.srcFile("src/androidMain/AndroidManifest.xml")
          defaultConfig {
              minSdkVersion(16)
              targetSdkVersion(30)
          }
      }

---
title: Sync Project with Gradle Files
ref: sync-gradle-dependencies
content: |

   Now that you have updated the Gradle configurations,
   resolve the dependencies by clicking :guilabel:`File >
   Sync Project with Gradle Files`.

   Once Android Studio has resolved the dependencies, you
   can get started with {+service-short+}. Import the {+service-short+} SDK with
   this import statement in your ``.kt`` files in ``commonMain``:

   .. code-block:: kotlin
      
      import io.realm.Realm
