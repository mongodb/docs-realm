title: Navigate to the Realm Sync Panel
ref: navigate-to-the-realm-sync-panel
content: |
  You can enable {+sync+} rules from the Sync panel in the {+ui+}. To get to the
  Sync panel, click :guilabel:`Sync` beneath :guilabel:`Build` in the left-hand
  navigation.
---
title: Decide Whether to Use Development Mode
ref: decide-whether-to-use-development-mode
content: |
  The Sync panel presents you with two tabs: :guilabel:`Configuration` and
  :guilabel:`Development Mode`. The tab that you should select depends on whether you want
  to define your object models in client-side code or prefer to use a server-side configuration.

  Select the :guilabel:`Configuration` tab if you want {+backend-short+} to
  generate the client-side object model code for you based on your :ref:`schemas
  <mongodb-schemas>`. {+backend+} can :ref:`generate schemas for you
  <create-rom-from-schema>` based on data already in your cluster, or you can
  define them yourself.

  Select the :guilabel:`Development Mode` tab if you would rather define and
  modify your object model in client-side code.
---
title: Configure Sync
ref: configure-sync
content: |
  Follow the instructions in the {+ui+} to configure sync for your cluster.

  1. **Select a Cluster to Sync:** {+sync+} applies to the entire cluster. Specify which cluster you want to sync in the dropdown.

  #. **Define a Database Name (Development Mode Tab Only):** If you opted to use Development Mode, {+service-short+} needs to know which database in your cluster to use for new collections it creates for {+sync-short+}. Specify that database name in the input field.

  #. **Choose a Partition Key:** Specify the field name and type to determine which {+realm+} each object belongs to. You can also select the 'Create an index on the partition key' option, to enable Realm to automatically add an index on the partition key field for the synced cluster.  See :ref:`Partition Atlas Data into Realms <partitioning>`.

     .. tip:: When to enable automatic creation of an index on the partition key

        An index will make reads of the data faster but writes to the data slightly slower. You should generally use an index unless:

        - Your application has a write-heavy workload with comparatively few reads
        - You already have an index on the partition key field, such as the basic index that would be created by the option (e.g. ``{ _partition: 1 }``) or a compound index that starts with the partition key (e.g. ``{ _partition: 1, date: 1 }``)

        




  #. **Define Permissions (Configuration Tab Only):** Select a template from the dropdown or enter your read and write :ref:`sync rule <sync-rules>` in the input boxes.
---
title: Save the Configuration and Enable Sync
ref: save-configuration-and-enable-sync
content: |
  On the :guilabel:`Configuration` tab, click :guilabel:`Enable Sync` to
  enable sync.

  On the :guilabel:`Development Mode` tab, click :guilabel:`Turn Dev Mode On` to
  enable sync with Development Mode.
---
title: Sync Data from a Client
ref: sync-data-from-a-client
content: |
  Now that you have enabled {+sync+}, you can open a synced {+realm+} using a
  client SDK to read and write synced data. See the client guide for your SDK:

  - :ref:`Sync Data on Android <android-sync-data>`
  - :ref:`Sync Data on iOS, macOS, and tvOS<ios-sync-changes-between-devices>`
  - :ref:`Sync Data on Node.js <node-sync-changes-between-devices>`
  - :ref:`Sync Data with React Native <react-native-sync-changes-between-devices>`
