title: Locally Install External Dependencies
ref: locally-install-external-dependencies
content: |
  To upload external dependencies, you first need a local
  ``node_modules`` folder containing at least one Node.js package. You
  can use the following code snippet to install a dependency locally
  you would like to upload:

  .. code-block:: shell

     npm install <package name>

  If the ``node_modules`` folder does not already exist, this command
  automatically creates it.

  .. note:: Alternative Methods of Installation
     
     You can also configure a ``package.json`` and run the
     ``npm install`` command to install all packages (and their
     dependencies) listed in your ``package.json``.

     To learn more about npm and ``node_modules``, consult the
     `npm documentation <https://docs.npmjs.com/cli/install>`_ .

---
title: Create a Dependency Archive
ref: create-a-dependency-archive
content: |
  Now that you've downloaded all of your npm modules, you need to
  package them up in an archive so you can upload them to {+service-short+}. Create
  an archive containing the ``node_modules`` folder:

  .. code-block:: shell
     
     tar -czf node_modules.tar.gz node_modules/

  .. note:: Supported Archive Formats
     
     {+service-short+} supports ``.tar``, ``.tar.gz``, and ``.zip`` archive
     formats.

---
title: Upload the Dependency Archive
ref: upload-the-dependency-archive
content: |
  Once you've created an archive containing your dependencies, you can upload your
  dependency archive using the {+ui+} or {+cli-bin+}:

  .. tabs-realm-admin-interfaces::
     
     .. tab::
        :tabid: ui

        #. Select :guilabel:`Functions` from the {+leftnav+}.
        #. Select the :guilabel:`Dependencies` tab.
      
        #. Click the :guilabel:`Upload` button.
      
        #. In the file picker, select the ``node_modules.tar.gz`` archive you
           just created and click Open. {+service-short+} automatically uploads the
           archive file, which may take several minutes depending on the
           speed of your internet connection and the size of your dependency
           archive.
      
        #. Whether the operation succeeded or failed, {+service-short+} displays a banner
           indicating the success or failure of the operation. If successful,
           the :guilabel:`Dependencies` tab displays a list of the
           dependencies that you included in your dependency archive. If
           drafts are enabled, you will also need to click
           :guilabel:`Review & Deploy` to apply these changes. If drafts are
           disabled, the change will take effect within 5 to 60 seconds
           depending on the size of your dependency archive.
     
     .. tab::
        :tabid: cli
        
        #. Add the ``node_modules`` archive to your ``/functions``
           directory:
           
           .. code-block:: shell
              
              mv node_modules.tar.gz ./myapp/functions
        
        #. Import your application with the :option:`--include-dependencies
           <realm-cli import --include-dependencies>` option:
           
           .. code-block:: shell
              
              realm-cli import --include-dependencies
