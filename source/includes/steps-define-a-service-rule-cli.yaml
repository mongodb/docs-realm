title: Pull Your App's Latest Configuration Files
ref: pull-your-apps-latest-configuration-files
content: |
  .. code-block:: shell

     realm-cli pull --remote=<App ID>
---
title: Create a Service Rule Directory
ref: create-a-service-rule-directory
content: |
   If it doesn't already exist, create a new ``rules`` subdirectory in
   the ``/services`` folder of the exported directory.

   .. code-block:: shell

      mkdir -p services/<service name>/rules
---
title: Create and Configure a New Service Rule
ref: create-and-configure-a-new-service-rule
content: |
  Add a rule configuration JSON file to the ``rules`` directory. The
  configuraiton file should have the same name as the rule and have the
  following form:

  .. code-block:: json

     {
       "name": <string>,
       "actions": [<action>, ...],
       "when": <JSON expression>
     }

  .. list-table::
     :header-rows: 1
     :widths: 10 30

     * - Configuration Value
       - Description

     * - | :guilabel:`Rule Name`
         | *name*

       - Required. A name for the rule. The name should be unique
         within the service.

     * - | :guilabel:`Actions`
         | *actions*

       - Required. An array of strings where each item is the name of
         a service action that the rule applies to.

         .. example::

            An HTTP service rule that only applies to the
            :doc:`http.post()
            </services/http-actions/http.post>` service
            action would have the following ``action`` value:

            .. code-block:: json

              "actions": [
                "post"
              ]

     * - | :guilabel:`When`
         | *when*

       - Required. A :ref:`rule expression <expressions>` that determines if a
         service action should actually execute after being called. {+backend+}
         will only execute the action if the expression resolves to ``true``. If
         you do not specify an expression, :guilabel:`Can Evaluate` defaults to
         ``true``.
---
title: Deploy the Rule
ref: deploy-the-rule
content: |
  Push the rule configuration to deploy it to your app. Once you have deployed,
  Realm immediately begins to enforce the rule.
  
  .. code-block:: shell
     
     realm-cli push
