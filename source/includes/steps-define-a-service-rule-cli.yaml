title: Export Your Realm Application
ref: export-your-application
content: |
  To define a new service rule with :doc:`realm-cli
  </deploy/realm-cli-reference>`, you need a
  previously created :ref:`application configuration <application-directory>`.

  You can :doc:`export your application
  </deploy/export-realm-app>` configuration from the :guilabel:`Export`
  tab of the :guilabel:`Settings` page in the {+ui+}, or by running the
  following command from an authenticated instance of :doc:`realm-cli
  </deploy/realm-cli-reference>`:

  .. code-block:: shell

     realm-cli export --app-id=<App ID>
---
title: Create a Service Rule Directory
ref: create-a-service-rule-directory
content: |
   If it doesn't already exist, create a new ``rules`` subdirectory in
   the ``/services`` folder of the exported directory.

   .. code-block:: shell

      mkdir -p services/<service name>/rules
---
title: Create and Configure a New Service Rule
ref: create-and-configure-a-new-service-rule
content: |
  Add a rule configuration JSON file to the ``rules`` directory. The
  configuraiton file should have the same name as the rule and have the
  following form:

  .. code-block:: json

     {
       "name": <string>,
       "actions": [<action>, ...],
       "when": <JSON expression>
     }

  .. cssclass:: auth-table
  .. list-table::
     :header-rows: 1
     :widths: 10 30

     * - Configuration Value
       - Description

     * - | :guilabel:`Rule Name`
         | *name*

       - Required. A name for the rule. The name should be unique
         within the service.

     * - | :guilabel:`Actions`
         | *actions*

       - Required. An array of strings where each item is the name of
         a service action that the rule applies to.

         .. example::

            An HTTP service rule that only applies to the
            :doc:`http.post()
            </services/http-actions/http.post>` service
            action would have the following ``action`` value:

            .. code-block:: json

              "actions": [
                "post"
              ]

     * - | :guilabel:`When`
         | *when*

       - Required. A :doc:`JSON expression </services/json-expressions>`
         that determines if a service action should actually execute
         after being called. {+backend+} will only execute the action if the
         expression resolves to ``true``. If you do not specify an
         expression, :guilabel:`Can Evaluate` defaults to ``true``.
---
title: Import the Service Rule
ref: import-the-service-rule
content: |
  Once you've configured the service rule, all that's left is to import
  it into your {+app+}.

  1. Ensure that ``<rule name>.json`` is saved.

  2. Navigate to the root of the exported application directory.

  3. Log in to MongoDB Atlas with {+cli-bin+}:

     .. code-block:: shell

        realm-cli login --api-key="<my api key>" --private-api-key="<my private api key>"

  4. Import the directory:

     .. code-block:: shell

        realm-cli import

  Now that you have imported the rule, it takes effect immediately.
