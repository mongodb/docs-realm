title: Pull the Latest Version of Your App
ref: pull-the-latest-version-of-your-app
content: |
  To define filters for a collection with {+cli-bin+}, you need a local
  copy of your application's configuration files.
  
  To pull a local copy of the latest version of your app, run the following:
  
  .. code-block:: bash
     
     realm-cli pull --remote="<Your App ID>"
  
  .. tip::
     
     You can also download a copy of your application's configuration files from
     the :guilabel:`Deploy > Export App` screen in the {+ui+}.
---
title: Add a Rule Configuration File
ref: add-a-rule-configuration-file
content: |
  
  To define or modify roles for a collection, open the ``rules.json``
  configuration file within the collection's configuration directory.
  
  .. tip:: Scaffold the Collection
     
     If you haven't already defined rules or a schema for the collection, you
     need to manually create its configuration directory and ``schema.json``:

     .. code-block:: bash
        
        # Create the collection's configuration directory
        mkdir -p data_sources/<service>/<db>/<collection>
        # Create the collection's schema file
        echo '{}' >> data_sources/<service>/<db>/<collection>/rules.json
  
  The configuration file should have the following general form:
  
  .. code-block:: json
  
     {
       "database": "<Database Name>",
       "collection": "<Collection Name>",
       "roles": [],
       "filters": []
     }

  .. note::
     
     This guide focuses on creating ``filters`` for the collection. Check out
     the other configuration guides to learn how to :doc:`define roles and
     permissions </mongodb/define-roles-and-permissions>` and :ref:`enforce
     schemas <enforce-a-schema>`.
   
  .. include:: /includes/data-lake-rules-note.rst

---
title: Add One or More Filters
ref: add-one-or-more-filters
content: |
  Add a document to the ``filters`` array for each filter that you want
  to configure. Filter documents have the following form:

  .. include:: /mongodb/tables/query-filter-params.rst

---
title: Deploy the Updated Rules
ref: deploy-the-updated-rules
content: |
  Once you've defined and saved ``rules.json`` you can push the updated config
  to your remote app. {+cli+} immediately deploys the filters on push.
  
  .. code-block:: bash
     
     realm-cli push --remote="<Your App ID>"
