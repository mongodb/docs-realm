title: Pull the Latest Version of Your App
ref: pull-the-latest-version-of-your-app
content: |
  To link a MongoDB Atlas cluster or data lake with {+cli-bin+}, you need a
  local copy of your application's configuration files.
  
  To pull a local copy of the latest version of your app, run the following:
  
  .. code-block:: bash
     
     realm-cli pull --remote="<Your App ID>"
  
  .. tip::
     
     You can also download a copy of your application's configuration files from
     the :guilabel:`Deploy > Export App` screen in the {+ui+}.
---
title: Create a Data Source Configuration Directory
ref: create-a-data-source-configuration-directory
content: |
  Create a new subdirectory with the name that you'll use for the data source in
  ``/data_sources``.
  
  .. code-block:: shell
     
     mkdir -p data_sources/<Data Source Name>
---
title: Add a Data Source Configuration File
ref: add-a-data-source-configuration-file
content: |
  Add a file named ``config.json`` to the data source subdirectory. The file can
  configure either a MongoDB Atlas cluster or an Atlas data lake.
  
  The configuration file should have the following general form:
  
  .. tabs::
     
     .. tab:: Atlas Cluster
        :tabid: cluster

        .. code-block:: json
           :caption: /data_sources/<Service Name>/config.json
           
           {
             "name": "<Service Name>",
             "type": "mongodb-atlas",
             "config": {
               "clusterName": "<Atlas Cluster Name>",
               "readPreference": "<Read Preference>",
               "wireProtocolEnabled": <Boolean>,
               "sync": <Sync Configuration>
             }
           }
        
        .. note::
           
           For detailed information on the contents of a cluster configuration
           file, see :ref:`Linked MongoDB Cluster Configuration
           <config-mongodb-cluster>`.
     
     .. tab:: Atlas Data Lake
        :tabid: datalake
        
        .. code-block:: json
           :caption: /data_sources/<Service Name>/config.json
           
           {
             "name": "<Service Name>",
             "type": "datalake",
             "config": {
                "dataLakeName": "<Data Lake>"
              }
           }
        
        .. note::
           
           For detailed information on the contents of a data lake configuration
           file, see :ref:`Linked Data Lake Configuration <config-datalake>`.
---
title: Deploy the Data Source Configuration
ref: deploy-the-data-source-configuration
content: |
  Once you've defined and saved a ``config.json`` file for the data
  source, you can push the config to your remote app. {+service-short+}
  immediately begins the process of linking to the data source, which
  could take up to five minutes.
  
  .. code-block:: bash
     
     realm-cli push --remote="<Your App ID>"
