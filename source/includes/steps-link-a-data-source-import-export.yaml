title: Export Your Realm Application
ref: export-your-application
content: |
  To link a MongoDB Atlas cluster to your {+app+} with
  :doc:`realm-cli </deploy/realm-cli-reference>`, you need a
  previously created :ref:`application configuration <application-directory>`.
  You can :doc:`export your application
  </deploy/export-realm-app>` configuration from the :guilabel:`Export`
  tab of the :guilabel:`Settings` page in the {+ui+}, or by running the
  following command from an authenticated instance of :doc:`realm-cli
  </deploy/realm-cli-reference>`:

  .. code-block:: shell

     realm-cli export --app-id=<App ID>

---
title: Create a MongoDB Service Configuration Directory
ref: create-a-mongodb-service-configuration-directory
content: |
  Create a new subdirectory in the ``/services`` folder of the
  application directory that you exported. The name of the subdirectory
  should match the name of the MongoDB service you're creating.

  .. code-block:: shell

     mkdir -p services/<MongoDB Service Name>

---
title: Add a MongoDB Service Configuration File
ref: add-a-mongodb-service-configuration-file
content: |
  Add a file named ``config.json`` to the new service directory.

  .. include:: /includes/data-source-configuration.rst

---
title: Import the Application Directory
ref: import-the-application-directory
content: |
  Once you've added the MongoDB service configuration, all that's left
  is to import the function.

  A. Save the ``config.json``. 
  #. Navigate to the root of the exported application directory.
  #. Log in to MongoDB Atlas with {+cli-bin+}:  

     .. code-block:: shell

        realm-cli login --api-key="<my api key>" --private-api-key="<my private api key>"

  #. Import the directory:

     .. code-block:: shell

        realm-cli import
