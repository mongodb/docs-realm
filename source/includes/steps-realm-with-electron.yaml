title: Set up Your Application Files
ref: setup-application-files
content: |
  To begin developing your application, create an application directory:

  .. code-block:: shell

     mkdir myElectronApplication
     
  Create an ``index.html``, ``main.js``, and ``renderer.js`` file in the root
  directory of your application.
  
  .. code-block:: sh
  
     touch index.html main.js renderer.js
  
  The ``main.js`` file is the entry point into your application and
  executes on the main process. It is responsible for loading your ``index.html``
  file into Electron's `BrowserWindow API
  <https://www.electronjs.org/docs/api/browser-window>`__. Any script files that
  you require in this HTML file will execute on a renderer process.
  Add the following to your ``index.html`` file:

  .. code-block:: html

     <!DOCTYPE html>
     <html>
       <head>
         <meta charset="UTF-8" />
         <title>Hello World!</title>
       </head>
       <body>
         <h1>Hello World!</h1>
         <script src="renderer.js"></script>
       </body>
     </html>

  Add the following code to the ``renderer.js`` file:

  .. code-block:: javascript

     const Realm = require("realm"); 

  .. note::

     Each Electron application can only have one ``main process``. The
     main process creates web pages. Each web page runs in its
     own process, known as a ``renderer process``. To learn more about
     this, read the official `Electron Application
     Architecture <https://www.electronjs.org/docs/tutorial/application-architecture>`_
     document.
---
title: Create the Main Script File
ref: create-your-main-js-script-file
content: |
  The ``main.js`` file is the entry point of your application. Create an
  Electron BrowserWindow in it and load your ``index.html`` file to display your
  HTML to users: 

  .. code-block:: javascript

     const { app, BrowserWindow } = require('electron')
 
     function createWindow () {
       const win = new BrowserWindow({
         width: 800,
         height: 600,
         webPreferences: {
           nodeIntegration: true
         }
       })

       // to prevent the Sync Connection from ending prematurely, start reading from stdin so we don't exit
       process.stdin.resume(); 
 
       win.loadFile('index.html')
     }
 
     app.whenReady().then(createWindow)


---
title: Set up a ``package.json``
ref: setup-packagejson
content: |
  Initialize a ``package.json`` to begin installing packages and using them
  in your project. Run the following command in your terminal:

  .. code-block:: shell

     npm init -y

  Your application file structure should resemble the following:

  .. code-block:: text
     :emphasize-lines: 5, 6

     .
     |-- package.json 
     |-- package-lock.lock
     |-- index.html
     |-- main.js // runs on the main process
     |-- renderer.js // runs on a renderer process

  The file ``main.js`` executes on the ``main`` process. The file
  ``renderer.js`` and any other files required by it, or by ``index.html``,
  executes on a ``renderer`` process.

---
title: Install Your Project Dependencies
ref: install-dependencies
content: |
  Install the necessary dependencies to begin developing your Electron application using Realm. 

  .. code-block:: shell

     npm install electron --save-dev
     npm install realm --save

---
title: Create a Script to Run Your Application
ref: create-script-to-run-app
content: |
  Add a script to your ``package.json`` file in order to start your application with the ``npm start`` command.

  .. code-block:: json

     "scripts": {
      "start": "electron ."
     }
     
---
title: Run Your Application
ref: run-electron-app
content: |
  Start your application from the terminal:

  .. code-block:: shell

     npm start

  You should see the following:

  .. cssclass:: bordered-figure
  .. figure:: /images/electron-app.png
    :alt: Electron Desktop App
