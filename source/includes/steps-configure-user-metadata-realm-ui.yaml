title: Navigate to the Authentication Provider Configuration Screen
ref: navigate-to-the-authentication-provider-configuration-screen
content: |
  You can configure and enable user metadata in the {+ui+}. To
  get to the configuration page, click :guilabel:`Authentication` in the
  {+leftnav+} and then select the :guilabel:`Authentication Providers`
  tab. Press the :guilabel:`EDIT` button for the provider whose metadata
  you want to configure.
---
title: Configure User Metadata
ref: configure-user-metadata
content: |
  To configure metadata in your Google or Facebook authentication provider,
  select the appropriate checkboxes next to the metadata fields you want to 
  enable.
  
  .. figure:: /images/configure-user-metadata-google-facebook-realm-ui.png
     :alt: The checkboxes to enable user metadata fields in the {+ui+}
     :width: 750px
     :lightbox:

  To configure metadata in a custom JWT authentication provider, press the 
  :guilabel:`Add Field` button. Specify whether the field is required
  or optional and define a path and field name. For more details, see:
  :ref:`JWT metadata fields 
  <custom-jwt-authentication-configuration-metadata-fields>`.

  .. figure:: /images/configure-user-metadata-custom-jwt-realm-ui.png
     :alt: Add metadata required/optional, path, and name in the {+ui+}
     :width: 750px
     :lightbox:
  
  When you have configured the metadata that you would like to read from the
  authentication provider, press the :guilabel:`Save Draft` button.
---
title: Deploy the Updated Application
ref: deploy-the-updated-application
content: |
  Once you have configured the metadata you want to access, you can
  make metadata available to client applications by deploying
  your application. To deploy a draft application from the {+ui+}:
  
  1. Click :guilabel:`Deploy` in the {+leftnav+}.
  
  2. Find the draft in the deployment history table and then click
     :guilabel:`Review & Deploy Changes`.
  
  3. Review the diff of changes and then click :guilabel:`Deploy`.

  Once the application successfully deploys, {+service-short+} begins to associate
  metadata with users. When a user logs in, {+service-short+} requests user
  permission to access the requested metadata. If the user approves, 
  {+service-short+} exposes the data in that user's :ref:`user object 
  <user-objects>`.
...
