title: Navigate to the Sync Configuration Screen
ref: navigate-to-the-sync-configuration-screen
content: |
  To define {+sync-short+} rules and enable {+sync-short+} for your application, navigate to the
  :guilabel:`Sync` configuration screen through the {+leftnav+}.

  .. note:: Sync Rules Cannot Change
     
     You define {+sync-short+} rules at the same time as you enable {+sync-short+}. Once {+sync-short+} is
     enabled, you can't change your app's {+sync-short+} rules unless you terminate {+sync-short+}
     and re-enable it with new rules.
---
title: Select Development Details
ref: select-development-details
content: |
  You can enable {+sync-short+} for a single :term:`linked cluster` in your application.
  Determine which cluster you want to use and then select it from the
  :guilabel:`Select Cluster To {+sync-short+}` dropdown menu.

  .. figure:: /images/define-sync-rules-select-cluster.png
     :width: 750px
     :alt: The cluster selection dropown menu
---
title: Choose a Partition Key
ref: choose-a-partition-key
content: |
  The {+sync-short+} :term:`partition key` is a field in every synced document that maps
  each document to a client-side realm. {+sync-short+} rules apply at the partition 
  level, so it's particularly important to consider your data model and access 
  patterns. For more information on partition keys and how to choose one, see
  :ref:`Partitions <sync-partitions>`.
  
  .. note::
    
    The partition key can either be required or optional. If the partition key 
    field is optional, then all MongoDB documents that either exclude the 
    partition key or have a null value for the partition key will be sent to the 
    :term:`null partition`. If the partition key field is required, {+sync+} 
    ignores any MongoDB documents that lack a valid value for the partition 
    key. We recommend a required partition key unless you want to {+sync-short+}
    pre-existing data with invalid or missing partition values from a
    MongoDB collection.
---
title: Define Read & Write Permissions
ref: define-read-write-permissions
content: |
  The :guilabel:`Define Permissions` section allows you to define :ref:`JSON
  expressions <expressions>` that Realm dynamically evaluates to determine a
  user's read and write permissions for the data in a given partition.
  
  {+sync-short+} rule expressions have access to :json-expansion:`%%user`, which resolves
  to the user that opened the realm, and :json-expansion:`%%partition`, which
  resolves to the partition key value for the realm. You can also use operators,
  including :json-operator:`%function`, to handle more complex cases. For
  examples, see :ref:`{+sync-short+} Permissions <sync-permissions>`.

  Once you've determined how to decide a user's read and write permissions for a
  given partition, define the corresponding JSON expressions in the
  :guilabel:`Read` and :guilabel:`Write` inputs.
  
  .. figure:: /images/define-sync-rules-permissions.png
     :width: 750px
     :alt: The partition read and write expression inputs
---
title: Turn On Sync
ref: turn-on-sync
content: |
  Now that you've configured rules for your synced cluster, all that's left to
  do is turn on {+sync-short+} for client applications. Click :guilabel:`Enable Sync`,
  take note of any recommendations that appear, and then confirm your choice.
...
