.. _authentication-triggers:

=======================
Authentication Triggers
=======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


Overview
--------

Authentication triggers allow you to execute server-side logic
whenever a user interacts with an :doc:`authentication provider
</authentication/providers>`. You can use authentication triggers
to implement advanced user management, including storing new user data
in your :term:`linked cluster`, maintaining data integrity upon user
deletion, or calling a service with a userâ€™s information when they log
in.

Create an Authentication Trigger
--------------------------------

.. tabs-realm-admin-interfaces::
   
   .. tab::
      :tabid: ui
      
      To open the authentication trigger configuration screen in the {+ui+},
      click :guilabel:`Triggers` in the {+leftnav+}, select the
      :guilabel:`Authentication Triggers` tab, and then click :guilabel:`Add a
      Trigger`.

      Configure the trigger and then click :guilabel:`Save` at the bottom of the
      page to add it to your current deployment draft.
      
      An authentication trigger has the following configuration options:
      
      .. list-table::
         :header-rows: 1
         :widths: 15 30
      
         * - Field
           - Description
      
         * - :guilabel:`Trigger Type`
      
           - The type of the trigger. For authentication triggers,
             this value should be set to ``AUTHENTICATION``.
      
         * - :guilabel:`Trigger Name`
      
           - The name of the trigger.
      
         * - :guilabel:`Linked Function`
      
           - The name of the {+service-short+} Function that the trigger
             executes whenever it fires. The trigger passes the :ref:`authentication
             event object <authentication-events>` that caused it to fire as the only
             argument to this function.
      
         * - :guilabel:`Operation Type`
      
           - The :ref:`authentication operation
             type <authentication-event-operation-types>` that causes the trigger to
             fire.
      
         * - :guilabel:`Providers`
      
           - A list of one or more :doc:`authentication provider
             </authentication/providers>` types. The trigger will only listen for
             :ref:`authentication events <authentication-events>` produced by these
             providers.
      
      .. figure:: /images/auth-trigger-example-config.png
         :alt: An example of a configured authentication trigger in the UI
         :width: 750px
         :lightbox:
      
   .. tab::
      :tabid: cli

      To create an authentication trigger with :doc:`{+cli+}
      </deploy/realm-cli-reference>`:
      
      1. Add an authentication trigger :ref:`configuration file
         <config-authentication-trigger>` to the ``triggers`` subdirectory of a
         local application directory.
      
         .. note::
            
            {+backend+} does not enforce specific filenames for {+service-short+} trigger
            configuration files. However, once imported, {+backend+} will
            rename each configuration file to match the name of the
            trigger it defines, e.g. ``mytrigger.json``.
      
      2. :doc:`Deploy </deploy/deploy-cli>` the trigger:
      
         .. code-block:: shell
            
            realm-cli push

.. _authentication-events:

Authentication Events
----------------------

.. _authentication-event-operation-types:

Authentication events represent user interactions with an authentication
provider. Each event corresponds to a single user action with one of the
following operation types:

.. list-table::
   :header-rows: 1
   :widths: 10 30

   * - Operation Type
     - Description

   * - ``LOGIN``
     - Represents a single instance of a user logging in.

   * - ``CREATE``
     - Represents the creation of a new user.

   * - ``DELETE``
     - Represents the deletion of a user.

Authentication event objects have the following form:

.. code-block:: json
   :copyable: false

   {
     "operationType": <string>,
     "providers": <array of strings>,
     "user": <user object>,
     "time": <ISODate>
   }

.. list-table::
   :header-rows: 1
   :widths: 10 30

   * - Field
     - Description
   * - ``operationType``
     - The :ref:`operation type <authentication-event-operation-types>`
       of the authentication event.
   * - ``providers``
     - The :doc:`authentication providers </authentication/providers>`
       that emitted the event.

       One of the following names represents each authentication provider:

       .. include:: /includes/auth-provider-internal-names.rst

       .. note::

          Generally, only one authentication provider emits each event.
          When a you delete a user linked to
          multiple providers, the ``DELETE`` event for
          that user includes all linked providers. 
   * - ``user``
     - The :doc:`user object </authentication>` of the user that interacted with
       the authentication provider.
   * - ``time``
     - The time at which the event occurred.
