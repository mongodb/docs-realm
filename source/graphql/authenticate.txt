=============================
Authenticate GraphQL Requests
=============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

The GraphQL API operates over HTTP, which means that you can access your
:ref:`exposed data <graphql-expose-data>` using any HTTP or GraphQL client.
Realm enforces rules for all GraphQL operations, so any GraphQL HTTP request
must include an application user's login credentials or a valid access token.

.. _graphql-authorization-token-header:

Authorization Header
--------------------

To authenticate a GraphQL request as an arbitrary logged in user from any
provider, include a valid :ref:`user access token
<authenticate-http-client-requests>` as a bearer token in the request's
``Authorization`` header:

.. code-block:: javascript
   :emphasize-lines: 4
   
   http.post({
     "url": "https://realm.mongodb.com/api/client/v2.0/app/<yourappid-abcde>/graphql",
     "headers": {
       "Authorization": "Bearer <Access Token>"
     },
     "body": '{"query":"query AllMovies {\n  movies {\n    title\n    year\n  }\n}"}'
   })

.. code-block:: shell
   :emphasize-lines: 2

   curl --location --request POST 'https://realm.mongodb.com/api/client/v2.0/app/<yourappid-abcde>/graphql' \
      --header 'Authorization: Bearer <Access Token>' \
      --header 'Content-Type: application/json' \
      --data-raw '{"query":"query AllMovies {\n  movies {\n    title\n    year\n  }\n}"}'

.. _graphql-authorization-credential-headers:

Credential Headers
------------------

.. important::
   
   Credential headers are useful for infrequent or test requests. However, we
   **strongly encourage** you to authenticate GraphQL requests using
   an :ref:`Authorization Header <graphql-authorization-token-header>` from a
   client that uses a {+service-short+} SDK.
   
   GraphQL requests from a web browser must use an Authorization header to
   avoid :wikipedia:`CORS errors <Cross-origin_resource_sharing>`.

Email/Password
~~~~~~~~~~~~~~

To authenticate a GraphQL request as an :ref:`email/password
<email-password-authentication>` user, include the user's credentials in the
request's ``email`` and ``password`` headers:

.. code-block:: javascript
   :emphasize-lines: 4-5
   
   http.post({
     "url": "https://realm.mongodb.com/api/client/v2.0/app/<yourappid-abcde>/graphql",
     "headers": {
       "email": "<User's Email Address>",
       "password": "<User's Password>",
     },
     "body": '{"query":"query AllMovies {\n  movies {\n    title\n    year\n  }\n}"}'
   })

.. code-block:: shell
   :emphasize-lines: 2-3

   curl --location --request POST 'https://realm.mongodb.com/api/client/v2.0/app/<yourappid-abcde>/graphql' \
      --header 'email: <User's Email Address>' \
      --header 'password: <User's Password>' \
      --header 'Content-Type: application/json' \
      --data-raw '{"query":"query AllMovies {\n  movies {\n    title\n    year\n  }\n}"}'

API Key
~~~~~~~

To authenticate a GraphQL request as an :ref:`API Key <api-key-authentication>`
user, include the user or server API key in the request's ``apiKey`` header:

.. code-block:: javascript
   :emphasize-lines: 4
   
   http.post({
     "url": "https://realm.mongodb.com/api/client/v2.0/app/<yourappid-abcde>/graphql",
     "headers": {
       "apiKey": "<User or Server API Key>"
     },
     "body": '{"query":"query AllMovies {\n  movies {\n    title\n    year\n  }\n}"}'
   })

.. code-block:: shell
   :emphasize-lines: 2

   curl --location --request POST 'https://realm.mongodb.com/api/client/v2.0/app/<yourappid-abcde>/graphql' \
      --header 'apiKey: <User or Server API Key>' \
      --header 'Content-Type: application/json' \
      --data-raw '{"query":"query AllMovies {\n  movies {\n    title\n    year\n  }\n}"}'

Custom JWT
~~~~~~~~~~

To authenticate a GraphQL request as a :ref:`custom JWT
<custom-jwt-authentication>` user, include the JWT string in the request's
``jwtTokenString`` header:

.. code-block:: javascript
   :emphasize-lines: 4
   
   http.post({
     "url": "https://realm.mongodb.com/api/client/v2.0/app/<yourappid-abcde>/graphql",
     "headers": {
       "jwtTokenString": "<User's JWT Token>"
     },
     "body": '{"query":"query AllMovies {\n  movies {\n    title\n    year\n  }\n}"}'
   })

.. code-block:: shell
   :emphasize-lines: 2

   curl --location --request POST 'https://realm.mongodb.com/api/client/v2.0/app/<yourappid-abcde>/graphql' \
      --header 'jwtTokenString: <User's JWT Token>' \
      --header 'Content-Type: application/json' \
      --data-raw '{"query":"query AllMovies {\n  movies {\n    title\n    year\n  }\n}"}'
