.. _enforce-a-schema:

================
Enforce a Schema
================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

You can control the shape and contents of documents in a collection by defining
a :ref:`schema <schemas>`. Schemas let you require specific fields, control the
type of a field's value, and validate changes before committing write
operations.

This guide shows you how to define, configure, and deploy a schema for a linked
MongoDB Atlas collection.

.. note:: Data Lakes Do Not Support Schemas

   Data Lake data sources :ref:`do not support <data-lake-caveats>` schema
   validation or data access rules. You can only access a Data Lake data source
   in a system function.

Procedure
---------

.. tabs-realm-admin-interfaces::
   
   .. tab::
      :tabid: ui
      
      .. include:: /includes/steps/enforce-a-schema-ui.rst
   
   .. tab::
      :tabid: cli
      
      .. include:: /includes/steps/enforce-a-schema-cli.rst

.. _validate-null-types:

Validate Null Types
-------------------

{+service+}'s default behavior is to only accept a single type for each field. 
Schema fields are not nullable by default because ``null`` is a unique 
:manual:`BSON type </reference/bson-types/>`.

You can configure {+service+} to pass schema validation when you use ``null`` 
values with optional fields.
Enabling null type validation allows the value for a field to be persisted as
the type in the schema or the :manual:`BSON null </reference/bson-types/>` type.
If you do not enable null type schema validation, {+service-short+} rejects ``null``
values passed to optional fields. Even if you enable null type validation,
required fields are never nullable.


To enable null type schema validation in the {+ui+}: 

#. In the left navigation menu below the :guilabel:`Manage` header, select :guilabel:`App Settings`.
#. On the :guilabel:`General` tab, navigate to the :guilabel:`Null Type Schema Validation`
   section. Toggle the switch to :guilabel:`ON`.
#. Click the :guilabel:`Save` button. 
