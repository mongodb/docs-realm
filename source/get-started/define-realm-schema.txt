=====================
Define a Realm Schema
=====================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------
You can create a :manual:`Data Model </data-modeling/>` to define the
structure of the data you are storing in your database. Setting a data
model is a useful technique to enforce :wikipedia:`data
validation</Data_validation>` on your collection. Although MongoDB and
Realm are both object-centric, there are differences between their Data
Models, such as the structuring of relationships, supported types, etc.

This page teaches how to define a Data Model using MongoDB Realm. If you
currently have data in `MongoDB Atlas
<http://www.mongodb.com/cloud/atlas/>`_, you will learn how to translate
this data into a Data Model suitable for Realm mobile development. If
you do not have data in Atlas, you will learn how to use ``Development
Mode`` to create a :doc:`schema</mongodb/document-schemas>` for Atlas so
that you can take your mobile application to production. 


Starting with Data in MongoDB
-----------------------------
You can create a Data Model for Realm if you already have data in
MongoDB Atlas. Navigate through the MongoDB Realm UI to sample the data
in your collection to automatically generate a schema. Then edit that
schema, and translate it into a Realm Data Model for the language of
your choice. 

Procedure
~~~~~~~~~

#. Sign up for Atlas and create a cluster.
#. Create a MongoDB Realm application.
#. Navigate to the ``SDKs`` page to link your MongoDB Realm application to your Atlas Cluster.
#. In the ``rules`` page, click ``Generate Schema`` to automatically create a schema based on your cluster data.

   .. figure:: /images/generate-schema-based-on-cluster-data.png
      :width: 750px
      :lightbox:

#. Edit your ``JSON Schema``.

   .. figure:: /images/edit-schema-based-on-cluster-data.png
      :width: 750px
      :lightbox:

#. In the ``SDKs`` page, view your ``JSON Schema`` as a Realm Data Model in your language of choice.

   .. figure:: /images/translate-jsonschema-into-realm-data-model.png
      :width: 750px
      :lightbox:

#. Click ``View all Schema Errors`` to see the errors & warnings from translating your ``JSON Schema`` into a Data Model.

   .. figure:: /images/schema-translation-errors-warnings.png
      :width: 750px
      :lightbox:

Starting with your application using 'Development Mode'
--------------------------------------------------------------
You can create a schema suitable for MongoDB Atlas so that you can take
your application to production. Through ``Development Mode`` in
the MongoDB Realm UI, you can develop your Data Model. After developing
your Data Model, MongoDB will automatically generate a schema for your
Atlas cluster. 

Procedure
~~~~~~~~~

#. Sign up for Atlas and create a cluster.
#. Create a MongoDB Realm application.
#. Navigate to the ``SDKs`` page to link your MongoDB Realm application to your Atlas Cluster.
#. Enable ``Development Mode``, automatically, by navigating to the ``SDKs`` page.

   .. figure:: /images/enable-schema-development-mode.png
      :width: 750px
      :lightbox:

#. Create a Data Model in the language of your choice with the Realm Client SDKs.

   .. figure:: /images/define-your-data-models.png
      :width: 750px
      :lightbox:

#. Alter ``Validation Settings`` on the ``Sync`` page.

   .. figure:: /images/alter-validation-settings.png
      :width: 750px
      :lightbox:
      
#. Click ``Save``.
#. A modal will appear, click ``View my JSON Schema`` to view your generated schema for Atlas.

   .. figure:: /images/view-my-json-schema.png
      :width: 461px
      :lightbox: 
      
Summary
-------
- If you already have application data stored in MongoDB Atlas, you can translate your automatically generated schema into a Data Model to use for your Realm Mobile Application.
- If you want to take your Realm app to production but do not already have application data stored in MongoDB Atlas, you can activate ``Development Mode`` in the MongoDB Realm UI. This will allow you to develop your Data Model and have it automatically translated into a schema for Atlas. 