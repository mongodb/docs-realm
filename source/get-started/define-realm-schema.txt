===================
Define a Data Model
===================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In modern applications, users update their data continuously. Users also
expect their data to be available and accurate cross-platform and in
real time. Storing your data in `MongoDB Atlas
<http://www.mongodb.com/cloud/atlas/>`_ ensures the availability of
your data. Using schemas ensures the accuracy of the data by
performing type and format checks on fields. 

There are two different types of :term:`Realm Data Models` you will need:

- :doc:`Realm Schema </mongodb/document-schemas>`, which defines your data as
  MongoDB documents.

- :doc:`Realm Object Model </data-model/realms>`, which defines your data as
  native objects in your mobile application.

If you have already started storing your application data on MongoDB
Atlas, MongoDB Realm can generate a Realm Schema through ``Automated
Schema Generation with MongoDB Realm`` and translate that Realm Schema
into the Realm Object Model you need for mobile. Alternatively, if you
have not started storing your application data yet in Atlas,
``Development Mode with MongoDB Realm`` allows you to create both
the schemas that you will need.

.. note:: 

  There are some differences between `Realm Schema
  <https://json-schema.org/>`_ and Realm Object Models including the
  structure of relationships and restrictions on certain data types. To
  learn more, read the :doc:`Realm Object Model Restrictions
  </realm-database-restrictions>` page. 

Automated Schema Generation with MongoDB Realm
----------------------------------------------

You can generate a Realm Schema if you already have data in MongoDB
Atlas. Navigate through the MongoDB Realm UI to sample the data in your
collection and automatically generate a schema. You can then edit that
schema and once you are done editing, MongoDB Realm automatically
translates it into a Realm Object Model for the language of your choice.


Procedure
~~~~~~~~~

.. note:: 

  To get started, sign up for MongoDB Atlas, create a cluster and
  :atlas:`insert data into your cluster
  </tutorial/insert-data-into-your-cluster/>` if you haven't already.
  Then :doc:`link your Atlas cluster</mongodb/link-a-cluster>` to your
  MongoDB Realm Application

.. include:: /includes/steps/auto-schema-generation.rst

Development Mode with MongoDB Realm
-----------------------------------

Through :guilabel:`Development Mode`, you can develop
your Realm Object Model to use in your mobile application. After developing your Realm Object Model,
MongoDB Realm automatically generates a Realm Schema for your Atlas
cluster. 

Procedure
~~~~~~~~~

.. note:: 

  To get started, sign up for MongoDB Atlas and create a cluster. Then
  :doc:`link your Atlas cluster</mongodb/link-a-cluster>` to your
  MongoDB Realm Application

.. include:: /includes/steps/development-mode-realm-schema.rst

Summary
-------
- If you already have application data stored in MongoDB Atlas, you can translate your automatically-generated schema into a Realm Object Model to use for your Realm Mobile Application.
- If you want to take your Realm app to production but do not already have application data stored in MongoDB Atlas, you can activate ``Development Mode`` in the MongoDB Realm UI. This will allow you to develop your Realm Object Model and have it automatically translated into a Realm Schema for Atlas. 
