.. _api-key-authentication:

======================
API Key Authentication
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _api-key-authentication-overview:

Overview
--------

The API Key :ref:`authentication provider <authentication-providers>`
allows users to log in using generated keys. There are two types of API
keys in {+service+}: server keys and user keys.

.. _api-key-authentication-server-api-key:

Server API Keys
~~~~~~~~~~~~~~~

Server API keys are generated in the {+ui+}. Creating a server API key
associates that API key with an automatically created {+service-short+} server user.
Provide a server key to external applications and services to allow them
to authenticate directly with {+service-short+}.

.. _api-key-authentication-user-api-key:

User API Keys
~~~~~~~~~~~~~

User API keys are generated for specific application users by the client
SDKs. You can allow devices or services to communicate with {+service-short+} on
behalf of a user by associating a unique user API key with each device.

User keys are always associated with a non-anonymous user. Each user can
associate up to 20 user keys with their account.

.. _api-key-authentication-configuration:
.. _config-api-key:

Configuration
-------------

.. tabs-realm-admin-interfaces::
   
   
   .. tab::
      :tabid: ui

      You can enable and configure the API Key authentication
      provider from the {+ui+} by selecting :guilabel:`API Keys`
      from the :guilabel:`Authentication` page.

   .. tab::
      :tabid: cli
         
      To enable and configure the API Key authentication provider with
      :ref:`realm-cli <realm-cli>`, define a :ref:`configuration object
      <appconfig-auth>` for it in ``/auth/providers.json``.

      API Key provider configurations have the following form:

      .. code-block:: none
         :caption: /auth/providers.json
         
         {
           "api-key": {
             "name": "api-key",
             "type": "api-key",
             "disabled": false
           }
         }

.. note::

   The API Key authentication provider does not have any
   provider-specific configuration options.

.. _api-key-authentication-usage-create-server-key:

Create a Server API Key
-----------------------

.. tabs-realm-admin-interfaces::
   
   .. tab::
      :tabid: ui
      
      #. Select :guilabel:`App Users` from the {+leftnav+}.
      
      #. Select the :guilabel:`Authentication Providers` button and then select
         the :guilabel:`API Keys` provider.
      
      #. If the API Key provider is not currently enabled, enable it and then
         deploy your application.
      
      #. Click :guilabel:`Create API Key`.
      
      #. Enter a unique name for the key and then click :guilabel:`Save`.
   
   .. tab::
      :tabid: cli
      
      .. include:: /includes/note-procedure-uses-cli-v2.rst
      
      
      .. tip::
         
         You must enable the API key provider before you can create an API key.
      
      To create a new server API key, call ``realm-cli users create`` and
      specify ``--type=api-key``. The CLI will prompt you for your App ID as
      well as a name for the new API key.
      
      .. code-block:: bash
         
         realm-cli users create --type=api-key
      
      You can also specify the arguments when you call the program:
      
      .. code-block:: bash
         
         realm-cli users create --type=api-key \
           --app=<Your App ID> \
           --name=<API Key Name>

.. important::

   Remember to copy the server key's value as soon as you create it.
   Once you leave the provider configuration page or disable the key you
   cannot retrieve the value from the {+ui+}.

.. _api-key-authentication-examples:

Examples
--------

For code examples that demonstrate how to register and log in using
API Key authentication, see the documentation for the Realm SDKs:

.. tabs-realm-sdks::

   .. tab::
      :tabid: android

      To register or log in an API Key user from the Android Client SDK, see the
      :ref:`Android SDK guide to API Key authentication <android-login-api-key>`.

   .. tab::
      :tabid: ios

      To register or log in an API Key user from the iOS Client SDK, see the
      :ref:`iOS SDK guide to API Key authentication <ios-login-api-key>`.

   .. tab::
      :tabid: web

      To register or log in an API Key user from the Web Client SDK, see the
      :ref:`Web SDK guide to API Key authentication <web-login-api-key>`.

   .. tab::
      :tabid: node
      
      To register or log in an API Key user from the Node Client SDK, see the
      :ref:`Node SDK guide to API Key authentication <node-login-api-key>`.

   .. tab::
      :tabid: react-native

      To register or log in an API Key user from the React Native Client SDK, see the
      :ref:`React Native SDK guide to API Key authentication <react-native-login-api-key>`.

   .. tab::
      :tabid: dotnet

      To register or log in an API Key user from the .NET Client SDK, see the
      :ref:`.NET SDK guide to API Key authentication <dotnet-login-api-key>`.

.. _api-key-authentication-summary:

Summary
-------

- The {+service-short+} API Key authentication provider allows users and services
  to connect to a {+app+} using API keys that look like a
  string of characters.
- User API Keys allow a user to interact with services via the {+service-short+}
  SDK. They are automatically generated in the client SDK.
- Server API Keys allow external services to interact with your {+app+}.
  These keys can only be generated via the {+ui+}.
