.. _custom-function-authentication:

==============================
Custom Function Authentication
==============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _custom-function-authentication-overview:

Overview
--------

The Custom Function authentication provider allows you to use a
:doc:`{+service-short+} Function </functions>` to implement your own user
authentication logic or flexibly integrate an external authentication
system. You can use the Custom Function provider to integrate with any
authentication system as long as the system maintains a unique ID value
for each user.

The **authentication function** is a :doc:`{+service-short+} Function </functions>`
that you define to handle authentication logic for users that log in
with the Custom Function provider. You can use the function to
coordinate with an external authentication system and/or use data that
you store in MongoDB to identify and authenticate users.

.. important:: Validate and Authenticate Custom Function Users

   {+service-short+} does not perform any data validation or authentication
   checks for the Custom Function provider. Make sure that you validate
   incoming data and that your authentication system performs
   appropriate authentication checks, such as requiring a password, two
   factor authentication, or a :wikipedia:`single sign-on
   <Single_sign-on>` token.

.. _custom-function-authentication-configuration:

Configuration
-------------

.. tabs-realm-admin-interfaces::

   .. tab::
      :tabid: ui

      .. include:: /includes/steps/configure-custom-function-auth-realm-ui.rst 

   .. tab::
      :tabid: cli

      .. include:: /includes/steps/configure-custom-function-auth-import-export.rst

.. _custom-function-authentication-examples:

Examples
--------

For code examples that demonstrate how to register and log in using
Custom Function authentication, see the documentation for the Realm SDKs:

.. tabs-realm-sdks::

   .. tab::
      :tabid: android

      To register or log in a Custom Function user from the Android Client SDK, see the
      :ref:`Android SDK guide to Custom Function authentication <android-login-custom-function>`.

   .. tab::
      :tabid: ios

      To register or log in a Custom Function user from the iOS Client SDK, see the
      :ref:`iOS SDK guide to Custom Function authentication <ios-login-custom-function>`.

   .. tab::
      :tabid: web

      To register or log in a Custom Function user from the Web Client SDK, see the
      :ref:`Web SDK guide to Custom Function authentication <web-login-custom-function>`.

   .. tab::
      :tabid: node
      
      To register or log in a Custom Function user from the Node Client SDK, see the
      :ref:`Node SDK guide to Custom Function authentication <node-login-custom-function>`.

   .. tab::
      :tabid: react-native

      To register or log in a Custom Function user from the React Native Client SDK, see the
      :ref:`React Native SDK guide to Custom Function authentication <react-native-login-custom-function>`.

   .. tab::
      :tabid: dotnet

      To register or log in a Custom Function user from the .NET Client SDK, see the
      :ref:`.NET SDK guide to Custom Function authentication <dotnet-login-custom-function>`.

.. _custom-function-authentication-summary:

Summary
-------

- Custom Function authentication allows you to define your
  authentication process in a {+service-short+} Function.
- The {+service-short+} Function that you use for authentication should return a
  unique ID for each user based on the information passed from the
  client SDK.
