.. _anonymous-authentication:

========================
Anonymous Authentication
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _anonymous-authentication-overview:

Overview
--------

The Anonymous authentication provider allows users to log in to your
application without providing credentials. Each time someone
authenticates anonymously, the provider generates a new anonymous user
object for that session. Anonymous user objects have a unique ID value
but no other metadata fields or configuration options.

Potential use cases for anonymous authentication include:

- Authenticating the readers of a blog or news service.

- Allowing end users to try the features of an application before
  registering for an account.

- Simplifying the creation of users while developing and testing the
  client application.

.. _anonymous-authentication-account-linking:

Account Linking
---------------
An Anonymous user object is not intended to be reused, and once a user
logs out, they will not be able to retrieve any previous user data.
To persist data associated with an Anonymous user, you can associate
that existing Anonymous identity with a user account created by a
different authentication provider. See :doc:`linking
</authentication/linking>` for more information on how to accomplish
this.

.. cssclass:: important
.. admonition:: Anonymous user expiration

   {+service-short+} may delete an Anonymous user object that is 90 days old (or
   older). When an account is deleted, it is not recoverable and any
   associated user data is lost. Documents created or modified by the
   user remain unaffected.

.. _anonymous-authentication-configuration:

Configuration
-------------

.. tabs-realm-admin-interfaces::


   .. tab::
      :tabid: ui

      You can enable the Anonymous authentication provider from the
      {+ui+} in the :guilabel:`Users` options.

      1. Select :guilabel:`Users` in the left sidebar.
            
      #. Navigate to the the :guilabel:`Providers` tab of the
         :guilabel:`Users` options page.

      #. Select the "Allow users to log in anonymously" entry of the
         :guilabel:`Provider` list.

      #. Click the :guilabel:`Provider Enabled` toggle to move it
         into the "On" state.

      #. Click the :guilabel:`Save` button in the lower right of the
         page to save your changes to the {+app+} configuration.

      #. Click :guilabel:`Review & Deploy Changes` in the dropdown
         that appears at the top of the page.

      #. Review the changes to your app's configuration and click
         :guilabel:`Deploy` in the lower right of the dialog to
         make your changes available to application users.

   .. tab::
      :tabid: cli

      You can enable the Anonymous authentication provider with
      :doc:`realm-cli </deploy/realm-cli-reference>` by
      importing an application directory that contains a
      :ref:`configuration file <appschema-authentication-providers>`
      for the provider.

      The configuration file must be named ``anon-user.json`` and
      stored in the ``/auth_providers`` directory. Configuration
      files for the Anonymous authentication provider have the
      following form:

      .. code-block:: javascript
         :caption: ``/auth_providers/anon-user.json``

         {
           "name": "anon-user",
           "type": "anon-user",
           "disabled": <boolean>,
         }

.. note::

   The anonymous authentication provider does not have any
   provider-specific configuration options.

.. _anonymous-authentication-summary:

Summary
-------

- Anonymous authentication allows users to interact with your
  application creating an identity.
- To persist data from an anonymous session after a user creates an
  identity with a different authentication provider, you can link the
  two identities.
