.. _android-client-quick-start:

===========
Quick Start
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

This page contains information to quickly get {+client-database+}
integrated into your app. Before you begin, ensure you have:

- :ref:`Created a {+app+} <create-a-realm-app>`
- :ref:`Enabled {+sync+} <enable-sync>`
- :ref:`Installed the Android SDK <android-install>`

.. note:: Check Out the Tutorial
   
   This page contains only the essential information that you need to set up a
   MongoDB Realm application. If you prefer to follow a guided tutorial that
   shows you step-by-step how to set up a working app, check out the
   :ref:`Android Tutorial <android-kotlin-tutorial>` where you'll build a mobile
   app that connects to the :ref:`Task Tracker backend
   <tutorial-task-tracker-create-realm-app>`.

.. include:: /includes/android-initialize-realm.rst

.. _android-quick-start-init-app:

Initialize the App
------------------

To use {+backend+} features such as authentication and sync, you must
access your {+app+} using your {+app+} ID. You can find your {+app+} ID in the
{+ui+}.

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.initialize-the-app.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.initialize-the-app.kt
         :language: kotlin

.. note:: Android Studio Errors?

   If Android Studio does not recognize the ``Realm``, ``App``, or
   ``AppConfiguration`` types, there could be a problem with the
   your Gradle build configuration. To fix the issue:

   - Clean your project with ``Build > Clean Project``

   - Rebuild your project based on your updated ``build.gradle`` file
     with ``Build > Rebuild Project``

   - Revisit the :ref:`Install the Android SDK <android-install>`
     guide to make sure that you installed the dependencies correctly.

Define Your Object Model
------------------------

Your application's **data model** defines the structure of data
stored within {+client-database+} and synchronized to and from
{+backend+}. You can define your application's data model in two ways:

- Via JSON :ref:`document schemas <mongodb-schemas>` in {+backend+} with
  :ref:`Realm Schema <create-rom-from-schema>`.

- Via Kotlin or Java classes in your application code with
  :ref:`Realm Object Models <create-schema-from-rom>`.

This quick start uses the latter approach, which defines your schema
using classes in your mobile application code. To define your {+app+}'s
object model in this way, you need to :ref:`enable Developer Mode
<enable-development-mode>`.

Once you've enabled Developer Mode, add the following class
definitions to your application code:

.. seealso::

   See :ref:`Configure Your Data Model <configure-your-data-model>` for
   more information on Realm Schema, object models, and Developer
   Mode.

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/Task.codeblock.define-object-model.java
         :language: java

      .. literalinclude:: /examples/generated/android/code/start/TaskStatus.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.define-object-model.kt
         :language: kotlin

.. _android-quick-start-authenticate:

Authenticate a User
-------------------

When you have enabled :ref:`anonymous authentication <anonymous-authentication>` in the
{+ui+}, users can immediately log into your app without providing any identifying
information:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.authenticate-a-user.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.authenticate-a-user.kt
         :language: kotlin

{+service-short+} provides many additional ways to authenticate, register, and link users.

.. seealso::

   :ref:`Authenticate a User <android-authenticate>`

Open a Realm
------------

Once you have :ref:`enabled {+sync+} <enable-sync>` and authenticated a
user, you can open a synced :ref:`{+realm+} <android-realms>`. Use the
``SyncConfiguration`` to control the specifics of how your application
synchronizes data with {+backend+}, including the :ref:`partition
<partitioning>`, how long to wait before a request times out, whether
to allow synchronous reads or writes to a {+realm+} on the UI thread,
and more.

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.open-a-realm.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.open-a-realm.kt
         :language: kotlin

.. seealso::

   :ref:`Sync Data <android-sync-data>`

Create, Read, Update, and Delete Objects
----------------------------------------

Once you have opened a {+realm+}, you can modify the
:ref:`objects <android-realm-objects>` within that {+realm+} in a
:ref:`write transaction <android-realm-database-writes>` block.

.. include:: /includes/android-synchronous-reads-writes-ui-thread.rst

To create a new ``Task``, instantiate an instance of the
``Task`` class and add it to the {+realm+} in a write block:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.create-object.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.create-object.kt
         :language: kotlin

You can retrieve a live :ref:`collection <android-client-collections>`
of all items in the {+realm+}:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.read-object.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.read-object.kt
         :language: kotlin

You can also filter that collection using a :ref:`filter
<android-client-query-engine>`:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.filter-collection.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.filter-collection.kt
         :language: kotlin

To modify a task, update its properties in a write transaction block:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.update-object.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.update-object.kt
         :language: kotlin

Finally, you can delete a task by calling the ``deleteFromRealm()``
method in a write transaction block:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.delete-object.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.delete-object.kt
         :language: kotlin

Watch for Changes
-----------------

You can :ref:`watch a realm, collection, or object for changes
<android-client-notifications>` by attaching a custom
``OrderedRealmCollectionChangeListener`` with the ``addChangeListener()``
method:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.watch-for-changes.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.watch-for-changes.kt
         :language: kotlin

Log Out
-------

Once logged in, you can log out:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.log-out.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.codeblock.log-out.kt
         :language: kotlin


Complete Example
----------------

Run the complete example by replacing the appId with your {+realm+} app ID.
If you're running this project in a fresh Android Studio project, you can
copy and paste this file into your application's ``MainActivity`` -- just
remember to:

- change the package declaration so it matches your project

- replace the App ID placeholder with your {+app+}'s App ID

- update the ``import`` statements for ``Task`` and ``TaskStatus`` if
  you're using java

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/code/start/Task.codeblock.define-object-model.java
         :caption: Task.java
         :language: java

      .. literalinclude:: /examples/generated/android/code/start/TaskStatus.java
         :caption: TaskStatus.java
         :language: java

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.java
         :caption: MainActivity.java
         :language: java

   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/code/start/MainActivity.kt
         :caption: MainActivity.kt
         :language: kotlin

Output
------
Running the above code should produce output resembling the following:

.. code-block:: shell

   Successfully authenticated anonymously.

   Updated range: 0 to 1

   Deleted range: 0 to 1

   Successfully logged out.
