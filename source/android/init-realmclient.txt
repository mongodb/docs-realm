.. _android-init-appclient:

===============================
Initialize the Realm App Client
===============================

.. default-domain:: mongodb

Overview
--------

The {+service-short+} {+app+} client is the interface to the {+backend+}
backend. It provides access to the :ref:`authentication functionality
<android-authenticate>`, :ref:`functions <android-call-a-function>`, and
:ref:`sync management <android-sync-data>`.

.. include:: /includes/android-initialize-realm.rst

.. _android-access-the-app-client:

Access the App Client
---------------------

Pass the {+app+} ID for your {+app+}, which you can find in the {+ui+}.

.. tabs-realm-languages::

      .. tab::
         :tabid: java

         .. code-block:: java

            String appID = "<your App ID>"; // replace this with your App ID
            Realm.init(this); // `this` is a Context, typically an Application or Activity
            App app = new App(new AppConfiguration.Builder(appID).build());

      .. tab::
         :tabid: kotlin

         .. code-block:: kotlin

            val appID : String = "<your App ID>" // replace this with your App ID
            Realm.init(this) // `this` is a Context, typically an Application or Activity
            val app: App = App(AppConfiguration.Builder(appID).build())

.. admonition:: Initialize the App before Creating an Instance
   :class: important

   You must initialize your {+service-short+} app connection with
   ``Realm.init()`` before creating any instance of an ``App``.

.. note::

   You can create multiple ``App`` instances to connect to multiple
   {+app+}s or to the same {+app+} with different configurations. All
   ``App`` instances that share the same App ID use the same underlying
   connection.

.. _android-app-client-configuration:

Configuration
-------------

For more granular control of the details of your app connection,
such as custom timeouts for connections, codecs used for MongoDB Data Access,
and keys for local encryption, you can use the ``AppConfiguration``
Builder to control details of your ``App``:

.. tabs-realm-languages::

      .. tab::
         :tabid: java

         .. code-block:: java

            String appID = "<your App ID>"; // replace this with your App ID
            Realm.init(this); // `this` is a Context, typically an Application or Activity
            App app = new App(new AppConfiguration.Builder(appID)
                              .appName("My App")
                              .requestTimeout(30, TimeUnit.SECONDS)
                              .build());

      .. tab::
         :tabid: kotlin

         .. code-block:: kotlin

            val appID = "<your App ID>" // replace this with your App ID
            Realm.init(this) // `this` is a Context, typically an Application or Activity
            val app: App = App(AppConfiguration.Builder(appID)
                               .appName("My App")
                               .requestTimeout(30, TimeUnit.SECONDS)
                               .build())

.. note:: 
    
   For most use cases, you only need your application's App ID to connect
   to {+service+}. The other settings demonstrated here are optional.
