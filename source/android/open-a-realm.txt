.. _android-open-a-realm:

======================
Open and Close a Realm
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Open a Synced Realm
-------------------

To open a synced {+realm+}, call 
:java-sdk:`getInstanceAsync()
<io/realm/Realm.html#getInstanceAsync-io.realm.RealmConfiguration-io.realm.Realm.Callback->`, 
passing in a a :java-sdk:`SyncConfiguration <io/realm/mongodb/sync/SyncConfiguration.html>` 
object. For example, the following code demonstrates how to create a {+realm+} with 
specific sync settings created using a ``SyncConfiguration`` object:

.. tabs-realm-languages::
   
   .. tab::
      :tabid: kotlin
      
      .. code-block:: kotlin

         val user: User? = app.currentUser()
         val partitionValue: String = "myPartition"
         val config = SyncConfiguration.Builder(user!!, partitionValue).build()

         val realm: Realm = Realm.getInstance(config)

   .. tab::
      :tabid: java
      
      .. code-block:: java

         User user = app.currentUser();
         String partitionValue = "myPartition";
         SyncConfiguration config = 
            new SyncConfiguration.Builder(user, partitionValue).build();

         Realm realm = Realm.getInstance(config);
   

The code above shows how to open the {+realm+} *asynchronously* 
by using :java-sdk:`getInstanceAsync()
<io/realm/Realm.html#getInstanceAsync-io.realm.RealmConfiguration-io.realm.Realm.Callback->`. 
You can also open a {+realm+} synchronously by using :java-sdk:`getInstance()
<io/realm/Realm.html#getInstance-io.realm.RealmConfiguration->`, but this may 
lead to temporary data inconsistencies while the remote data is downloaded, and 
is generally not recommended. 

.. note::
   
   To enable sync in your Android project, you need to configure it in the 
   application-level build.gradle file by adding the following entry:
   
   ``realm { syncEnabled = true }``
   
   For more information on enabling sync in Android, see 
   :ref:`Install Realm for Android <android-install>`.


Open a Local (Non-Synced) Realm
-------------------------------
When opening a local (non-synced) {+realm+}, set the default settings and then 
call :java-sdk:`getDefaultInstance() <io/realm/Realm.html#getDefaultInstance-->`:

.. tabs-realm-languages::
   
   .. tab::
      :tabid: kotlin
      
      .. code-block:: kotlin

         val config = RealmConfiguration.Builder().build()
         Realm.setDefaultConfiguration(config)

         val realm: Realm = Realm.getDefaultInstance()

   .. tab::
      :tabid: java
      
      .. code-block:: java

         RealmConfiguration realmConfig = 
            new RealmConfiguration.Builder(this).build();
         Realm.setDefaultConfiguration(realmConfig);

         Realm realm = Realm.getDefaultInstance();

Close a Realm
-------------
It is important to remember to call the ``close()`` method when done with a 
{+realm+} instance. Failing to do so can lead to ``OutOfMemoryError`` as the native 
resources cannot be freed.

.. tabs-realm-languages::
   
   .. tab::
      :tabid: kotlin
      
      .. code-block:: kotlin
       
         realm.close()

   .. tab::
      :tabid: java
      
      .. code-block:: java

         realm.close();



