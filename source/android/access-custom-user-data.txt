.. _android-access-custom-user-data:

=======================
Access Custom User Data
=======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

You can read arbitrary data about your application users, known as
custom user data, directly within your Android application. For example,
you might store a user's preferred language, date of birth, or local
timezone. To learn more about custom user data, see :ref:`Enable Custom
User Data <custom-user-data>`.

.. include:: /includes/use-custom-data-note.rst

.. _android-create-custom-user-data:

Create Custom User Data for a User
----------------------------------

To create custom user data for a user, create a MongoDB document in the
custom user data collection for a given user where the user ID field
contains the user's ID:

1. Follow the steps to :ref:`enable custom user data
   <enable-custom-user-data-procedure>` in your application. Make a note
   of the values of the following options as you enable custom user data:

   - the :term:`cluster <custom user data cluster>`,

   - the :term:`database <custom user data database>`,

   - and the :term:`collection <custom user data collection>` in which custom
     user data documents are stored.

   As well as:

   - the :term:`field <user ID field>` used to map custom user data documents
     to users (via :term:`user ID`).
  
   In your application, you will use these options to create, update,
   and delete custom user data. Since custom user data is available via
   the ``User`` object of your application, you can read the custom user
   data for the currently logged in user without knowing these options.

#. In the previous step, you specified a cluster, database, and
   collection to store your custom user data. Create a new
   document in the specified collection of the specified database of
   the specified cluster where the specified user ID field contains the
   a {+service-short+} user's ``id`` value.

   .. note::

      You can access a user's ``id`` value through their ``User``
      object once logged in.

You can add any number of arbitrary fields and values to the custom user
data document when you create it. The user ID field is the only
requirement for the document to become available on the ``User`` object
as custom user data.

.. _android-update-custom-user-data:

Update Custom User Data for a User
----------------------------------

To update a user's custom user data, edit the MongoDB document that contains
custom user data for that user:

1. Visit the :guilabel:`Custom User Data` tab of the :guilabel:`Users`
   left sidebar entry of the {+ui+} to determine the values of the
   following options in your application:

   - the :term:`cluster <custom user data cluster>`,

   - the :term:`database <custom user data database>`,

   - and the :term:`collection <custom user data collection>` in which custom
     user data documents are stored.

   As well as:

   - the :term:`field <user ID field>` used to map custom user data documents
     to users (via :term:`user ID`).

#. Determine the ``id`` of the user whose custom user data you'd like to
   update using the ``User`` object of the user once logged in or via
   the :guilabel:`Users` tab of the :guilabel:`Users` left sidebar entry
   of the {+ui+}.

#. In the custom user data collection of the custom user data database
   of the custom user data cluster, update the document where the value
   of the user ID field matches the user's ``id`` value.

You can update custom user data using :ref:`MongoDB Data Access
<android-mongodb-data-access>`, :ref:`Sync <android-sync-data>`,
`<https://docs.mongodb.com/compass>`__, or the
:atlas:`MongoDB Atlas Data Explorer </data-explorer/>`.

.. _android-read-custom-user-data:

Read Custom User Data
---------------------

You can read the custom user data of a currently logged in user
through that user's ``User`` object. You cannot edit custom user data
through a ``User`` object. To edit custom user data, see
:ref:`Update Custom User Data <android-update-custom-user-data>`.
To access the data, call the
:java-sdk:`User.customData() <io/realm/mongodb/User.html#getCustomData-->`
method on the ``User`` object of a logged in user:

.. tabs-realm-languages::
   
   .. tab::
      :tabid: kotlin
      
      .. code-block:: kotlin
         :emphasize-lines: 13
         
         Realm.init(this) // context, usually an Activity or Application
         val appID = "<your app ID>" // replace this with your App ID
         val app: App = App(AppConfiguration.Builder(appID)
                .build())

         val anonymousCredentials: Credentials = Credentials.anonymous()

         val user: User? = null
         app.loginAsync(anonymousCredentials) {
            if (it.isSuccess) {
                Log.v(TAG, "Successfully authenticated anonymously.")
                user = app.currentUser()
                val customUserData : Document? = user?.customData
            } else {
                Log.e(TAG, it.error.toString())
            }
         }

   .. tab::
      :tabid: java

      .. code-block:: java
         :emphasize-lines: 12

         Realm.init(this); // context, usually an Activity or Application
         String appID = "<your app ID>"; // replace this with your App ID
         App app = new App(new AppConfiguration.Builder(appID)
               .build());

         Credentials anonymousCredentials = Credentials.anonymous();

         app.loginAsync(anonymousCredentials, it -> {
            if (it.isSuccess()) {
               Log.v(TAG, "Successfully authenticated anonymously.");
               user = app.currentUser();
               Document customUserData = user.getCustomData()
            } else {
               Log.e(TAG, it.getError().toString());
            }
         });

.. admonition:: Custom Data May Be Stale
   :class: warning
   
   {+backend+} does not dynamically update the value of
   :java-sdk:`User.customData() <io/realm/mongodb/User.html#getCustomData-->`
   immediately when underlying data changes. Instead, {+backend+}
   fetches the most recent version of custom user data whenever a user
   refreshes their :ref:`access token <user-sessions>`, which occurs
   during most SDK operations that contact the {+backend+} back end.
   {+service-short+} refreshes access tokens every 30 minutes, so custom
   user data can be stale for no more than 30 minutes.

.. note::

   If you require the most recent version of custom user data, use the
   :java-sdk:`User.refreshCustomData()
   <io/realm/mongodb/User.html#refreshCustomData-->` method to request
   the latest version of a user's custom data.

Summary
-------

- You can use custom user data to store arbitrary information about your application users.

- {+service+} stores custom user data as a document in a MongoDB collection determined by your application configuration.

- {+service+} associates custom user data with a user based on the value of the user ID field.

- The custom user data field of the user object is read-only. You can modify custom user data using :ref:`MongoDB Data Access
  <android-mongodb-data-access>` or :ref:`Sync <android-sync-data>`.
