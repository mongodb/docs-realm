:template: product-landing
:hidefeedback: header
:noprevnext:

.. _kotlin-intro:

================
Realm Kotlin SDK
================

.. toctree::
   :titlesonly:
   
   Install Realm </sdk/kotlin/install>
   Quick Start </sdk/kotlin/quick-start>
   Realm </sdk/kotlin/realm-database>
   Sync Device Data </sdk/kotlin/sync>
   Atlas App Services </sdk/kotlin/app-services>
   Manage Users </sdk/kotlin/users>
   SDK Telemetry </sdk/kotlin/telemetry>
   API Reference <https://www.mongodb.com/docs/realm-sdks/kotlin/latest/>
   Release Notes <https://github.com/realm/realm-kotlin/blob/releases/CHANGELOG.md>
   Migrate from Java SDK to Kotlin SDK </sdk/kotlin/migrate-from-java-sdk-to-kotlin-sdk>

Use the Realm Kotlin SDK to develop Android or iOS apps
using the Android platform or Kotlin Multiplatform Mobile (KMM).
   
.. kicker:: Learning Paths

Get Started with Realm Kotlin
-----------------------------

.. card-group::
   :columns: 3
   :style: extra-compact

   .. card::
      :headline: Quick Start
      :cta: See Code Examples
      :url: https://www.mongodb.com/docs/realm/sdk/kotlin/quick-start/
      :icon: /images/icons/branding_2022/Technical_ATLAS_Functions3x.png
      :icon-alt: Functions Icon

      Minimal-explanation code examples of how to work with Realm.

   .. card::
      :headline: Working Example App
      :cta: Explore an Example App
      :url: https://www.mongodb.com/docs/atlas/app-services/template-apps/
      :icon: /images/icons/branding_2022/Technical_REALM_Mobile3x.png
      :icon-alt: Realm Mobile Icon

      Learn from example by dissecting a working Kotlin client app that
      uses Realm with Device Sync.

   .. card::
      :headline: Guided Tutorial
      :cta: Follow the Tutorial
      :url: https://mongodb.com/docs/atlas/app-services/tutorial/kotlin/
      :icon: /images/icons/branding_2022/General_CONTENT_Tutorial3x.png
      :icon-alt: Tutorial Icon

      Follow a guided tutorial to learn how to adapt the example app to
      create your own working Realm app.

.. kicker:: What You Can Do

Develop Apps with Realm
--------------------------------

Use open-source Realm as a local object store on a device.
Use Device Sync to keep data in sync with your MongoDB Atlas cluster and
other clients.

.. tabs::

   .. tab:: Use Realm Locally
      :tabid: local-realm

      .. procedure::

         .. step:: Install the Realm Kotlin SDK

            Choose whether to install the :ref:`Android <kotlin-install-android>`
            or the :ref:`Kotlin Multiplatform <kotlin-install-kotlin-multiplatform>`
            version of the Kotlin SDK.

            Import Realm in your Gradle files to get started.

         .. step:: Define an Object Schema

            Use Kotlin to idiomatically `define an object schema
            <https://www.mongodb.com/docs/realm/sdk/kotlin/quick-start/#define-your-object-model>`_.

         .. step:: Open a Realm

            Realm stores objects in realm files on your device,
            or you can open an in-memory realm which does not create a file.
            :ref:`Configure and open a realm <kotlin-open-a-realm>`
            to get started reading and writing data.

         .. step:: Read and Write Data

            :ref:`Create <kotlin-create-a-new-object>`, :ref:`read <kotlin-find-object-by-primary-key>`,
            :ref:`update <kotlin-modify-an-object>`, and :ref:`delete <kotlin-delete-an-object>`
            objects in the realm. :ref:`Filter data <kotlin-filter-data>`
            using :ref:`Realm Query Language <realm-query-language>`.

         .. step:: React to Changes

            Realm's live objects mean that your data is always up-to-date.
            You can :ref:`register a notification handler <kotlin-react-to-changes>`
            to watch for changes and perform some logic, such as updating
            your UI.

      .. image:: /images/illustrations/Spot_MauvePurple_Infrastructure_Tech_RealmApp2x.png
         :alt: Realm Mobile Illustration

   .. tab:: Sync Data Across Devices
      :tabid: device-sync

      .. procedure::

         .. step:: Connect to an Atlas App Services App

            Configure :ref:`Device Sync in an App Services App
            <realm-sync-get-started>`. Define data access rules. Use
            Development Mode to infer your schema from your data model.

            Then, :ref:`connect to the backend <kotlin-connect-to-backend>` from
            your client.

         .. step:: Authenticate a User

            Use one of our authentication providers to :ref:`authenticate a
            user <kotlin-authenticate-users>`. App Services provides access
            to popular authentication providers, such as Apple, Google, or
            Facebook. Use our built-in email/password provider to manage
            users without a third-party, or use custom JWT authentication to
            integrate with other authentication providers. Anonymous authentication
            provides access without requiring a login or persisting user data.

         .. step:: Open a Synced Realm

            Instead of opening a local realm, :ref:`configure and open a
            synced Realm <kotlin-open-a-synced-realm>`.
            :ref:`Subscribe to a query <kotlin-subscriptions>`
            to determine what data the synced realm can read and write.

         .. step:: Read and Write Synced Data

            The APIs to read and write data from a realm are the same
            whether you're using a synced or local realm. Data that you
            read and write is automatically kept in sync with your Atlas
            cluster and other clients. Apps keep working offline and
            deterministically sync changes whenever a network connection is
            available.

      .. image:: /images/illustrations/Spot_AzureBlue_Mobile_Tech_RealmSync.png
         :alt: Realm Sync Illustration

.. kicker:: Essential Documentation

Recommended Reading
-------------------

.. card-group::
   :columns: 3
   :style: extra-compact

   .. card::
      :headline: Kotlin API Reference
      :cta: Realm Kotlin Reference
      :url: https://www.mongodb.com/docs/realm-sdks/kotlin/1.2.0/
      :icon: /images/icons/branding_2022/Technical_REALM_SDK3x.png
      :icon-alt: Realm Icon

      Explore generated reference docs for the Realm Kotlin APIs.
       
   .. card::
      :headline: Migrate from the Java SDK to the Kotlin SDK
      :cta: Migrate from Java SDK to Kotlin SDK
      :url: https://www.mongodb.com/docs/realm/sdk/kotlin/migrate-from-java-sdk-to-kotlin-sdk/
      :icon: /images/icons/realm/general-flexibility.png
      :icon-alt: Migrate Icon

      Learn why and how to switch from the Java SDK to the Kotlin SDK.
