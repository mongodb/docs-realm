.. _kotlin-intro:

================
Realm Kotlin SDK
================

.. toctree::
   :titlesonly:
   
   Install </sdk/kotlin/install>
   Quick Start </sdk/kotlin/quick-start>
   Realm Database </sdk/kotlin/realm-database>
   Sync </sdk/kotlin/sync>
   App Services </sdk/kotlin/app-services>
   Handle Errors </sdk/kotlin/errors>
   API Reference <https://www.mongodb.com/docs/realm-sdks/kotlin/{+kotlin-sdk-version+}/>
   Release Notes <https://github.com/realm/realm-kotlin/blob/releases/CHANGELOG.md>
   Migrate from Java SDK to Kotlin SDK </sdk/kotlin/migrate-from-java-sdk-to-kotlin-sdk>

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The Realm :github:`Kotlin SDK <realm/realm-kotlin>`
allows you to use {+client-database+} and Device Sync from:

- Android and iOS applications written with
  `Kotlin Multiplatform Mobile (KMM)
  <https://kotlinlang.org/docs/mobile/home.html>`__

- standalone Android applications

Local Realm Database
--------------------

With the Realm Kotlin SDK, you can access objects
stored in a local instance of {+client-database+}. With
{+client-database+}, you can:

Define an Object Schema
~~~~~~~~~~~~~~~~~~~~~~~

Define your object schema with marked Kotlin classes:

.. literalinclude:: /examples/generated/kotlin/RealmModels.snippet.landing-page-model.kt
   :language: kotlin
   :copyable: false


Query Realm Database
~~~~~~~~~~~~~~~~~~~~

Query for stored objects:

.. literalinclude:: /examples/generated/kotlin/QuickStartTest.snippet.landing-page-query.kt
   :language: kotlin
   :copyable: false

Update Objects
~~~~~~~~~~~~~~

Update objects in {+client-database+} by updating field values on an
instance of the object within a transaction:

.. literalinclude:: /examples/generated/kotlin/QuickStartTest.snippet.landing-page-update.kt
   :language: kotlin
   :copyable: false

Atlas App Services
------------------

Atlas App Services is a backend for client applications hosted by
MongoDB in the cloud. Individual backends, known as **Apps**, provide
the ability to synchronize data stored in
{+client-database+} as well as a layer of backend functionality
including user accounts and backend logic.
The SDK optionally contains the ability to access
these {+app+}s running in the cloud.

Get Started
-----------

To start using the Realm Kotlin SDK
in your application, see the installation guide for :ref:`Kotlin Multiplatform
<kotlin-install-kotlin-multiplatform>` or :ref:`Android
<kotlin-install-kotlin-multiplatform>`. Once you've installed the SDK,
check out the :ref:`Quick Start <kotlin-client-quick-start-local>`.
