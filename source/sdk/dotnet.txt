:template: product-landing
:hidefeedback: header
:noprevnext:

.. _dotnet-intro:

==============
Realm .NET SDK
==============

.. toctree::
   :titlesonly:
   
   Why Realm? </sdk/dotnet/realm-database>
   Install Realm </sdk/dotnet/install>
   Quick Start </sdk/dotnet/quick-start>
   Quick Start for Unity </sdk/dotnet/unity>
   Realm Files </sdk/dotnet/realm-files>
   Model Data </sdk/dotnet/model-data>
   CRUD </sdk/dotnet/crud>
   React to Changes </sdk/dotnet/react-to-changes>
   Application Services </sdk/dotnet/application-services>
   Manage Users </sdk/dotnet/work-with-users>
   Sync Data </sdk/dotnet/sync>
   Use Realm in a Console App </sdk/dotnet/async-console>
   Logging </sdk/dotnet/logging>
   Compatibility </sdk/dotnet/compatibility>
   Troubleshooting </sdk/dotnet/troubleshooting>
   SDK Telemetry </sdk/dotnet/telemetry>
   API Reference <https://www.mongodb.com/docs/realm-sdks/dotnet/latest>
   Release Notes <https://github.com/realm/realm-dotnet/releases>


Use the Realm .NET SDK to develop client applications written in C# for .NET,
`.NET MAUI <https://dotnet.microsoft.com/en-us/apps/maui>`__,
`UWP <https://docs.microsoft.com/en-us/windows/uwp/get-started/>`__, `Xamarin
<https://dotnet.microsoft.com/apps/xamarin>`__, and `Unity
<https://unity.com/>`__.

.. kicker:: Learning Paths

Get Started with Realm .NET
---------------------------

.. card-group::
   :columns: 3
   :style: extra-compact

   .. card::
      :headline: Quick Start
      :cta: See Code Examples
      :url: https://www.mongodb.com/docs/realm/sdk/dotnet/quick-start/
      :icon: /images/icons/branding_2022/Technical_ATLAS_Functions3x.png
      :icon-alt: Functions Icon

      Minimal-explanation code examples of how to work with Realm.

   .. card::
      :headline: Working Example App
      :cta: Explore an Example App
      :url: https://www.mongodb.com/docs/atlas/app-services/template-apps/
      :icon: /images/icons/branding_2022/Technical_REALM_Mobile3x.png
      :icon-alt: Realm Mobile Icon

      Learn from example by dissecting a working Xamarin client app that
      uses Realm with Device Sync.

   .. card::
      :headline: Guided Tutorial
      :cta: Follow the Tutorial
      :url: https://mongodb.com/docs/atlas/app-services/tutorial/dotnet/
      :icon: /images/icons/branding_2022/General_CONTENT_Tutorial3x.png
      :icon-alt: Tutorial Icon

      Follow a guided tutorial to learn how to adapt the example app to
      create your own working Realm app.

.. kicker:: What You Can Do

Develop Apps with Realm
-----------------------

.. tabs::

   .. tab:: Use Realm Locally
      :tabid: local-realm

      .. container::

         Use free open-source Realm as a local object store on a device.

         .. procedure::

            .. step:: Install the Realm .NET SDK

               Use NuGet to :ref:`dotnet-install` in your solution.

               Import Realm in your source files to get started.

            .. step:: Define an Object Schema

               Use C# to idiomatically :ref:`define an object schema
               <dotnet-define-a-realm-object-schema>`.

            .. step:: Open a Realm

               Realm stores objects in realm files on your device,
               or you can open an in-memory realm which does not create a file.
               :ref:`Configure and open a realm <dotnet-open-a-realm>`
               to get started reading and writing data.

            .. step:: Read and Write Data

               :ref:`Read and write data <dotnet-read-and-write-data>`.
               You can :ref:`filter data <dotnet-client-query-engine>` using
               idiomatic LINQ Syntax, or Realm Query Language.

            .. step:: React to Changes

               Realm's live objects mean that your data is always up-to-date.
               You can :ref:`register a notification handler <dotnet-react-to-changes>`
               to watch for changes and perform some logic, such as updating
               your UI.

      .. image:: /images/illustrations/Spot_MauvePurple_Infrastructure_Tech_RealmApp2x.png
         :alt: Realm Mobile Illustration

   .. tab:: Sync Data Across Devices
      :tabid: device-sync

      .. container::

         Use Device Sync to keep data in sync with your MongoDB Atlas cluster and
         other clients.

         .. procedure::

            .. step:: Connect to an Atlas App Services App

               Configure :ref:`Device Sync in an App Services App
               <realm-sync-get-started>`. Define data access rules. Use
               Development Mode to infer your schema from your C# data model.

               Then, :ref:`connect to the backend <dotnet-init-appclient>` from
               your client.

            .. step:: Authenticate a User

               Use one of our authentication providers to :ref:`authenticate a
               user <dotnet-authenticate>`. App Services provides access
               to popular authentication providers, such as Apple, Google, or
               Facebook. Use our built-in email/password provider to manage
               users without a third-party, or use custom JWT authentication to
               integrate with other authentication providers. Anonymous authentication
               provides access without requiring a login or persisting user data.

            .. step:: Open a Synced Realm

               Instead of opening a local realm, :ref:`configure and open a
               synced Realm <dotnet-flexible-sync-open-realm>`.
               :ref:`Subscribe to a query <dotnet-sync-add-subscription>`
               to determine what data the synced realm can read and write.

            .. step:: Read and Write Synced Data

               The APIs to read and write data from a realm are the same
               whether you're using a synced or local realm. Data that you
               read and write is automatically kept in sync with your Atlas
               cluster and other clients. Apps keep working offline and
               deterministically sync changes whenever a network connection is
               available.

      .. image:: /images/illustrations/Spot_AzureBlue_Mobile_Tech_RealmSync.png
         :alt: Realm Sync Illustration

   .. tab:: Build with Atlas App Services
      :tabid: app-services

      .. container::

         Use Atlas App Services in your application with the .NET SDK.

         Call Serverless Functions
         ~~~~~~~~~~~~~~~~~~~~~~~~~

         You can :ref:`call serverless Functions <dotnet-call-a-function>`
         from your client application that run in an App Services backend.

         Query MongoDB Atlas
         ~~~~~~~~~~~~~~~~~~~

         You can :ref:`query data stored in MongoDB <dotnet-mongodb-data-access>`
         directly from your client application code.

         Authenticate Users
         ~~~~~~~~~~~~~~~~~~

         Authenticate users with built-in and third-party :ref:`authentication
         providers <dotnet-authenticate>`. Use the authenticated user to
         access App Services.

      .. image:: /images/illustrations/Spot_MauvePurple_APIs_Tech_RealmApp.png
         :alt: App Services Illustration

.. kicker:: Essential Documentation

Recommended Reading
-------------------

.. card-group::
   :columns: 3
   :style: extra-compact

   .. card::
      :headline: .NET API Reference
      :cta: Realm .NET Reference
      :url: https://www.mongodb.com/docs/realm-sdks/dotnet/latest/
      :icon: /images/icons/branding_2022/Technical_REALM_SDK3x.png
      :icon-alt: Realm Icon

      Explore generated reference docs for the Realm .NET APIs.

   .. card::
      :headline: Integrate Realm with Unity
      :cta: Install and Integrate Realm with Unity
      :url: https://www.mongodb.com/docs/realm/sdk/dotnet/unity/
      :icon: /images/icons/branding_2022/General_CONTENT_Tutorial3x.png
      :icon-alt: Tutorial Icon

      Find out how to integrate Realm with your Unity project.
       
   .. card::
      :headline: Check Out Releases
      :cta: See .NET Releases
      :url: https://github.com/realm/realm-dotnet/releases
      :icon: /images/icons/branding_2022/Technical_REALM_SDK3x.png
      :icon-alt: Realm Icon

      See the latest releases, new features, and bug fixes.
