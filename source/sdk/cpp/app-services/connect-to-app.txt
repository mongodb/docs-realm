.. _cpp-connect-to-backend:

=========================================
Connect to App Services - C++ SDK Preview
=========================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The App client is the Atlas App Services backend interface. It provides access 
to authentication and Atlas Functions.

Some of your App Services App's features are associated with user accounts. For example, you
need to :ref:`authenticate a user <cpp-authenticate-user>` before you can access
your App's functions.

Prerequisites
-------------

#. :ref:`Create an App Services app <create-a-realm-app>`

.. _cpp-access-the-app-client:

Access the App Client
---------------------

#. :ref:`Find the App ID in the Realm UI <find-your-app-id>`.
#. Create an :cpp-sdk:`App object <classrealm_1_1App.html>` 
   with your App's ID as the argument. You use this ``App`` instance to access 
   App Services features throughout your client application.

.. literalinclude:: /examples/generated/cpp/call-function.snippet.connect-app-services.cpp
   :language: cpp

.. tip:: Building an Android App

   When building an Android app that uses the Realm C++ SDK Preview, 
   you must pass the ``filesDir.path`` to the ``file_path`` parameter in the 
   :cpp-sdk:`db_config <structrealm_1_1internal_1_1bridge_1_1realm_1_1config.html>` 
   constructor. For more information, refer to: :ref:`cpp-build-android-app`.

.. _cpp-set-custom-http-headers-on-app:

Set Custom HTTP Headers
-----------------------

.. versionchanged:: v0.4.0-preview replaces deprecated realm::App(...) with realm::App(const realm::App::configuration&)

If you use App Services or Device Sync with a proxy setup, you may need
to set custom HTTP headers. The Realm C++ SDK supports setting custom 
HTTP headers on the :cpp-sdk:`App <structrealm_1_1App_1_1configuration.html>`
and on the ``flexible_sync_configuration()``.

When you initialize the App configuration, pass in a map of string header keys
and values.

.. literalinclude:: /examples/generated/cpp/app.snippet.set-custom-headers-for-app.cpp
   :language: cpp

If you :ref:`call a function <cpp-call-a-function>`, the App uses
these custom headers.

If you want to use custom headers with Device Sync, you must 
additionally :ref:`set the headers on the Flexible Sync configuration 
<cpp-set-custom-headers-using-synced-realm>`.

.. _cpp-encrypt-app-metadata:

Encrypt App Metadata
--------------------

.. versionadded:: v0.4.0-preview

When you connect to App Services, Realm creates additional metadata files 
on a device. For more information about these metadata files, refer to 
:ref:`cpp-realm-database`.

You can encrypt the metadata that App Services stores on client devices, 
similar to :ref:`encrypting the realm <cpp-encrypt-a-realm>`. 

On Apple devices, the metadata is encrypted by default. To disable this, 
add ``REALM_DISABLE_METADATA_ENCRYPTION`` to your environment variables.

To enable metadata encryption on other platforms, you must set a 
``metadata_encryption_key`` on your 
:cpp-sdk:`realm::App::configuration <structrealm_1_1App_1_1configuration.html>`.

.. literalinclude:: /examples/generated/cpp/app.snippet.encrypt-metadata.cpp
   :language: cpp
   :emphasize-lines: 20-21
