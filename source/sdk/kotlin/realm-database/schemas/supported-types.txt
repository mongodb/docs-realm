.. _kotlin-supported-types:

============================
Supported Types - Kotlin SDK
============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Realm Database supports the following field data types:

- ``String``
- ``Byte``
- ``Char``
- ``Short``
- ``Int``
- ``MutableRealmInt``, which behaves like a ``Long`` but also supports ``increment`` 
  and ``decrement`` methods that implement a conflict-free replicated data type.  
  For more information, see `MutableRealmInt <{+kotlin-local-prefix+}io.realm.kotlin.types/-mutable-realm-int/index.html>`__.   
- ``Long``
- ``Boolean``
- ``Double``
- ``Float``
- ``ObjectId`` 
- ``RealmInstant``
- Any ``RealmObject`` subclass
- ``RealmList<T>``, where T is any of the supported data types or a   
  `RealmObject <{+kotlin-local-prefix+}io.realm.kotlin.types/-realm-object/index.html>`__.
  Lists of ``RealmObject`` cannot have null elements. 
  All other types of ``RealmList<T>`` can be nullable (``RealmList<T?>``).
- ``RealmSet<T>``, where T is any of the supported data types or a
  `RealmObject <{+kotlin-local-prefix+}io.realm.kotlin.types/-realm-object/index.html>`__.
  Sets of ``RealmObject`` cannot have null elements. 
  All other types of ``RealmSet<T>`` can be nullable (``RealmSet<T?>``).
- ``RealmUUID``
- ``BacklinksDelegate<T>``, a `backlinks <{+kotlin-local-prefix+}io.realm.kotlin.ext/backlinks.html>`__
  delegate used to define an inverse relationship between 
  `RealmObjects <{+kotlin-local-prefix+}io.realm.kotlin.types/-realm-object/index.html>`__. 

.. note:: Importing ``ObjectId`` in the Realm Kotlin SDK ``version 1.5.x`` or Higher

   With the :github:`Realm Kotlin Kotlin version 1.5.0
   <realm/realm-kotlin/blob/main/CHANGELOG.md#150-2022-11-11>` you must import
   ``ObjectId`` from :github:`org.mongodb.kbson.ObjectId <mongodb/kbson>`. If
   you were using an older SDK version and wish to upgrade, replace your old
   import statements as `io.realm.kotlin.types.ObjectId
   <{+kotlin-local-prefix+}io.realm.kotlin.types/#-1137254501%2FClasslikes%2F-1651551339>`__
   has been deprecated. 

Realm Database stores all non-decimal numeric types as ``Long`` values.
Similarly, Realm Database stores all decimal numeric types as ``Double``
values.

Realm Database does not support fields with modifiers ``final`` and
``volatile``, though you can use fields with those modifiers if you
:ref:`ignore <kotlin-ignore>` them. If you choose to provide custom
constructors, you must declare a public constructor with no arguments.

Updating Strings and Byte Arrays
--------------------------------

Since Realm Database operates on fields as a whole, it's not possible
to directly update individual elements of strings or byte arrays. Instead,
you'll need to read the whole field, make your modification to individual
elements, and then write the entire field back again in a transaction block.
