.. _kotlin-manage-sync-session:

==================================
Manage a Sync Session - Kotlin SDK
==================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

When you use :ref:`Flexible Sync <flexible-sync>`, the Realm Kotlin SDK syncs 
data with Atlas in the background using a sync session. The sync session starts 
whenever you open a synced realm.

The sync session manages the following:

- Uploading and downloading changes to the realm
- Pausing and resuming sync
- Monitoring network connectivity

You can access the `SyncSession <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.sync/-sync-session/index.html>`__ 
of any synced realm through the `realm.syncSession <{+kotlin-sync-prefix+}io.realm.kotlin.Realm/syncSession.html>`__
property.

Prerequisites
-------------

Before you can manage your sync session state, you must perform the following:

#. :ref:`Configure Flexible Sync on the Atlas App Services backend <enable-flexible-sync>`.
#. :ref:`Authenticate a user <kotlin-authenticate>` in your client app.
#. :ref:`Open the synced realm <kotlin-open-a-synced-realm>`.

.. _kotlin-sync-wait-for-changes:

Wait for Changes to Upload and Download
---------------------------------------

To asynchronously wait for all changes to upload to Atlas from your synced realm,
call
`uploadAllLocalChanges <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.sync/-sync-session/upload-all-local-changes.html>`__. 
This method returns ``true`` when all changes have been uploaded. 

To asynchronously wait for all changes on Atlas to download from the Device Sync 
server to your synced realm, call 
`downloadAllServerChanges <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.sync/-sync-session/download-all-server-changes.html>`__.
This method returns ``true`` when all changes have been downloaded.

You can also include an optional ``timeout`` parameter to either method to 
determine the maximum amount of time before returning ``false``. Note that 
the upload or download continues in the background even after returning ``false``.

The following example demonstrates calling both methods with a timeout defined:

.. literalinclude:: /examples/generated/kotlin/ManageSyncSession.snippet.wait-upload-download.kt
   :language: kotlin

.. _kotlin-pause-resume-sync:

Pause and Resume a Sync Session
-------------------------------

To pause syncing for a session, call 
`syncSession.pause() <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.sync/-sync-session/pause.html>`__.
The realm will not sync changes with Atlas while the session is paused.

To resume syncing a changes, call 
`syncSession.resume() <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.sync/-sync-session/resume.html>`__.

You must manually call ``syncSession.pause()`` and ``syncSession.resume()`` for 
each realm whose Sync session you want to pause and restart.
The sync state of one session has no impact on other open sessions.

The following code block demonstrates calling these methods:

.. literalinclude:: /examples/generated/kotlin/ManageSyncSession.snippet.pause-resume-sync.kt
   :language: kotlin

When to Pause a Sync Session
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/when-to-pause-sync.rst

.. _kotlin-monitor-network-connection:

Monitor Network Connection
--------------------------

You can get the state of the current network connection by checking the
`SyncSession.connectionState <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.sync/-sync-session/connection-state.html>`__ property.
This returns a `ConnectionState <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.sync/-connection-state/index.html>`__ 
enum value that indicates the state of the network connection. The possible 
states are:  
``CONNECTED``, ``DISCONNECTED``, or ``CONNECTING``.

.. literalinclude:: /examples/generated/kotlin/ManageSyncSession.snippet.get-network-connection.kt
   :language: kotlin

Monitor the state of the network connection with
`connectionStateAsFlow <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.sync/-sync-session/connection-state-as-flow.html>`__.
This property returns a Flow of 
`ConnectionStateChange <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.sync/-connection-state-change/index.html>`__
objects that updates when the network connection changes. You can access the 
new and old ``ConnectionState`` from ``ConnectionStateChange``.

.. literalinclude:: /examples/generated/kotlin/ManageSyncSession.snippet.monitor-network-connection.kt
   :language: kotlin
