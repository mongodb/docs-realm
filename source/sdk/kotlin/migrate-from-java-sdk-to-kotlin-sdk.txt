.. _kotlin-migrate-from-java-sdk-to-kotlin-sdk:

===========================================
Migrate from the Java SDK to the Kotlin SDK
===========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

The Java SDK and the Kotlin SDK differ in many ways. On this page, you'll
find a high-level comparison of most of the ways the SDKs differ.

Opening Realms
--------------

The Java SDK automatically detects Realm Object Models defined in your
application, and uses all of them in the schema of opened realms unless
you specify otherwise. The Kotlin SDK requires you to manually specify
the Realm Object Models to use in your realm schema. Additionally:

- The Java SDK used :file:`RealmConfiguration.Builder().build()` to
  generate instances of :file:`RealmConfiguration`. With the Kotlin SDK,
  use the :kotlin-sdk:`RealmConfiguration.with()
  <{+kotlin-local-prefix+}io.realm/-realm-configuration/-companion/with.html>`
  companion method :file:`RealmConfiguration` instead.

- The Java SDK used the static :file:`Realm.getInstance()` method to
  open a realm with a given config. With the Kotlin SDK, use the static
  :file:`Realm.open()` method instead.

.. list-table::
   :header-rows: 1
   :widths: 50 50
   
   * - Java SDK
     - Kotlin SDK

   * - .. literalinclude:: /examples/generated/java/local/MigrateFromJavaToKotlinSDKTest.codeblock.open-a-realm.java
          :language: java
          :copyable: false
     - .. literalinclude:: /examples/generated/kotlin/MigrateFromJavaToKotlinSDKTest.codeblock.open-a-realm.kt
          :language: kotlin
          :copyable: false

Optionally, use :kotlin-sdk:`RealmConfiguration.Builder
<{+kotlin-local-prefix+}io.realm/-realm-configuration/-builder/index.html>`
to customize your configuration even more:

.. literalinclude:: /examples/generated/kotlin/MigrateFromJavaToKotlinSDKTest.codeblock.open-a-realm-advanced.kt
   :language: kotlin
   :copyable: false
   :caption: Kotlin SDK

.. seealso::

   :ref:`Open & Close a Realm <kotlin-open-and-close-a-realm>`

Realm Object Models
-------------------

Both the Java and Kotlin SDKs declare Realm objects the same way: extend
:file:`RealmObject`, and annotate fields with properties like primary keys
and indexes:

.. list-table::
   :header-rows: 1
   :widths: 50 50
   
   * - Java SDK
     - Kotlin SDK

   * - .. literalinclude:: /examples/generated/java/local/Sample.codeblock.realm-object-model.java
          :language: java
          :copyable: false
     - .. literalinclude:: /examples/generated/kotlin/MigrateFromJavaToKotlinSDKTest.codeblock.realm-object-model.kt
          :language: kotlin
          :copyable: false

.. seealso::

   :ref:`Schemas: Supported Types <kotlin-supported-types>`

Relationships
-------------

Both the Java and Kotlin SDKs declare relationships through Realm object
fields:

One-to-One
~~~~~~~~~~

.. list-table::
   :header-rows: 1
   :widths: 50 50
   
   * - Java SDK
     - Kotlin SDK

   * - .. literalinclude:: /examples/generated/java/local/Child.codeblock.one-to-one-relationship.java
          :language: java
          :copyable: false
     - .. literalinclude:: /examples/generated/kotlin/MigrateFromJavaToKotlinSDKTest.codeblock.one-to-one-relationship.kt
          :language: kotlin
          :copyable: false

One-to-Many
~~~~~~~~~~~

With the Java SDK, you could define one-to-many relationships with fields
of type :file:`RealmList`. The Kotlin SDK still uses fields of
type :file:`RealmList`, but you should instantiate :file:`RealmList`
instances with the :kotlin-sdk:`realmListOf()
<{+kotlin-local-prefix+}io.realm/realm-list-of.html>` companion method.

.. list-table::
   :header-rows: 1
   :widths: 50 50
   
   * - Java SDK
     - Kotlin SDK

   * - .. literalinclude:: /examples/generated/java/local/Kid.codeblock.one-to-many-relationship.java
          :language: java
          :copyable: false
     - .. literalinclude:: /examples/generated/kotlin/MigrateFromJavaToKotlinSDKTest.codeblock.one-to-many-relationship.kt
          :language: kotlin
          :copyable: false

Writes
------

The Kotlin SDK introduces new names for the methods that write to realms.

Async
~~~~~

With the Java SDK, you could write asynchronously to a realm with
:file:`realm.executeTransactionAsync()`. The Kotlin SDK uses
:kotlin-sdk:`realm.write()
<{+kotlin-local-prefix+}io.realm/-realm/write.html>`:

.. list-table::
   :header-rows: 1
   :widths: 50 50
   
   * - Java SDK
     - Kotlin SDK

   * - .. literalinclude:: /examples/generated/java/local/MigrateFromJavaToKotlinSDKTest.codeblock.write-async.java
          :language: java
          :copyable: false
     - .. literalinclude:: /examples/generated/kotlin/MigrateFromJavaToKotlinSDKTest.codeblock.write-async.kt
          :language: kotlin
          :copyable: false

Sync
~~~~

With the Java SDK, you could write synchronously to a realm with
:file:`realm.executeTransaction()`. The Kotlin SDK uses
:kotlin-sdk:`realm.writeBlocking()
<{+kotlin-local-prefix+}io.realm/-realm/write-blocking.html>`:

.. list-table::
   :header-rows: 1
   :widths: 50 50
   
   * - Java SDK
     - Kotlin SDK

   * - .. literalinclude:: /examples/generated/java/local/MigrateFromJavaToKotlinSDKTest.codeblock.write-sync.java
          :language: java
          :copyable: false
     - .. literalinclude:: /examples/generated/kotlin/MigrateFromJavaToKotlinSDKTest.codeblock.write-sync.kt
          :language: kotlin
          :copyable: false

.. seealso::

   :ref:`Create a New Object <kotlin-create-a-new-object>`
   :ref:`Modify an Object <kotlin-modify-an-object>`
   :ref:`Delete an Object <kotlin-delete-an-object>`

Queries
-------

With the Java SDK, you could query objects in realms using a fluent
interface or :ref:`Realm Query Language <kotlin-query-language>` (RQL).
The Kotlin SDK only uses RQL.

Filters
~~~~~~~

Aggregates
~~~~~~~~~~

.. seealso::

   :ref:`Realm Query Language <kotlin-query-language>`

Deletes
-------

.. seealso::

   :ref:`Delete all Objects of a Type <kotlin-delete-all-objects-of-a-type>`
   :ref:`Delete Multiple Objects <kotlin-delete-multiple-objects>`
   :ref:`Delete an Object <kotlin-delete-an-object>`

Notifications
-------------

Threading
---------

Migrations
----------


