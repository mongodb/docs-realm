.. _kotlin-client-quick-start:
.. _kotlin-client-quick-start-local:

========================
Quick Start - Kotlin SDK
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

This page contains information to quickly get Realm Database
integrated into your app. Before you begin, ensure you have installed
the Kotlin SDK for your platform:

- :ref:`Android <kotlin-install-android>`
- :ref:`Kotlin Multiplatform <kotlin-install-kotlin-multiplatform>`

Define Your Object Model
------------------------

Your application's **data model** defines the structure of data
stored within Realm Database.
You can define your application's data model via Kotlin
classes in your application code with
:ref:`Realm Object Models <create-schema-from-rom>`.

To define your application's data model, add the following class
definition to your application code:

.. literalinclude:: /examples/generated/kotlin/RealmModels.snippet.quick-start-model.kt
   :language: kotlin
   :copyable: false

Open a Realm
------------

Use `RealmConfiguration
<{+kotlin-local-prefix+}io.realm.kotlin/-realm-configuration/index.html>`__
to control the specifics of the realm you
would like to open, including the name, location, and schema.
Pass your configuration to the `Realm factory constructor
<{+kotlin-local-prefix+}io.realm.kotlin/-realm/-companion/open.html>`__
to generate an instance of that realm:

.. literalinclude:: /examples/generated/kotlin/QuickStartTest.snippet.quick-start-open-a-realm.kt
   :language: kotlin
   :copyable: false

Create, Read, Update, and Delete Objects
----------------------------------------

Once opened, you can create objects within a realm in a
`write transaction block
<{+kotlin-local-prefix+}io.realm.kotlin/-realm/write.html>`__.

To create a new :file:`Task`, instantiate an instance of the
:file:`Task` class and add it to the realm in a write transaction block:

.. literalinclude:: /examples/generated/kotlin/QuickStartTest.snippet.quick-start-create.kt
   :language: kotlin
   :copyable: false

You can retrieve a collection of all tasks in the realm with
`query.find() <{+kotlin-local-prefix+}io.realm.kotlin.query/find.html>`__:

.. literalinclude:: /examples/generated/kotlin/QuickStartTest.snippet.quick-start-read.kt
   :language: kotlin
   :copyable: false

You can also filter a collection to retrieve a more specific collection
of objects:

.. literalinclude:: /examples/generated/kotlin/QuickStartTest.snippet.quick-start-read-filtered.kt
   :language: kotlin
   :copyable: false

.. seealso::

   Find more information about string Realm Database queries in
   :ref:`Filter Data <kotlin-filter-data>`.

To modify a task, update its properties in a write transaction block:

.. literalinclude:: /examples/generated/kotlin/QuickStartTest.snippet.quick-start-update.kt
   :language: kotlin
   :copyable: false

Finally, you can delete a task by calling `mutableRealm.delete()
<{+kotlin-local-prefix+}io.realm.kotlin/-mutable-realm/delete.html>`__
in a write transaction block:

.. literalinclude:: /examples/generated/kotlin/QuickStartTest.snippet.quick-start-delete.kt
   :language: kotlin
   :copyable: false

Complete Example
----------------

If you're running this project in a fresh KMM template project, you can
copy and paste into the :file:`Greeting.greeting()` method in the
:file:`commonMain` module.

.. literalinclude:: /examples/generated/kotlin/QuickStartTest.snippet.quick-start.kt
   :language: kotlin
   :copyable: false
