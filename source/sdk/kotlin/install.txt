.. _kotlin-install:

==========================
Install Realm - Kotlin SDK
==========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


The Kotlin SDK supports two platforms, each with its own installation
method:

- :ref:`Android <kotlin-install-android>`
- :ref:`Kotlin Multiplatform (KMP) <kotlin-install-kotlin-multiplatform>`

Prerequisites
-------------

Before getting started, ensure your development environment
meets the following prerequisites:

- :android:`Android Studio <studio/index.html>` Bumblebee 2021.1.1 or higher.
- JDK 11 or higher.
- Kotlin Plugin for Android Studio, version 1.6.10 or higher.
- An Android Virtual Device (AVD) using a supported CPU architecture.

Additionally, Kotlin Multiplatform (KMP) for mobile projects require the following:

- `Kotlin Multiplatform Mobile (KMM) Plugin
  <https://kotlinlang.org/docs/mobile/kmm-plugin-releases.html#release-details>`__
  for Android Studio, version 0.3.1 or higher.
- A Kotlin Multiplatform (KMP) App created using the "Kotlin Multiplatform App" 
  template in Android Studio. Follow the instructions in the 
  `Kotlin Multiplatform documentation 
  <https://kotlinlang.org/docs/mobile/create-first-app.html>`__.

For more details on setting up your KMP environment, refer to the `official Kotlin
Kotlin Multiplatform for mobile documentation
<https://kotlinlang.org/docs/multiplatform-mobile-setup.html>`__. To verify your
environment setup, follow Kotlin's `guide to checking your
environment
<https://kotlinlang.org/docs/multiplatform-mobile-setup.html#check-your-environment>`__.

.. tip:: Kotlin Plugin Version

   The Kotlin Multiplatform (KMP) ecosystem frequently changes. If you experience
   any issues installing the SDK, check your Kotlin Plugin version, since
   outdated plugins can lead to difficult to debug errors. To see which
   versions of the Kotlin Plugin are compatible with the SDK, see the
   `realm-kotlin changelog <https://github.com/realm/realm-kotlin/blob/master/CHANGELOG.md>`__.

.. _kotlin-install-kotlin-multiplatform:
.. _kotlin-install-android:

Installation
------------

.. procedure::

   .. step:: Add Realm to the Project

      .. tabs::

         .. tab:: Android
            :tabid: android
                  
            Add :file:`io.realm.kotlin`, specifying the library version and 
            :file:`apply false`, to the list of plugins in your project-level Gradle 
            build file, typically found at :file:`<project>/build.gradle`:

            .. code-block:: kotlin
               :caption: Global build.gradle
               
               plugins {
                  id 'io.realm.kotlin' version '{+kotlin-sdk-version+}' apply false
               }
            
            Add the following to your app-level Gradle build file, typically
            found at :file:`<project>/app/build.gradle`:

            - Add :file:`io.realm.kotlin` to the list of plugins.
            - Add the following to the list of dependencies:
                  
              - Add :file:`io.realm.kotlin:library-base` to the dependencies block.
              - If using Device Sync in your application, add :file:`io.realm.kotlin:library-sync` to the dependencies block.

            - To use coroutines with the SDK, add :file:`org.jetbrains.kotlinx:kotlinx-coroutines-core` to the list of dependencies.

            .. code-block:: kotlin
               :caption: Module build.gradle
               :emphasize-lines: 4, 12, 13, 14 

               plugins {
                  id 'com.android.application'
                  id 'org.jetbrains.kotlin.android'
                  id 'io.realm.kotlin'
               }

               android {
                  // ... build configuration settings
               }

               dependencies {
                  implementation 'io.realm.kotlin:library-base:{+kotlin-sdk-version+}' 
                  implementation 'io.realm.kotlin:library-sync:{+kotlin-sdk-version+}'// If using Device Sync
                  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:{+kotlinx-coroutines-version+}' // If using coroutines with the SDK
               }

         .. tab:: Kotlin Multiplatform (KMP)
            :tabid: kmp

            Add the following to your app-level Gradle build file, typically
            found at :file:`<project>/app/build.gradle`:

            - Add :file:`io.realm.kotlin` to the list of plugins.
            - Add the following to the list of dependencies:
                  
              - Add :file:`io.realm.kotlin:library-base` to the dependencies block.
              - If using Device Sync in your application, add :file:`io.realm.kotlin:library-sync` to the dependencies block.

            - To use coroutines with the SDK, add :file:`org.jetbrains.kotlinx:kotlinx-coroutines-core` to the list of dependencies.

            .. code-block:: kotlin
               :caption: Module build.gradle
               :emphasize-lines: 5, 18, 19, 20 

               plugins {
                  kotlin("multiplatform")
                  kotlin("native.cocoapods")
                  id("com.android.library")
                  id("io.realm.kotlin") version "{+kotlin-sdk-version+}"
               }

               version = "1.0"

               kotlin {
                  android()
                  iosX64()
                  iosArm64()

                  sourceSets {
                     val commonMain by getting {
                        dependencies {
                           implementation("io.realm.kotlin:library-base:{+kotlin-sdk-version+}") 
                           implementation("io.realm.kotlin:library-sync:{+kotlin-sdk-version+}") // If using Device Sync
                           implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:{+kotlinx-coroutines-version+}") // If using coroutines with the SDK
                        }
                     }
                  }
               }

            .. note:: Android Module Dependencies

               If you use any part of the SDK inside the Android module, add the
               SDK's compile-time dependency to your Android module :file:`build.gradle.kts`:

               .. code-block:: kotlin
                  :copyable: false

                  dependencies {
                     compileOnly("io.realm.kotlin:library-base:{+kotlin-sdk-version+}")
                  }

                  // If using Device Sync
                  dependencies {
                     compileOnly("io.realm.kotlin:library-sync:{+kotlin-sdk-version+}")
                  }

   .. step:: Sync Gradle Files 

      After updating the Gradle configuration,
      resolve the dependencies by clicking :guilabel:`File` >
      :guilabel:`Sync Project with Gradle Files` in the Android Studio menu bar.
      You can now use the Kotlin SDK in your application.


Supported Target Environments
-----------------------------

Kotlin Multiplatform (KMP) supports a `wide range of application environments
<https://kotlinlang.org/docs/multiplatform-dsl-reference.html#targets>`__.

Supported Environments
~~~~~~~~~~~~~~~~~~~~~~

The Kotlin SDK supports the following environments:

- :file:`android`

- :file:`iosArm64`
- :file:`iosSimulatorArm64`
- :file:`iosX64`

- :file:`jvm`

- :file:`macosArm64`
- :file:`macosX64`

Unsupported Environments
~~~~~~~~~~~~~~~~~~~~~~~~

The Kotlin SDK does *not* support the following environments:

- :file:`androidNativeArm32`
- :file:`androidNativeArm64`
- :file:`androidNativeX86`
- :file:`androidNativeX64`

- :file:`iosArm32`

- :file:`js`

- :file:`linuxArm32Hfp`
- :file:`linuxArm64`
- :file:`linuxMips32`
- :file:`linuxMipsel32`
- :file:`linuxX64`

- :file:`mingwX64`
- :file:`mingwX86`

- :file:`tvosArm64`
- :file:`tvosSimulatorArm64`
- :file:`tvosX64`

- :file:`wasm32`

- :file:`watchosArm32`
- :file:`watchosArm64`
- :file:`watchosSimulatorArm64`
- :file:`watchosX86`
- :file:`watchosX64`
