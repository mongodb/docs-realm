.. _kotlin-errors:

==========================
Handle Errors - Kotlin SDK
==========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 4
   :class: singlecol

.. toctree::
   :titlesonly:
   
   </sdk/kotlin/errors/realm>
   </sdk/kotlin/errors/app>

The Kotlin SDK uses a hierarchy of exceptions to help developers manage
API call failures. There are two major categories of exceptions that your
application should handle when using the Kotlin SDK:

- **realm errors** occur when a read or write to realm database fails.
  These errors generate a
  `RealmException <{+kotlin-local-prefix+}io.realm.kotlin.exceptions/-realm-exception/index.html>`__.
- **app errors** occur when network communication with Atlas App Services
  fails. These errors generate an
  `AppException <{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.exceptions/-app-exception/index.html>`__.

.. _kotlin-ephemeral-errors:

Some errors are *ephemeral*: they happen because of failures outside of
the client or SDK's control. A failed login attempt due to a network error
is an example of an ephemeral error.

Other errors require logic fixes. Examples include:

- writing to a realm outside of a write transaction
- a failed login attempt due to incorrect credentials
- deleting an object that does not exist

When an ephemeral error occurs, you should retry the operation that
caused the error. If the operation still fails when you retry it,
investigate logic fixes.

Example
-------

You can handle errors in the SDK with Kotlin's built-in
`runCatching <https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/run-catching.html>`__
API. Use the ``onSuccess`` and ``onFailure`` callbacks of the returned
`Result <https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-result/>`__
to handle successful SDK API calls and error cases. The following example
logs an anonymous user into an App. If the login attempt succeeds, we
log the successful authentication attempt and transition the
user to another screen. If the login attempt fails, we handle each
potential error case individually:

- If the user supplied invalid credentials, we log the attempt and
  display a popup toast encouraging the user to check their
  credentials.
- If there was a problem with the network connection, we log the
  problem to the error log and display a popup toast encouraging
  the user to check their network connection and try again.
- For all other errors, we log the problem to the error log and display
  a popup toast informing the user that the login attempt failed.

.. literalinclude:: /examples/generated/kotlin/AppClientTest.snippet.handle-errors.kt
   :language: kotlin
   :copyable: false
