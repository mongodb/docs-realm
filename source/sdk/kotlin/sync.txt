.. _kotlin-sync:
.. _kotlin-sync-overview:

========================
Device Sync - Kotlin SDK
========================

.. toctree::
   :titlesonly:
   
   Configure & Open a Synced Realm </sdk/kotlin/sync/open-a-synced-realm>
   Manage Subscriptions </sdk/kotlin/sync/subscribe>
   Write to a Synced Realm </sdk/kotlin/sync/write-to-synced-realm>
   Manage Sync Session </sdk/kotlin/sync/manage-sync-session>
   Handle Sync Errors </sdk/kotlin/sync/handle-sync-errors>
   Set the Client Log Level </sdk/kotlin/sync/log-level>
   Stream Data to Atlas </sdk/kotlin/sync/stream-data-to-atlas>
   Sync Data in the Background </sdk/kotlin/sync/background-sync>
   Partition-Based Sync </sdk/kotlin/sync/partition-based-sync>

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _kotlin-realm-sync:

Atlas Device Sync automatically synchronizes data between client applications and
an :ref:`Atlas App Services backend <realm-cloud>`. When a client
device is online, Sync asynchronously synchronizes data in a
background thread between the device and your backend App.

.. _kotlin-flexible-sync-fundamentals:

Flexible Sync
-------------

When you select :ref:`Flexible Sync <flexible-sync>` for your backend App
configuration, your client implementation must include subscriptions to
queries on :ref:`queryable fields <queryable-fields>`. Flexible Sync works
by synchronizing data that matches query subscriptions you maintain in the
client application. 

A subscription set contains a set of queries. Realm Flexible Sync returns
documents matching those queries, where the user has the appropriate
:ref:`permissions <flexible-sync-rules-and-permissions>` to read and/or
read and write the documents. If documents match the query, but the client
does not have the permission to read or write them, they do not sync to
the client application.

You can form queries using :ref:`Realm Query Language <realm-query-language>`.

.. include:: /includes/note-unsupported-flex-sync-rql-operators.rst

Subscription sets are based on object type.
You might have multiple subscriptions if you
have many types of Realm objects.

To use Flexible Sync in your client application, open a synced realm 
with an initial set of subscriptions to determine which documents to
sync.

.. tip::

   Device Sync supports two Sync Modes: Flexible Sync, and the older 
   Partition-Based Sync. If your App Services backend uses Partition-Based 
   Sync, refer to :ref:`kotlin-partition-based-sync`.

   We recommend new apps use Flexible Sync.
