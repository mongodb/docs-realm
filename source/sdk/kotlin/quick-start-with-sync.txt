.. _kotlin-client-quick-start-sync:

========================
Quick Start - Kotlin SDK
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

This page contains information to quickly get Realm Database and Atlas Device
Sync integrated into your app. Before you begin, ensure you have:

- :ref:`Created an App <create-a-realm-app>`
- :ref:`Enabled Device Sync <enable-sync>`
- :ref:`Installed the Kotlin SDK <react-native-install>` to use with your :ref:`Android <kotlin-install-android>` or :ref:`KMM <kotlin-install-kotlin-multiplatform>` app.

Initialize the App
------------------

To use App Services features such as authentication and sync, you must access
your App using your App ID. You can :ref:`find your App ID in the
App Services UI <find-your-app-id>`.

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-sync-initialize-app.kt
   :language: kotlin
   :copyable: false

Authenticate a User
-------------------

To authenticate and log in a user, call :js-sdk:`App.logIn()
<Realm.App.html#logIn>`. When :ref:`anonymous authentication
<anonymous-authentication>` is enabled, users can immediately log into your app
without providing any identifying information:

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-with-sync-authenticate.kt
   :language: kotlin
   :copyable: false

.. _kotlin-client-qs-sync-define-your-data-model

Define Your Object Model
------------------------

Your application's **data model** defines the structure of data
stored within Realm Database.
You can define your application's data model via Kotlin
classes in your application code with
:ref:`Realm Object Models <create-schema-from-rom>`.

To define your application's data model, add the following class
definition to your application code:

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-sync-define-your-data-model.kt
   :language: kotlin
   :copyable: false

Open a Realm
------------

Once you have initialized your Atlas App Services app, authenticated a user, and
defined your object model, you can create a `SyncConfiguration
<{+kotlin-local-prefix+}io.realm.kotlin.mongodb.sync/-sync-configuration/index.html>`__
. Pass your user, and ``Task`` class to the `SyncConfiguration.Builder
<{+kotlin-local-prefix+}io.realm.kotlin.mongodb.sync/-sync-configuration/-builder/index.html>`__
function to create a :ref:`Flexible Sync Configuration <kotlin-flexible-sync-fundamentals>`.

You need atleast one subscription before you can read from or write to the
realm. Use `initialSubscriptions
<{+kotlin-local-prefix+}io.realm.kotlin.mongodb.sync/-sync-configuration/-builder/initial-subscriptions.html>`__
to define the initial subscription set when the Realm file is first opened.
Pass the query you wish to subscribe to, and a name for the subscription to the `add()
<{+kotlin-sync-prefix+}io.realm.kotlin.mongodb.sync/-mutable-subscription-set/add.html>`__ function.

The example below specifies a subscription named "High Priority Tasks" that subscribes to
all ``Task`` objects with a ``priority`` higher than ``3``. 

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-with-sync-open-a-realm.kt
   :language: kotlin
   :copyable: false

Create, Read, Update, and Delete Objects
----------------------------------------

Once opened, you can create objects within a realm in a `write transaction block
<{+kotlin-local-prefix+}io.realm.kotlin/-realm/write.html>`__. The newly created
object will sync to your Atlas database and all devices with the same
``SyncConfiguration``.

To create a new :file:`Task`, instantiate an instance of the
:file:`Task` class and add it to the realm in a write transaction block:

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-with-sync-create-a-task.kt
   :language: kotlin
   :copyable: false

You can retrieve a collection of all tasks in the realm with
`query.find() <{+kotlin-local-prefix+}io.realm.kotlin.query/find.html>`__:

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-with-sync-find-all-task.kt
   :language: kotlin
   :copyable: false

You can also filter a collection to retrieve a more specific collection
of objects:

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-with-sync-filter-tasks.kt
   :language: kotlin
   :copyable: false

.. seealso::

   Find more information about string Realm Database queries in
   :ref:`Filter Data <kotlin-filter-data>`.

To modify a task, update its properties in a write transaction block:

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-with-sync-modify-task.kt
   :language: kotlin
   :copyable: false

Finally, you can delete a task by calling `mutableRealm.delete()
<{+kotlin-local-prefix+}io.realm.kotlin/-mutable-realm/delete.html>`__
in a write transaction block:

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-with-sync-delete-task.kt
   :language: kotlin
   :copyable: false

Watch for Changes
-----------------

You can :ref:`watch a realm, collection, or object for changes
<kotlin-react-to-changes>` with the ``observe`` method.

.. include:: /includes/serverless-watch-note.rst

In the following example, we listen for changes on all ``Task`` objects.

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-with-sync-watch-for-changes.kt
   :language: kotlin
   :copyable: false

Later, when you're done observing, cancel the job to cancel the coroutine:

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-with-sync-unsubscribe-to-changes.kt
   :language: kotlin
   :copyable: false


Close a Realm
-------------

To close a realm and all underlying resources call `realm.close()
<{+kotlin-local-prefix+}io.realm.kotlin/-realm/close.html>`__. The
:file:`close()` method blocks until all write transactions on the realm have
completed.

.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-with-sync-close-realm.kt
   :language: kotlin
   :copyable: false

Complete Example
----------------
.. literalinclude:: /examples/generated/kotlin/QuickStartWithSyncTest.snippet.qs-sync-complete-example.kt
   :language: kotlin
   :copyable: false
