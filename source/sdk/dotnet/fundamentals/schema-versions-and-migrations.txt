.. _dotnet-schema-versions-and-migrations:

=======================================
Schema Versions & Migrations - .NET SDK
=======================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _dotnet-schema-version:

Overview
--------
A **migration** transforms an existing {+realm+} and its objects from its
current :ref:`{+backend-schema+} version <dotnet-schema-version>` to a newer one.
Application data models typically change over time to accommodate new
requirements and features. Migrations give you the flexibility to
automatically update your existing application data whenever a client
application upgrades to a newer version.

Consider the following example, in which we have a ``RealmObject`` 
called "Person":

.. literalinclude:: /examples/generated/dotnet/Migrations.codeblock.ro3.cs
   :language: csharp

Suppose we now want to split up the ``FullName`` property into two separate 
properties, ``FirstName`` and ``LastName``:

.. literalinclude:: /examples/generated/dotnet/Migrations.codeblock.ro2.cs
   :language: csharp
   
At this point, there is a mismatch between the model and any saved data, and 
an exception will be thrown when you try to open the realm.

Schema Version
--------------

The **schema version** identifies the state of a :ref:`{+backend-schema+}
<dotnet-realm-schema>` at some point in time. {+client-database+} tracks the schema
version of each {+realm+} and uses it to map the objects in each {+realm+}
to the correct schema.

Schema versions are integers that you may include
in the {+realm+} configuration when you open a {+realm+}. If a client
application does not specify a version number when it opens a {+realm+} then
the {+realm+} defaults to version ``0``.

.. important:: Increment Versions Monotonically

   Migrations must update a {+realm+} to a
   higher schema version. {+client-database+} will throw an error if a client
   application opens a {+realm+} with a schema version that is lower than
   the {+realm+}'s current version or if the specified schema version is the
   same as the {+realm+}'s current version but includes different
   :ref:`object schemas <dotnet-object-schema>`.

Migrate a Schema
----------------

To learn how to perform a migration, see :ref:`<dotnet-modify-an-object-schema>`.