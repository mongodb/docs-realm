.. _dotnet-unity:

===============================
Use Realm with Unity - .NET SDK
===============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


Overview
--------

This page contains information on how to install and integrate {+service+} into
your Unity project. 


Install
-------
{+service-short+} provides various ways to install the :doc:`{+service-short+}
.NET SDK </sdk/dotnet>` for use with Unity. Long time Unity developers may find
manually installing {+service-short+} to be intuitive. However, we recommend
installing the :doc:`{+service-short+} .NET SDK </sdk/dotnet>` since it provides
opt-in notifications of version updates.

.. tabs::

   .. tab:: Manually Install a Tarball
      :tabid: tarball

      .. include:: /includes/steps/install-realm-dotnet-tarball.rst

   .. tab:: Install with NPM
      :tabid: npm

      .. include:: /includes/steps/install-realm-dotnet-npm.rst


Additional Considerations
-------------------------

This page details considerations when using {+client-database+} on tvOS.

{+service+} 

This page contains information to integrate {+service+} into your
Electron application quickly. To learn how to set up an Electron
application with Realm without using any additional frameworks, see the
:ref:`Electron set up <electron-setup>` instructions. If you have
already created an application using `Create React App
<https://reactjs.org/docs/create-a-new-react-app.html>`_ or are
interested in integrating a React App with Realm using Electron, check
out the :ref:`Electron with React set up <node-electron-cra-client-quick-start>`
instructions.


Summary
-------