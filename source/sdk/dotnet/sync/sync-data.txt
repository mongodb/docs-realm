.. _dotnet-sync-changes-between-devices:

=======================================
Sync Data Between Devices - .NET SDK
=======================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Prerequisites
-------------
 
Before you can access a synced realm from the client, you must:

- :ref:`Enable sync <enable-sync>` in the App Services UI.

- :ref:`Authenticate a user <dotnet-quick-start-authenticate>` in
  your client project.

- :ref:`Open a Synced Realm <dotnet-configure-and-open-a-synced-realm>`

.. _dotnet-sync-data:

Sync Data
---------

The syntax to :ref:`read <dotnet-realm-database-reads>` and :ref:`write
<dotnet-realm-database-writes>` on a synced realm is identical to the syntax 
for non-synced realms. While you work with local data, a background thread 
efficiently integrates, uploads, and downloads changesets.

.. important:: When Using Sync, Avoid Writes on the Main Thread
   
   The fact that Realm performs sync integrations on a background thread means
   that if you write to your realm on the main thread, there's a small chance your UI
   could appear to hang as it waits for the background sync thread to finish a write
   transaction. Therefore, it's a best practice :ref:`never to write on the main thread
   when using Device Sync <dotnet-threading-three-rules>`.

The following code creates a new ``Task`` object and writes it to the realm:

.. literalinclude:: /examples/generated/dotnet/QuickStartExamples.snippet.create.cs
   :language: csharp

.. seealso:: 
   
   :ref:`Threading <dotnet-client-threading>`

