.. _flutter-compact:

=============================
Compact a Realm - Flutter SDK
=============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

If you want to reduce the size of a realm file to improve performance, you 
can compact the realm. Compacting a realm reduces the amount of unused 
empty space within the realm. Every production application should implement 
compaction to periodically reduce the realm file size.

The size of a Realm Database file is always larger than the total size of 
the objects stored within it. This architecture enables some of realm's 
performance, concurrency, and safety benefits.

Realm writes new data within unused space tracked inside the file. In some 
situations, a realm file may contain a significant amount of unused space. 
If file size grows large enough to negatively impact performance, you can 
compact the realm to reduce its file size.

Compacting a realm can be an expensive operation that can block the UI thread. 
Optimize compacting to balance frequency with performance gains. If your 
application runs in a resource-constrained environment, you may want to 
compact when you reach a certain file size or when the file size negatively 
impacts performance.

Compact When Opening a Realm
----------------------------

.. _flutter-realm-compact:

Realm.compact() Method
~~~~~~~~~~~~~~~~~~~~~~

You can compact a file by calling the :flutter-sdk:`Realm.compact() 
<realm/Realm/compact.html>` method. When you use this method, the device
must have enough free space to make a copy of the realm.

``Realm.compact()`` obtains an instance of the realm, and opens it to 
trigger any schema version upgrades, file format upgrades, migration and 
initial data callbacks. If the realm is a :ref:`Flexible Sync realm 
<flutter-open-synced-realm>`, this method waits for any unsynced data to 
download or upload before performing the compaction operation.

Upon successfully opening the realm and performing these 
operations, this method then compacts the realm.

If successful, a call to ``Realm.compact()`` returns ``true``.

.. literalinclude:: /examples/generated/flutter/compact_realm_test.snippet.compact-static-method.dart
   :language: dart

.. _flutter-should-compact-callback:

Realm Configuration File
~~~~~~~~~~~~~~~~~~~~~~~

.. note::

   You cannot compact a :ref:`Flexible Sync realm <flutter-open-synced-realm>`
   with the ``shouldCompactCallback()``. To compact a Flexible Sync realm, 
   use :ref:`Realm.compact() <flutter-realm-compact>`.

You can define a :flutter-sdk:`shouldCompactCallback() 
<realm/LocalConfiguration/shouldCompactCallback.html>` as a property of a 
realm's :flutter-sdk:`LocalConfiguration <realm/LocalConfiguration-class.html>`. 
This callback takes two ``int`` values representing the total number of 
bytes and the used bytes of the realm file on disk. The callback returns 
a ``bool``. Compaction only occurs if the ``bool`` returns ``true`` and 
another process is not currently accessing the realm file.

The most basic usage is to define a file size at which compaction should occur.

.. literalinclude:: /examples/generated/flutter/compact_realm_test.snippet.compact-with-callback.dart
   :language: dart

You can define more complex logic if you need to optimize performance for 
different use cases. For example, you could set a threshold for compaction
when a certain percentage of the file size is used.

.. literalinclude:: /examples/generated/flutter/compact_realm_test.snippet.compact-with-callback-and-logic.dart
   :language: dart
