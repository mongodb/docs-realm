.. _flutter-react-to-changes:

==============================
React to Changes - Flutter SDK
==============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Any modern app should be able to react when data changes,
regardless of where that change originated. When a user adds a new item to a list,
you may want to update the UI, show a notification, or log a message.
When someone updates that item, you may want to change its visual state
or fire off a network request.
Finally, when someone deletes the item, you probably want to remove it from the UI.
Realm's notification system allows you to watch for and react to changes in your data,
independent of the writes that caused the changes.

You can subscribe to changes on the following events:

- :ref:`Query on collection <flutter-query-change-listener>`
- :ref:`Realm object <flutter-realm-object-change-listener>`
- :ref:`List and Set in a Realm object <flutter-realm-list-change-listener>`

.. example:: About the Examples on This Page

   The examples in this page use two Realm object types, ``Character`` and
   ``Fellowship``:

   .. literalinclude:: /examples/generated/flutter/react_to_changes_test.snippet.sample-data-models.dart
      :language: dart

   The examples have this sample data:

   .. literalinclude:: /examples/generated/flutter/react_to_changes_test.snippet.sample-data-seed.dart
      :language: dart


.. _flutter-query-change-listener:

Register a Query Change Listener
--------------------------------

You can register a notification handler on any query within a Realm.
The handler receives a :flutter-sdk:`RealmResultsChanges <realm/RealmResultsChanges-class.html>` object,
which includes description of changes since the last notification.
``RealmResultsChanges`` contains the following properties:

.. list-table::

   * - Property
     - Type
     - Description

   * - ``inserted``
     - *List<int>*
     - Indexes in the new collection which were added in this version.

   * - ``modified``
     - *List<int>*
     -  Indexes of the objects in the new collection which were modified in this version.

   * - ``deleted``
     - *List<int>*
     -  Indexes in the previous version of the collection which have been removed from this one.

   * - ``newModified``
     - *List<int>*
     - Indexes of modified objects after deletions and insertions are accounted for.

   * - ``moved``
     - *List<int>*
     - Indexes of the objects in the collection which moved.

   * - ``results``
     - *RealmResults<T as RealmObject>*
     - Results collection being monitored for changes.

   * - ``isCleared``
     - *bool*
     - Deprecated in Realm Flutter SDK v1.1.0. Use ``RealmResultsChanges.results.isEmpty`` instead.
       Returns ``true`` if the results collection is empty in the notification callback.

.. literalinclude:: /examples/generated/flutter/react_to_changes_test.snippet.query-change-listener.dart
   :language: dart

.. _flutter-realm-object-change-listener:

Register a RealmObject Change Listener
--------------------------------------

You can register a notification handler on a specific object within a realm.
Realm notifies your handler when any of the object's properties change.
The handler receives a :flutter-sdk:`RealmObjectChanges <realm/RealmObjectChanges-class.html>` object,
which includes description of changes since the last notification.
``RealmObjectChanges`` contains the following properties:

.. list-table::

   * - Property
     - Type
     - Description

   * - ``isDeleted``
     - *bool*
     - ``true`` if the object was deleted.

   * - ``object``
     - *RealmObject*
     - Realm object being monitored for changes.

   * - ``properties``
     - *List<String>*
     -  Names of the Realm object's properties that have changed.

.. literalinclude:: /examples/generated/flutter/react_to_changes_test.snippet.realm-object-change-listener.dart
   :language: dart

.. _flutter-realm-list-change-listener:
.. _flutter-realm-set-change-listener:

Register RealmList and RealmSet Change Listeners
------------------------------------------------

You can register a notification handler on a list or set of any of the
supported data types within another ``RealmObject``.
Realm notifies your handler when any of the items in the set or list change.
The handler receives a :flutter-sdk:`RealmListChanges <realm/RealmListChanges-class.html>` object
for ``RealmList`` and :flutter-sdk:`RealmSetChanges <realm/RealmSetChanges-class.html>` object
for ``RealmSet``.
These objects include description of changes since the last notification.

``RealmListChanges`` contains the following properties:

.. list-table::

   * - Property
     - Type
     - Description

   * - ``inserted``
     - *List<int>*
     - Indexes of items in the new list which were added in this version.

   * - ``modified``
     - *List<int>*
     -  Indexes of the items in the new list which were modified in this version.

   * - ``deleted``
     - *List<int>*
     -  Indexes of items in the previous version of the list which have been removed from this one.


   * - ``newModified``
     - *List<int>*
     - Indexes of modified items after deletions and insertions are accounted for.

   * - ``moved``
     - *List<int>*
     - Indexes of the items in the list which moved.

   * - ``list`` / ``set``
     - *RealmList<T>* / *RealmSet<T>*
     - ``RealmList`` being monitored for changes if listening to a ``RealmList``.
       ``RealmSet`` being monitored for changes if listening to a ``RealmSet``.

   * - ``isCleared``
     - *boolean*
     - ``true`` when a collection has been cleared by calling its
       :flutter-sdk:`RealmList.clear() <realm/RealmList-class.html>` or
       :flutter-sdk:`RealmSet.clear() <realm/RealmSet-class.html>` method.

.. literalinclude:: /examples/generated/flutter/react_to_changes_test.snippet.realm-list-change-listener.dart
   :language: dart

.. _flutter-pause-resume-change-listener:

Pause and Resume a Change Listener
----------------------------------

Pause your subscription if you temporarily don't want to receive notifications.
You can later resume listening.

.. literalinclude:: /examples/generated/flutter/react_to_changes_test.snippet.pause-resume-subscription.dart
   :language: dart

.. _flutter-unsubscribe-change-listener:

Unsubscribe a Change Listener
-----------------------------

Unsubscribe from your change listener when you no longer want to receive
notifications on updates to the data it's watching.

.. literalinclude:: /examples/generated/flutter/react_to_changes_test.snippet.cancel-subscription.dart
   :language: dart

.. _flutter-change-notification-limits:

Change Notification Limits
--------------------------

.. include:: /includes/change-notification-limit.rst
