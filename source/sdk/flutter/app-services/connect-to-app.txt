.. _flutter-connect-to-backend:

============================================
Connect to an App Services App - Flutter SDK
============================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The App client is the interface to the Atlas App Services
backend. It provides access to the :ref:`authentication
<flutter-authenticate>` and Device Sync.

Before You Begin
----------------

#. :ref:`Create an Atlas App Services app <create-a-realm-app>`

.. _flutter-access-the-app-client:

Access the App Client
---------------------

#. :ref:`Find the App ID in the Realm UI <find-your-app-id>`.
#. Create an :flutter-sdk:`AppConfiguration <realm/AppConfiguration-class.html>`
   object with your App's App ID as the argument.
#. Create an :flutter-sdk:`App <realm/App-class.html>`
   with the ``AppConfiguration`` you just created. You use this
   ``App`` instance to access Atlas App Services features throughout your client application.

.. literalinclude:: /examples/generated/flutter/app_services_test.snippet.access-app-client.dart
   :language: dart

.. note::

   You can create multiple ``App`` instances to connect to multiple
   Apps or to the same App with different configurations. All
   ``App`` instances that share the same App ID use the same underlying
   connection.

.. _flutter-app-client-configuration:

Advanced Configuration
----------------------

Add additional configuration for more granular control of the details of your app client,
such as custom timeouts for connections and keys for local encryption.
You can add optional arguments to the :flutter-sdk:`AppConfiguration <realm/AppConfiguration-class.html>`:

.. literalinclude:: /examples/generated/flutter/app_services_test.snippet.app-client-advanced-configuration.dart
   :language: dart

.. note::

   For most use cases, you only need your application's App ID to connect
   to Atlas App Services. The other settings demonstrated here are optional.
