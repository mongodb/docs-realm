.. _flutter-open-synced-realm:

=================================
Open a Synced Realm - Flutter SDK
=================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

This page describes how to open a synced realm using Device Sync.
To learn how to open and configure non-synced realms,
see :ref:`Open and Close a Realm <flutter-open-close-realm>`.

Before You Begin
----------------

Before you open a realm with Flexible Sync in a Flutter application:

#. :ref:`Configure Flexible Sync on the backend <enable-flexible-sync>`.
   You must configure Flexible Sync in the backend before you can use it with your
   client application.
#. :ref:`Initialize the App client <flutter-connect-to-backend>`.
#. :ref:`Authenticate a user <flutter-authenticate>` in your client project.

Open a Synced Realm
-------------------

To open a synced realm, pass a logged in user, a list of
Realm object schemas, and additional optional named arguments to the
:flutter-sdk:`Configuration.flexibleSync() <realm/Configuration/flexibleSync.html>` constructor.
This constructor returns a :flutter-sdk:`FlexibleSyncConfiguration <realm/FlexibleSyncConfiguration-class.html>`.
Then, pass the ``FlexibleSyncConfiguration`` to :flutter-sdk:`Realm() <realm/Realm-class.html>`
to open an instance of the realm. Data syncs with App Services in the background
after you open the realm.

.. literalinclude:: /examples/generated/flutter/open_flexible_sync_realm_test.snippet.open-flexible-sync-realm.dart
   :language: dart

Once you open a synced realm, :ref:`configure and manage the sync session
<flutter-manage-sync-session>`.

.. _flutter-open-realm-async:

Sync Data on Open
~~~~~~~~~~~~~~~~~

To sync all data with App Services when you open a realm, use the asynchronous method
:flutter-sdk:`Realm.open() <realm/Realm/open.html>`. The operation syncs all available
data before returning the realm.

``Realm.open()`` only resolves if the app is online.
You should check if the device is connected to the internet before using ``Realm.open()``.
If the device is not connected to the internet, you can still use ``Realm()``
to open a realm and sync data in the background when an internet connection is available.

.. literalinclude:: /examples/generated/flutter/open_flexible_sync_realm_test.snippet.async-open.dart
   :language: dart

To track the state of the synchronization, pass a :flutter-sdk:`ProgressCallback <realm/ProgressCallback.html>`
to the optional named argument ``onProgressCallback``.

.. literalinclude:: /examples/generated/flutter/open_flexible_sync_realm_test.snippet.async-open-track-progress.dart
   :language: dart

To be able to cancel a synchronization in progress, pass a `CancellationToken
<https://pub.dev/documentation/cancellation_token/latest/cancellation_token/CancellationToken-class.html>`__
instance to the optional named argument ``cancellationToken``.
Call `CancellationToken.cancel() <https://pub.dev/documentation/cancellation_token/latest/cancellation_token/CancellationToken/cancel.html>`__
to cancel the synchronization.

.. literalinclude:: /examples/generated/flutter/open_flexible_sync_realm_test.snippet.async-open-cancel.dart
   :language: dart

Configure a Realm
-----------------

For more information on general realm configuration options, refer to
:ref:`Configure a Realm <flutter-configure-realm>`.

To handle errors in your synced realm using additional configuration properties,
refer to :ref:`Handle Sync Errors <flutter-handle-sync-errors>`.

Close a Realm
-------------

Once you've finished working with a synced realm, close it to prevent memory leaks.

.. literalinclude:: /examples/generated/flutter/open_realm_test.snippet.close-realm.dart
   :language: dart

Further Reading
---------------

- :ref:`Manage a Sync Session <flutter-manage-sync-session>`: Learn how to add,
  modify, and remove sync subscriptions once you've opened a synced realm.
- :ref:`Sync Data from Multiple Processes <flutter-sync-multiple-processes>`:
  Learn how to sync data from multiple processes with a single realm.
