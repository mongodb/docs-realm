.. _flutter-read-write-data: 

===============================
Read & Write Data - Flutter SDK
===============================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _flutter-read-data: 

Read from Realm Database 
------------------------

A read from a :term:`{+realm+}` generally consists of the following
steps:

- Get all objects of a certain type from the {+realm+}.
- Optionally, :ref:`filter <flutter-filter-results>` the results 
  using the :ref:`Realm Query Language <flutter-query-language>`.
- Optionally, :ref:`sort <flutter-sort-results>` the results using Realm Query Language.

.. _flutter-query-objects:

Query All Objects
~~~~~~~~~~~~~~~~~

Retrieve a collection of all objects of a data model in the {+realm+} with the
:flutter-sdk:`Realm.all() <realm/Realm/all.html>` method.

.. literalinclude:: /examples/generated/flutter/quick_start_test.codeblock.query-all-realm-objects.dart
   :language: dart

.. _flutter-query-list-realm-objects:

Query List of RealmObjects
~~~~~~~~~~~~~~~~~~~~~~~~~~

You can query any list of :flutter-sdk:`RealmObjects <realm/RealmObject-mixin.html>`.
For more information on querying, see :ref:`Filter Results <flutter-filter-results>`.

.. literalinclude:: /examples/generated/flutter/read_write_data_test.codeblock.query-realm-list.dart
   :language: dart

.. _flutter-filter-results:

Filter Results
~~~~~~~~~~~~~~

Filter a ``RealmList`` to retrieve a specific segment
of objects with the :flutter-sdk:`Realm.query() <realm/Realm/query.html>` method.
In the ``query()`` method's argument,
use :ref:`Realm Query Language operators<flutter-query-language>` to perform filtering.

.. literalinclude:: /examples/generated/flutter/quick_start_test.codeblock.query-realm-objects-with-filter.dart
   :language: dart

.. _flutter-sort-results:

Sort Results
~~~~~~~~~~~~

Sort the results using the :ref:`Realm Query Language <flutter-query-language>` 
SORT() operator in the ``query()`` method's argument.

.. literalinclude:: /examples/generated/flutter/quick_start_test.codeblock.query-realm-objects-with-sort.dart
   :language: dart

.. _flutter-write-operations:

Write Operations
----------------

Once you've opened a {+realm+}, you can create objects within it using a
:flutter-sdk:`write transaction block <realm/Realm/write.html>`.

.. _flutter-create-objects:

Create Objects
~~~~~~~~~~~~~~

To create a new ``Car``, instantiate an instance of the
``Car`` class and add it to the {+realm+} in a write transaction block:

.. literalinclude:: /examples/generated/flutter/quick_start_test.codeblock.create-realm-object.dart
   :language: dart

.. _flutter-update-objects:

Update Objects
~~~~~~~~~~~~~~

To modify a car, update its properties in a write transaction block:

.. literalinclude:: /examples/generated/flutter/quick_start_test.codeblock.update-realm-object.dart
   :language: dart

.. _flutter-delete-objects:

Delete Objects
~~~~~~~~~~~~~~

.. _flutter-delete-single-object: 

Delete a Single Object
++++++++++++++++++++++

Delete a car by calling the :flutter-sdk:`Realm.delete() <realm/Realm/delete.html>`
method in a write transaction block:

.. literalinclude:: /examples/generated/flutter/quick_start_test.codeblock.delete-one-realm-object.dart
   :language: dart

.. _flutter-delete-multiple-objects: 

Delete Multiple Objects
+++++++++++++++++++++++

Delete multiple cars with the :flutter-sdk:`Realm.deleteMany() 
<realm/Realm/deleteMany.html>` method in a write transaction block. 

.. literalinclude:: /examples/generated/flutter/quick_start_test.codeblock.delete-many-realm-objects.dart
   :language: dart
