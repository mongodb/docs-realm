.. _flutter-mongodb-realm-cloud:
.. _flutter-application-services:

===========================================
Application Services Overview - Flutter SDK
===========================================

.. toctree::
   :titlesonly:

   Connect to a Realm App </sdk/flutter/app-services/connect-to-app>

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

You can connect your client apps to the Atlas App Services
backend using the Flutter SDK. Backend functionality includes:

- :doc:`Connect to a Realm App </sdk/flutter/app-services/connect-to-app>`
- :doc:`Authenticate Users </sdk/flutter/users/authenticate>`

The Realm App Client
--------------------

To connect to your Atlas App Services backend, start with an
:flutter-sdk:`App <realm/App-class.html>` object.
This object provides all other functionality related to
the backend. Initialize an App with the Realm app ID, which you can
:ref:`find in the Realm UI <find-your-app-id>`.

.. seealso::

   To learn how to initialize the Realm App client, see
   :ref:`flutter-connect-to-backend`.


.. button:: Create an App Services Account
   :uri: https://www.mongodb.com/realm/register?tck=docs_CTA_realm_flutter


Authentication & User Management
--------------------------------

One of the most challenging aspects of client development is implementing a
robust and secure authentication system. With the SDKs,
however, you can use any of the App Services authentication providers with
minimal backend setup and client-side code. With the authentication APIs,
you can implement the following functionality:

- Create new user accounts
- User log in and log out
- Multiple users logged on at the same time on the same device
- Link user accounts from different providers
- Store custom data for a particular user

.. seealso::

   To learn how to set up authentication in your app, see
   :ref:`Authenticate Users <flutter-authenticate>`.

Device Sync
-----------

Device Sync adds data synchronization between a App Services backend and
client devices on top of all of the functionality of Realm Database.
When you use Realm Database with Sync, realms exist on device
just like when you only use Realm Database. However, changes to
the data stored in those realms synchronize between all client
devices through a backend App Services instance. That backend also stores
realm data in a cloud-based Atlas cluster running MongoDB.

.. seealso::

   To get started with Sync, see :ref:`Device Sync <flutter-sync>`.
