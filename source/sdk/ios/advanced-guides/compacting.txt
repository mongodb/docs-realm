.. _ios-client-compact-a-realm:

=========================
Compact a Realm - iOS SDK
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

The size of a {+client-database+} file is always larger than the total 
size of the objects stored within it. This architecture enables some of 
{+realm+}'s great performance, concurrency, and safety benefits. 

.. seealso::

   - :ref:`ios-client-threading` 
   - :ref:`ios-file-size`

{+backend-short+} writes new data within unused space tracked inside 
file. In some situations, unused space may comprise a significant 
portion of a {+realm+} file. If file size grows large enough to 
negatively impact performance, compact the {+realm+}. 

.. _ios-how-to-compact-a-realm:

Compact a Realm
~~~~~~~~~~~~~~~

Use :swift-sdk:`shouldCompactOnLaunch()<Structs/Realm/Configuration.html>` 
(Swift) or :objc-sdk:`shouldCompactOnLaunch <Classes/RLMRealmConfiguration.html>` 
(Objective-C) on a {+realm+}'s configuration object to compact a {+realm+}. 
Specify conditions to execute this method, such as:

- The size of the file on disk
- How much free space the file contains

.. important:: Compacting may not occur

   Compacting cannot occur while a {+realm+} is being accessed, 
   regardless of any configuration settings.

.. tabs-realm-languages::

   .. tab::
      :tabid: swift

      .. literalinclude:: /examples/generated/code/start/Compacting.codeblock.compacting.swift
        :language: swift

   .. tab::
      :tabid: objective-c

      .. literalinclude:: /examples/generated/code/start/Compacting.codeblock.compacting.m
        :language: objectivec

.. _ios-make-a-compacted-copy:

Make a Compacted Copy
~~~~~~~~~~~~~~~~~~~~~

You can save a compacted (and optionally :ref:`encrypted
<ios-encrypt-a-realm>`) copy of a {+realm+} to another file location
with the :swift-sdk:`Realm.writeCopy(toFile:encryptionKey:)
<Structs/Realm.html#/s:10RealmSwift0A0V9writeCopy6toFile13encryptionKeyy10Foundation3URLV_AG4DataVSgtKF>`
method. The destination file cannot already exist.

.. important::

   Avoid calling this method within a :ref:`write transaction
   <ios-write-transactions>`. If called within a write transaction, this
   method copies the absolute latest data. This includes any
   **uncommitted** changes you made in the transaction before this
   method call, which compromises the :ref:`atomicity
   <ios-acid-compliance>` of the transaction.

.. _ios-how-compacting-works:

How Compacting Works
~~~~~~~~~~~~~~~~~~~~

{+backend-short+} compacting works by:

1. Reading the entire contents of the {+realm+} file
2. Writing the contents to a new file at a different location
3. Replacing the original file

If the file contains a lot of data, this can be an expensive operation.

Best Practices
~~~~~~~~~~~~~~

Experiment with conditions to find the right balance of how often to 
compact a {+realm+} file. Because the operation can be 
expensive, don't compact every time you open a {+realm+}. Do compact 
often enough to prevent the file size from growing too large.

Summary
-------

- {+client-database+}'s architecture enables :ref:`threading-related benefits <ios-client-threading>`, 
  but can result in file size growth.

- Use compacting to manage file size growth.

- Define conditions for ``shouldCompactOnLaunch()`` to compact a {+realm+}.

- Compacting cannot occur if another process is accessing the {+realm+}.
