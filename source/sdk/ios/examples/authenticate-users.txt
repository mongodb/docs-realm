.. _ios-authenticate-users:

==================
Authenticate Users
==================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


.. _ios-anonymous-login:

Log In an Anonymous User
------------------------

If you have enabled :ref:`Anonymous authentication <anonymous-authentication>`
in the {+ui+}, users can immediately log into your app without providing any
identifying information. The following code shows how to do this:

.. literalinclude:: /examples/generated/code/start/Authenticate.codeblock.anonymous.swift
   :language: swift

.. _ios-email-password-login:

Log In an Email/Password User
-----------------------------

If you have enabled :ref:`Email/Password authentication <email-password-authentication>`,
you can log in using the following code:

.. literalinclude:: /examples/generated/code/start/Authenticate.codeblock.email-password.swift
   :language: swift

.. _ios-api-key-login:

Log In an API Key User
----------------------

If you have enabled :ref:`API Key authentication <api-key-authentication>`,
you can log in using the following code:

.. literalinclude:: /examples/generated/code/start/Authenticate.codeblock.api-key.swift
   :language: swift

.. _ios-custom-function-login:

Log In a Custom Function User
-----------------------------

If you have enabled the :doc:`Custom Function authentication provider
</authentication/custom-function>`, you can log in using the following
code:

.. literalinclude:: /examples/generated/code/start/Authenticate.codeblock.function.swift
   :language: swift


.. _ios-custom-jwt-login:

Log In a Custom JWT User
------------------------

If you have enabled the :doc:`Custom JWT authentication provider
</authentication/custom-jwt>`, you can log in using the following code:

.. literalinclude:: /examples/generated/code/start/Authenticate.codeblock.jwt.swift
   :language: swift

.. _ios-facebook-login:

Log In a Facebook User
----------------------

The :doc:`Facebook </authentication/facebook>` authentication provider
allows you to authenticate users through a Facebook app using their
existing Facebook account.

.. include:: /includes/note-enable-facebook-auth.rst

.. include:: /includes/note-facebook-profile-picture-url.rst

Follow the official :facebook:`Facebook Login for iOS Quickstart
<docs/facebook-login/ios?sdk=cocoapods>` to set up the authentication
flow for your application. In the login completion handler, create a
{+service-short+} Facebook credential with the logged in user's
:facebook:`access token string <docs/facebook-login/access-tokens>` and
log the user into your {+service-short+} app.

.. literalinclude:: /examples/generated/code/start/Authenticate.codeblock.facebook.swift
   :language: swift

.. _ios-google-login:

Log In a Google User
--------------------

.. important::
   
   To log a user in with their existing Google account, you must configure and
   enable the :ref:`Google authentication provider <google-authentication>` for
   your application.

Follow the official :google:`Google Sign-In for iOS Integration Guide
<identity/sign-in/ios/start-integrating>` to set up the authentication flow for
your application. In the sign-in completion handler, create a {+service-short+}
Google credential and log the user into your {+service-short+} app.

The value that you pass to the credential depends on whether or not you have
:ref:`enabled OpenID Connect <openIdConnect>` for the provider:

- If OpenID Connect is enabled, pass the ``id_token``
  :google:`included in the Google OAuth response
  <identity/sign-in/ios/backend-auth>` to :swift-sdk:`Credentials.googleId(token:)
  <Enums/Credentials.html#/s:10RealmSwift11CredentialsO8googleIdyACSS_tcACmF>`.

- If OpenID Connect is not enabled, pass the user's :google:`server auth code
  <identity/sign-in/ios/reference/Classes/GIDGoogleUser#serverauthcode>` to
  :swift-sdk:`Credentials.google(serverAuthCode:)
  <Enums/Credentials.html#/s:10RealmSwift11CredentialsO6googleyACSS_tcACmF>`.

.. literalinclude:: /examples/generated/code/start/Authenticate.codeblock.google.swift
   :language: swift

.. _ios-apple-login:

Log In an Apple User
--------------------

If you have enabled :ref:`Sign-in with Apple authentication
<apple-id-authentication>`, you can log in using the following code:

.. literalinclude:: /examples/generated/code/start/Authenticate.codeblock.apple.swift
   :language: swift

.. _ios-logout:

Log a User Out
--------------

Once logged in, you can log out:

.. include:: /includes/log-out-queries-in-progress.rst

.. literalinclude:: /examples/generated/code/start/Authenticate.codeblock.logout.swift
   :language: swift
