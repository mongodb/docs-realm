.. _ios-supported-property-types:

==================================
Supported Property Types - iOS SDK
==================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. tabs-realm-languages::

   .. tab::
      :tabid: swift

      You can use the following types to define your object model
      properties:

      .. list-table::
         :header-rows: 1
         :stub-columns: 1
      
         * - Type
           - Required
           - Optional
         * - Bool
           - ``@objc dynamic var value = false``
           - ``let value = RealmOptional<Bool>()``
         * - Int, Int8, Int16, Int32, Int64
           - ``@objc dynamic var value = 0``
           - ``let value = RealmOptional<Int>()``
         * - Float
           - ``@objc dynamic var value: Float = 0.0``
           - ``let value = RealmOptional<Float>()``
         * - Double
           - ``@objc dynamic var value: Double = 0.0``
           - ``let value = RealmOptional<Double>()``
         * - String
           - ``@objc dynamic var value = ""``
           - ``@objc dynamic var value: String? = nil``
         * - Data
           - ``@objc dynamic var value = Data()``
           - ``@objc dynamic var value: Data? = nil``
         * - Date
           - ``@objc dynamic var value = Date()``
           - ``@objc dynamic var value: Date? = nil``
         * - Decimal128
           - ``@objc dynamic var decimal: Decimal128 = 0``
           - ``@objc dynamic var decimalOpt: Decimal128?``
         * - :swift-sdk:`ObjectId <Classes/ObjectId.html>`
           - ``@objc dynamic var objectId = ObjectId()``
           - ``@objc dynamic var objectIdOpt: ObjectId?``
         * - :swift-sdk:`List <Classes/List.html>`
           - ``let value = List<Type>()``
         * - User-defined :swift-sdk:`Object <Extensions/Object.html>`
           - N/A: Must be optional
           - ``@objc dynamic var value: Class?``
      
      Additionally:
      - User-defined :swift-sdk:`Object <Extensions/Object.html>`- and 
        :swift-sdk:`EmbeddedObject <Extensions/EmbeddedObject.html>`-derived types
      - :swift-sdk:`Enum <Protocols.html#/s:10RealmSwift0A4EnumP>`

      You can use :swift-sdk:`RealmOptional <Classes/RealmOptional.html>` to
      represent integers, doubles, and other types as optional.

      ``CGFloat`` properties are discouraged, as the type is not
      platform independent.

   .. tab::
      :tabid: objective-c

      You can use the following types to define your object model
      properties:

      .. list-table::
         :header-rows: 1
         :stub-columns: 1
      
         * - Type
           - Required
           - Optional
         * - Bool
           - ``@property BOOL value;``
           - ``@property NSNumber<RLMBool> *value;``
         * - Int
           - ``@property int value;``
           - ``@property NSNumber<RLMInt> *value;``
         * - Float
           - ``@property float value;``
           - ``@property NSNumber<RLMFloat> *value;``
         * - Double
           - ``@property double value;``
           - ``@property NSNumber<RLMDouble> *value;``
         * - String
           - ``@property NSString *value;``
           - ``@property NSString *value;``
         * - Data
           - ``@property NSData *value;``
           - ``@property NSData *value;``
         * - Date
           - ``@property NSDate *value;``
           - ``@property NSDate *value;``

      Additionally:
      - Integral types ``int``, ``NSInteger``, ``long``, ``long long``
      - ``RLMDecimal128``
      - :objc-sdk:`RLMObjectId <Classes/RLMObjectId.html>`
      - User-defined :objc-sdk:`RLMObject<Classes/RLMObject.html>`- and 
        :objc-sdk:`RLMEmbeddedObject<Classes/RLMEmbeddedObject.html>`-derived types
      - :objc-sdk:`RLMArray <Classes/RLMArray.html>`

      ``CGFloat`` properties are discouraged, as the type is not
      platform independent.

