.. _flutter-intro:

================================
MongoDB Realm Flutter & Dart SDK
================================

.. toctree::
   :titlesonly:
   
   Realm SDK for Flutter Reference Manual <https://pub.dev/packages/realm>
   Realm SDK for Flutter APIs <https://pub.dev/documentation/realm/latest/realm/realm-library.html>
   Realm SDK for Dart APIs <https://pub.dev/documentation/realm_dart/latest/realm/realm-library.html>

.. versionadded:: 0.1.0+preview

.. include:: /includes/note-beta-feature.rst


The {+service+} Flutter SDK enables client applications written in 
`Dart <https://dart.dev/>`__ for the `Flutter <https://flutter.dev/>`__ and 
Dart desktop platforms to access data stored in local {+realms+}. 

.. note:: No Sync Support

   The preview SDK does not support {+sync+}.

.. _flutter_limitations:

Preview Limitations
-------------------
Because this is a preview version of the SDK, functionality is limited and there 
are specific configuration considerations:

- This preview requires a custom engine based on Flutter 2.0, with minimum changes. 
  For more information, see the 
  `runtime diff <https://github.com/realm/realm-dart/tree/preview/runtime>`__.

- You cannot use the ``realm_dart`` preview package with the Dart SDK 2.12 shipped 
  with Flutter 2.0. Flutter downloads a custom version of the Dart SDK,
  and this custom version has known problems loading native binaries. Instead, 
  use an official Dart SDK 2.12 installation and ensure it is in your PATH.

- This preview version enables working with a local-only (on device) Realm database
  in Flutter and Dart desktop. Realm Sync functionality is not implemented.

- Flutter Hot Reload is available when running on the Android x86 Emulator and 
  iOS Simulator.

- Running on a physical Android device always includes the libraries in 
  ``release`` mode.

- New projects for iOS can not be created with ``flutter create``. As a workaround, 
  use the `Realm Flutter and Dart Samples <https://github.com/realm/realm-dart-samples>`__ 
  and modify the sample project ``provider_shopper``.

Supported Realm Features
------------------------
The preview version of the SDK supports the following {+realm+} features:

- creating Realm objects
- retrieving Realm objects
- updating Realm objects
- querying, sorting, and filtering Realm objects
- implementing change notifications

Get Started
-----------
The Realm SDK package has a `Getting Started <https://pub.dev/packages/realm#getting-started>`__ 
section that provides the steps necessary to import Realm into a Flutter project 
and provides code snippets for writing to, and reading from, the {+realm+}.
