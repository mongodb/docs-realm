:template: product-landing
:hidefeedback: header
:noprevnext:

.. _react-native-intro:

======================
Realm React Native SDK
======================

.. toctree::
   :titlesonly:
   :hidden:

   Why Realm? </sdk/react-native/realm-database>
   Install Realm </sdk/react-native/install>
   Quick Start </sdk/react-native/quick-start>
   Bootstrap with Expo </sdk/react-native/bootstrap-with-expo>
   Realm Files </sdk/react-native/realm-files>
   Model Data </sdk/react-native/model-data>
   CRUD </sdk/react-native/crud>
   React to Changes </sdk/react-native/react-to-changes>
   Atlas App Services </sdk/react-native/app-services>
   Manage Users </sdk/react-native/manage-users>
   Sync Data </sdk/react-native/sync-data>
   Integration Guides </sdk/react-native/integrations>
   Test & Debug </sdk/react-native/test-and-debug/>
   SDK Telemetry </sdk/react-native/telemetry>
   API Reference </sdk/react-native/api-reference>
   Release Notes <https://github.com/realm/realm-js/releases>

Use the Realm React Native SDK to develop iOS and Android apps with
JavaScript or TypeScript.

.. kicker:: Learning Paths

Get Started with Realm React Native
-----------------------------------

.. card-group::
   :columns: 3
   :style: extra-compact

   .. card::
      :headline: Quick Start
      :cta: See Code Examples
      :url: https://www.mongodb.com/docs/realm/sdk/react-native/quick-start/
      :icon: /images/icons/branding_2022/Technical_ATLAS_Functions3x.png
      :icon-alt: Functions Icon

      Minimal-explanation code examples of how to work with Realm.

   .. card::
      :headline: Working Example App
      :cta: Explore an Example App
      :url: https://www.mongodb.com/docs/atlas/app-services/template-apps/
      :icon: /images/icons/branding_2022/Technical_REALM_Mobile3x.png
      :icon-alt: Realm Mobile Icon

      Learn from example by dissecting a working React Native client app that
      uses Realm with Device Sync.

   .. card::
      :headline: Guided Tutorial
      :cta: Follow the Tutorial
      :url: https://mongodb.com/docs/atlas/app-services/tutorial/react-native/
      :icon: /images/icons/branding_2022/General_CONTENT_Tutorial3x.png
      :icon-alt: Tutorial Icon

      Follow a guided tutorial to learn how to adapt the example app to
      create your own working app with Realm and Device Sync.

.. kicker:: What You Can Do

Develop Apps with Realm
-----------------------

Use open-source Realm to store data on a device. Use Device
Sync to keep data in sync with your MongoDB Atlas cluster and other
clients.

.. tabs::

  .. tab:: Use Realm Locally
      :tabid: local-realm

      .. container::

        Use open-source Realm to store data on a device.

        .. procedure::

          .. step:: Install the Realm React Native SDK

              Set up your project with React Native and Realm.
              To get started, :ref:`install the Realm React Native SDK <react-native-install>`.

          .. step:: Define an Object Schema

              Use JavaScript to idiomatically :ref:`define a Realm object schema <react-native-define-a-realm-object-schema>`.

          .. step:: Configure & Open a Realm

             You can configure your realm to do things
             like populate initial data on load, be encrypted, and more.
             To begin working with your data,
             :ref:`configure and open a realm <react-native-configure-realm>`.

          .. step:: Read and Write Data

              You can :ref:`create <react-native-create-objects>`, :ref:`read
              <react-native-read-objects>`, :ref:`update
              <react-native-update-objects>`, and :ref:`delete
              <react-native-delete-objects>` objects from a realm. Construct
              complex queries to :ref:`filter data in a realm
              <react-native-query-data>`.

          .. step:: React to Changes

              Realm's live objects mean that your data is always up-to-date.
              Register a change listener to :ref:`react to changes and perform logic like updating
              your UI <react-native-react-to-changes>`.

      .. image:: /images/illustrations/Spot_MauvePurple_Infrastructure_Tech_RealmApp2x.png
         :alt: Realm Mobile Illustration

  .. tab:: Sync Data Across Devices
      :tabid: device-sync

      .. container::

         Use Device Sync to keep data in sync with your MongoDB Atlas cluster and other
         clients.

         .. procedure::

            .. step:: Connect to an Atlas App Services App

               Configure :ref:`Device Sync in an App Services App <realm-sync-get-started>`.
               Define data access rules or use Development Mode to infer a schema
               from your client's data model.
               Then, :ref:`connect to the backend App from your React Native App <react-native-connect-to-mongodb-realm-backend-app>`.

            .. step:: Authenticate a User

               App Services provides access to custom JWT authentication,
               our built-in email/password provider, anonymous
               authentication, and popular
               authentication providers like Apple, Google, and Facebook.
               Use these providers to :ref:`authenticate a user in your client <react-native-authenticate-users>`.

            .. step:: Open a Synced Realm

               To get started syncing data, :ref:`open a synced realm <react-native-open-a-synced-realm>`.
               To determine what data a synced realm can read and write,
               :ref:`subscribe to a query <react-native-sync-subscribe-to-queryable-fields>`.

            .. step:: Read and Write Synced Data

               The APIs for reading and writing data
               are the same for both synced and local realms.
               Data that you read and write is automatically kept
               in sync with your Atlas cluster and other clients.
               Apps keep working offline and sync changes when a network connection
               is available.

      .. image:: /images/illustrations/Spot_AzureBlue_Mobile_Tech_RealmSync.png
         :alt: Realm Sync Illustration

  .. tab:: Build with Atlas App Services
      :tabid: app-services

      .. container::

         Use Atlas App Services in your React Native application with the Realm SDK.

         Call Serverless Functions
         ~~~~~~~~~~~~~~~~~~~~~~~~~

         To invoke serverless backend logic from your React Native client,
         :ref:`call Atlas Functions <react-native-call-a-function>`.

         Query MongoDB Atlas
         ~~~~~~~~~~~~~~~~~~~

         Query data stored in MongoDB directly from your client application code
         with :ref:`MongoDB Data Access <react-native-mongodb-remote-access>`.

         Authenticate Users
         ~~~~~~~~~~~~~~~~~~

         Authenticate users with built-in and third-party :ref:`authentication providers <react-native-authenticate-users>`.
         Access App Services with authenticated users.

      .. image:: /images/illustrations/Spot_MauvePurple_APIs_Tech_RealmApp.png
         :alt: App Services Illustration

  .. tab:: Use @realm/react
      :tabid: realm-react

      .. container::

         ``@realm/react`` is an npm package that provides an easy-to-use API to
         perform common Realm operations in your React Native app,
         such as querying or writing to a realm and listening to realm
         objects. ``@realm/react`` includes React context, providers, and hooks
         for working with Realm.

         Use ``@realm/react`` to manage a Realm  Database, Atlas App Services,
         and Atlas Device Sync.

      .. image:: /images/illustrations/Spot_MauvePurple_Logic_Tech_RealmApp2x.png
         :alt: Realm Mobile Illustration

.. kicker:: Essential Documentation

Recommended Reading
-------------------

.. card-group::
   :columns: 2
   :style: extra-compact

   .. card::
      :headline: JavaScript API Reference
      :cta: React Native Reference
      :url: https://www.mongodb.com/docs/realm-sdks/js/latest/
      :icon: /images/icons/branding_2022/General_ACTION_BestPractices3x.png
      :icon-alt: Realm Icon

      Explore generated reference docs for the React Native SDK.

   .. card::
      :headline: React Native Quick Start with Expo
      :cta: Explore the Quick Start
      :url: https://www.mongodb.com/docs/realm/sdk/react-native/quick-start-expo/
      :icon: /images/icons/expo_logo.svg
      :icon-alt: Expo Icon

      Build and deploy a React Native application quickly using an
      Expo template application with @realm/react.
