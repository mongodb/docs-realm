==========================
React to Changes - SwiftUI
==========================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _swiftui-update-ui-when-objects-change:

Observe an Object
-----------------

The Swift SDK provides the :swift-sdk:`@ObservedRealmObject 
<Structs/ObservedRealmObject.html>` property wrapper that invalidates a view 
when an observed object changes. You can use this property wrapper to 
create a view that automatically updates itself when the observed object
changes.

.. literalinclude:: /examples/generated/swiftui/PassObjectsToView.snippet.dog-detail-view.swift
   :language: swift

.. _swiftui-update-ui-when-query-results-change:

Observe Query Results
---------------------

The Swift SDK provides the :swift-sdk:`@ObservedResults <Structs/ObservedResults.html>`
property wrapper that lets you observe a collection of query results. You
can perform a quick write to an ObservedResults collection, and the view 
automatically updates itself when the observed query changes. For example,
you can remove a dog from an observed list of dogs using ``onDelete``.

.. literalinclude:: /examples/generated/swiftui/PassObjectsToView.snippet.implicitly-open-realm-and-pass-objects.swift
   :language: swift

.. seealso::

   For more information about the query syntax and types of queries that Realm
   supports, see: :ref:`Read - Swift SDK <swift-crud-read>` and :ref:`Filter 
   Data - Swift SDK <ios-filter-data>`.

.. _swiftui-react-to-login-state-changes:

Observe App State
-----------------

If your app uses Atlas Device Sync, you can observe the :swift-sdk:`App 
<Extensions/App.html>` object to react to login state changes. This enables
your app to perform operations while it has an ``app.currentUser``, or direct 
the user to log in if there is no ``app.currentUser``. 

Because Realm caches user credentials on the device, your app can work 
offline while it has an ``app.currentUser``.

.. literalinclude:: /examples/generated/swiftui/Authenticate.snippet.flexible-sync-content-view.swift
   :language: swift
