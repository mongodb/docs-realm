.. _ios-mongodb-realm-cloud:
.. _ios-application-services:

================================
Application Services - Swift SDK
================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


Overview
--------

{+service+} provides SDKs that help you connect your client apps to the {+service-short+} 
backend. The SDK provides the {+service+} functionality needed to 
authenticate users with any of the built-in :ref:`Authentication providers <authentication-providers>`, 
call backend :ref:`functions <functions>`, and directly access a 
:ref:`MongoDB database <mongodb-service>`. 

The Realm App Client
--------------------
When using the SDK to access the {+service-short+} backend, you start with a 
Realm App object. This object provides all other functionality related to 
MongoDB Realm. The ``App`` object is 
:ref:`initialized <ios-init-appclient>` with the Realm app ID, which you can 
:ref:`find in the Realm UI <find-your-app-id>`.

.. tip::

   To learn how to initialize the Realm App client, see
   :ref:`ios-init-appclient`.


Authentication & User Management
--------------------------------

One of the most challenging aspects of client development is implementing a 
robust and secure authentication system. With the {+service-short+} SDKs, however, you 
can use any of the {+service+} authentication providers with very minimal backend 
setup or client-side code required. With the authentication APIs, you can 
implement the following functionality:

- Creation of new user accounts
- User log-in and log-out
- Multiple users logged on at the same time on the same device 
- Linking user accounts from different providers 
- Providing custom user data 

.. tip::

   To learn how to set up authentication with different providers, see
   :ref:`ios-authenticate-users`.

   To learn how to manage multiple users, see :ref:`ios-multi-user-applications`.

   To learn how to link user accounts, see :ref:`ios-link-user-identities`.

   To learn how to provide custom user data, see :ref:`ios-custom-user-data`.

Calling Functions
-----------------
:ref:`Realm functions <functions>` enable you to define and execute server-side 
logic for your application. You can call these functions from your client applications
via the {+service+} SDKs. These server-side functions can run under the context 
of the authenticated user, and thus honor the rules, roles, and permissions that 
you have assigned to your collections.

By using Realm functions, you provide a secure way for a variety of client 
applications to share complex functionality without having to reproduce that 
logic client-side. 

.. tip::

   To learn how to call functions, see :ref:`Call a Function <ios-call-a-function>`.

Accessing MongoDB
-----------------
The Realm SDKs include APIs for accessing a MongoDB Atlas instance directly. 
With these APIs, you can perform all of the standard CRUD operations from your 
client. For security, you configure server-side :ref:`data access rules <mongodb-rules>` 
to dynamically determine read & write permissions for every object that 
is accessed.

.. tip::

   To learn how to use the MongoDB APIs, see :ref:`Query MongoDB <ios-mongodb-data-access>`.
