.. _ios-init-appclient:
.. _ios-connect-to-a-mongodb-realm-backend-app:

====================================================
Connect to an Atlas App Services Backend - Swift SDK
====================================================

.. meta:: 
   :description: Connect to Atlas App Services from the Atlas Device SDK. Specify configuration details to customize network access.
   :keywords: code example

.. facet::
  :name: genre
  :values: reference

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The App client is the interface to the App Services backend. It
provides access to the :ref:`authentication functionality
<ios-authenticate-users>`, :ref:`functions <ios-call-a-function>`, 
:ref:`querying a MongoDB Atlas data source <ios-mongodb-data-access>`, 
and :ref:`Device Sync <ios-sync-changes-between-devices>`.

.. note:: Apple Privacy Manifest

   The SDK's Apple privacy manifest does not cover connecting to Atlas, or
   any usage of data through the App client. If your app connects to App
   Services, and you intend to distribute it through the Apple App Store, 
   you may need to provide your own disclosures in your app's Apple privacy 
   manifest.

   For more information, refer to :ref:`ios-apple-privacy-manifest`.

.. _ios-access-the-app-client:

Access the App Client
---------------------

Pass the App ID for your App, which you can :ref:`find in the App Services UI
<find-your-app-id>`.

.. literalinclude:: /examples/generated/code/start/RealmApp.snippet.init-realm-app-client.swift
   :language: swift

.. _ios-app-client-configuration:

Configuration
-------------

You can pass a configuration object to ``App``:

.. literalinclude:: /examples/generated/code/start/RealmApp.snippet.realm-app-config.swift
   :language: swift

You can create multiple App client instances to connect to multiple
Apps. All App client instances that share the same App ID use the same 
underlying connection.

.. important:: Changing an App Config After Initializing the App

   Starting with Swift SDK version 10.46.0, you can change a ``baseURL``
   in the App config and the App client uses the new ``baseURL``. In Swift
   SDK versions 10.45.3 and earlier, when you initialize the App client, 
   the configuration is cached internally. Attempting to close an App and 
   then re-open it with a changed configuration within the same process has 
   no effect. The client continues to use the cached configuration.

Sync Connection Sharing
~~~~~~~~~~~~~~~~~~~~~~~

.. versionadded:: 10.41.0

You can set the ``enableSessionMultiplexing`` bool on the 
:swift-sdk:`AppConfiguration <Extensions/AppConfiguration.html>` to specify
whether the Realm Swift SDK should open a connection to the server for each 
synced realm, or share a connection to the server for all synced realms.

If you do not specify a value for this bool, Realm defaults to sharing a 
single connection per App Services user for all synced realms.

.. literalinclude:: /examples/generated/code/start/RealmApp.snippet.app-config-enable-session-multiplexing.swift
   :language: swift

Sync Timeout Options
~~~~~~~~~~~~~~~~~~~~

.. versionadded:: 10.41.0

You can set various sync timeout options on the 
:swift-sdk:`AppConfiguration <Extensions/AppConfiguration.html>`. The 
``syncTimeouts`` property can accept a ``SyncTimeoutOptions`` object to
override default values for these settings.

For a complete list of the available timeout settings and their definitions, 
refer to :objc-sdk:`RLMSyncTimeoutOptions <Classes/RLMSyncTimeoutOptions.html>`.

.. literalinclude:: /examples/generated/code/start/RealmApp.snippet.app-config-sync-timeout.swift
   :language: swift

.. _swift-connect-to-specific-server:

Connect to a Specific Server
----------------------------

By default, Atlas Device SDK connects to Atlas using the global ``baseURL``
of ``https://services.cloud.mongodb.com``. In some cases, you may want to
connect to a different server:

- Your App Services App uses :ref:`local deployment <local-deployment>`, and 
  you want to connect directly to a local ``baseURL`` in your region.
- You want to connect to an :ref:`Edge Server instance <edge-server-connect-from-client>`.

You can specify a ``baseURL`` in the 
:swift-sdk:`AppConfiguration <Extensions/AppConfiguration.html>`:

.. literalinclude:: /examples/generated/code/start/RealmApp.snippet.custom-base-url.swift
   :language: swift

Connect to a Different Server During Runtime
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. versionadded:: 10.50.0

In some cases, you might want to change the ``baseURL`` while the app is
running. For example, you might want to roam between Edge Servers, or
move from an App Services connection to an Edge Server connection. To change
the ``baseURL`` during runtime, call the ``app.updateBaseUrl(to: )`` method:

.. literalinclude:: /examples/generated/code/start/RealmApp.snippet.change-base-url.swift
   :language: swift

This API is experimental, so you must use the experimental import in the file
where you want to use this API:

.. literalinclude:: /examples/generated/code/start/RealmApp.snippet.import-experimental.swift
   :language: swift

If you want to change the ``baseURL`` after you have logged in a user and
have opened a synced database, the app must perform a 
:ref:`client reset <ios-client-reset>`. Perform these steps in your code:

1. :ref:`Pause the Sync session <swift-suspend-sync-session>`.
2. Update the ``baseURL`` by calling the ``app.updateBaseUrl(to: )`` method.
3. Authenticate and log the user in again with the new ``baseURL``.
4. Open a synced database pulling data from the new server.

Both the server and the client must be online for the user to authenticate and
connect to the new server. If the server is not online or the client does not
have a network connection, the user cannot authenticate and open the database.

Supported Operating Systems
---------------------------

.. include:: /includes/swift-supported-operating-systems.rst
