.. _ios-tvos:

==============
Build for tvOS
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

This page details considerations when using {+client-database+} on tvOS.

.. seealso::

   :ref:`ios-install`

Avoid Storing Important User Data
---------------------------------

Avoid storing important user data in a {+realm+} on tvOS. Instead, it's
best to treat {+service-short+} as a rebuildable cache. 

.. note::

   The reason for this has to do with where {+service-short+} writes its
   :ref:`Realm files <ios-realm-file>`. On other Apple platforms,
   {+service-short+} writes its Realm files to the "Documents"
   directory. Because tvOS restricts writes to that directory, the
   default Realm file location on tvOS is instead ``NSCachesDirectory``.
   tvOS can purge files in that directory at any time, so reliable
   long-term persistence is not possible. For cloud-backed persistence
   on tvOS, consider using :ref:`{+sync+}
   <ios-sync-changes-between-devices>`.

You can also use {+service-short+} as an initial data source by
:ref:`bundling prebuilt Realm files <ios-bundle-a-realm>` in your app.
Note that the :apple:`App Store guidelines <tvos/submit/>` limit your
app size to 4GB.

.. tip::

   Browse our :github:`tvOS examples
   <realm/realm-swift/tree/master/examples/tvos>` for sample tvOS apps
   that demonstrate how to use {+service-short+} as an offline cache.

Share Realm Files with TV Services Extensions
---------------------------------------------

To share a :ref:`Realm file <ios-realm-file>` between a tvOS app and a
TV services extension such as :apple:`Top Shelf
<design/human-interface-guidelines/tvos/overview/top-shelf/>`, use the
``Library/Caches/`` directory in the shared container for the
application group:

.. literalinclude:: /examples/generated/code/start/OpenCloseRealm.codeblock.tvos-share-path.swift
   :language: swift
