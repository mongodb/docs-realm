.. _ios-call-a-function:

===========================
Call a Function - Swift SDK
===========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _ios-call-a-function-by-name:

Call a Function by Name
-----------------------

Consider a :ref:`Realm function <functions>` named ``concatenate`` that 
takes two arguments, concatenates them, and returns the result:

.. code-block:: javascript

   // concatenate: concatenate two strings
   exports = function(a, b) {
     return a + b;
   };

To execute a function from the iOS Client SDK, use the ``functions``
object on the currently logged-in user.

The ``functions`` object has dynamic members corresponding to functions.
In this case, ``functions.concatenate()`` refers to the ``concatenate`` 
function. Pass a ``BSONArray`` of arguments. The trailing closure is the 
completion handler to call when the function call is complete. This handler 
is executed on a non-main global ``DispatchQueue``.

.. tabs-realm-languages::
   
   .. tab::
      :tabid: swift

      .. literalinclude:: /examples/generated/code/start/Functions.codeblock.call-a-function.swift
         :language: swift

   .. tab::
      :tabid: objective-c

      .. literalinclude:: /examples/generated/code/start/Functions.codeblock.call-a-function.m
         :language: objectivec

Async/Await Call a Function
---------------------------

.. versionadded:: 10.16.0

If you're using Swift 5.5 with an iOS target of 15.0 or higher, you can use 
the async/await versions of the ``User.function`` methods.

.. literalinclude:: /examples/generated/code/start/Functions.codeblock.async-call-a-function.swift
   :language: swift
