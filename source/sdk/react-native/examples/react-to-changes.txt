.. _react-native-react-to-changes:

===================================
React to Changes - React Native SDK
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _react-native-register-a-realm-change-listener:
.. _react-native-realm-listener:

Register a Realm Change Listener
--------------------------------

To register a change listener for an entire {+realm+}, pass a callback function
to the realm's :js-sdk:`addListener() <Realm.html#addListener>` method.
{+client-database+} calls the listener asynchronously whenever an operation
adds, changes, or removes objects in the {+realm+}.

To remove a realm listener, pass the callback to the realm's :js-sdk:`removeListener() <Realm.Collection.html#removeListener>` method.

.. tip:: Use Object & Collection Listeners for Change Details
   
   {+client-database+} does not pass any information about what changed to
   {+realm+} listener callback functions. If you need to know more information
   about what changed in an object or collection, use :ref:`object listeners
   <react-native-object-listener>` and :ref:`collection listeners
   <react-native-collection-listener>`.

.. literalinclude:: /examples/generated/node/react-to-changes.codeblock.react-to-changes-register-change-listener.js
  :language: javascript

.. _react-native-register-a-collection-change-listener:
.. _react-native-collection-listener:

Register a Collection Change Listener
-------------------------------------

To register a change listener for a collection of {+service-short+} objects,
pass a callback function to the collection's :js-sdk:`addListener()
<Realm.Collection.html#addListener>` method. {+client-database+} calls the
listener asynchronously when it's registered as well as whenever an operation
adds, changes, or removes objects in the collection.

To remove a collection listener, pass the callback to the collection's :js-sdk:`removeListener() <Realm.Object.html#removeListener>` method.

.. important:: Order Matters
   
   In collection notification handlers, always apply changes in the following
   order: deletions, insertions, then modifications. Handling insertions before
   deletions may result in unexpected behavior.

.. literalinclude:: /examples/generated/node/react-to-changes.codeblock.react-to-changes-register-collection-change-listener.js
  :language: javascript

.. _react-native-register-an-object-change-listener:
.. _react-native-object-listener:

Register an Object Change Listener
----------------------------------

To register a change listener on a specific {+service-short+} object, pass a
callback function to the object's :js-sdk:`addListener()
<Realm.Object.html#addListener>` method. {+client-database+} calls the listener
if any of the object's properties change or if someone deletes the object.

To remove an object listener, pass the callback to the object's
:js-sdk:`removeListener() <Realm.html#removeListener>` method.

.. literalinclude:: /examples/generated/node/react-to-changes.codeblock.react-to-changes-register-realm-object-change-listener.js
  :language: javascript

.. _react-native-remove-all-change-listeners:

Remove All Change Listeners
---------------------------

To remove **all** listeners on a given realm, object, or collection instance,
call the instance's ``removeAllListeners()`` function:

- :js-sdk:`Realm.removeAllListeners() <Realm.html#removeAllListeners>`
- :js-sdk:`Realm.Collection.removeAllListeners() <Realm.Collection.html#removeAllListeners>`
- :js-sdk:`Realm.Object.removeAllListeners() <Realm.Object.html#removeAllListeners>`

.. literalinclude:: /examples/generated/node/react-to-changes.codeblock.react-to-changes-remove-all-listeners.js
  :language: javascript

Registering and Removing Listeners From Your React Components
-------------------------------------------------------------
To learn how to register and remove listeners within your application, check out
the documentation on how to :ref:`use change listeners in React components <react-native-use-listeners-in-components>`.
