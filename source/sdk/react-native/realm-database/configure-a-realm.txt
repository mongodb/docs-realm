.. _react-native-configure-reaalm:

=======================================
Configure a Realm - React Native SDK
=======================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. TODO: Set up redirect from open-a-realm page to new configure-a-realm page.

The ``@realm/react`` library uses `React Context objects <https://reactjs.org/docs/context.html>`__
to create and configure realms. You can access realms with React hooks.

``@realm/react`` automatically opens and closes realms for you. To manage how it
does so, you need to pass props to the ``@realm/react`` Context Providers:

- ``<AppProvider>``
- ``<UserProvider>``
- ``<RealmProvider>``

For Flexible Sync realms, you need all three Providers, nested in the order above.
For local-only realms, you only need the ``<RealmProvider>``.

Create a Context Object with ``createRealmContext``
---------------------------------------------------
https://github.com/realm/realm-js/tree/master/packages/realm-react#createrealmcontext

Create an indext file in the directory where your Realm models live.

.. literalinclude:: /examples/generated/react-native/js/index.snippet.create-realm-context.js
   :language: javascript

Open more than one realm
------------------------

https://github.com/realm/realm-js/tree/master/packages/realm-react#multiple-realms

Configure a realm with ``<RealmProvider>``
------------------------------------------
https://github.com/realm/realm-js/tree/master/packages/realm-react#realmprovider

``<RealmProvider>`` is a wrapper for your application that enables hooks.

Sync vs non-sync

Sync requires <AppProvider> and <UserProvider> parent providers.

Open an In Memory Realm
-----------------------

.. include:: /includes/js-open-an-in-memory-realm.rst

.. seealso:: Additional Ways to Configure a Realm

   - Learn how to :ref:`Open a Synced Realm <react-native-open-a-synced-realm>`
   - Learn how to :ref:`Encrypt a Realm <react-native-encrypt-a-realm>`
   - Learn how to :ref:`Bundle a Realm <react-native-bundle-a-realm>`

.. include:: /includes/js-close-a-realm.rst

Key Concept: Realm Files
------------------------

Realm Database stores a binary encoded version of every object and type in a
realm in a single ``.realm`` file. The file is located at a specific path that
you define when you open the realm.

.. tip:: Implement Compacting in Your Production Application

   Every production application should implement a ``shouldCompactOnLaunch`` 
   callback to periodically reduce the realm file size.

.. note:: Auxiliary Realm Files
   
   Realm Database creates additional files for each realm.
   To learn more about these files, see :ref:`Realm Database Internals <react-native-realm-database>`.

.. warning:: Use Caution When Deleting Realm Files
   
   In some circumstances, such as a client reset scenario, you might need to
   delete a realm file and its auxiliary files.
   
   If you delete a realm file or any of its auxiliary files while one or
   more instances of the realm are open, you might corrupt the realm or
   disrupt :ref:`sync <sync>`.
   
   You may safely delete these files when all instances of a realm are
   closed. Before you delete a realm file, make sure that you back up any
   important objects as you will lose all unsynced data in the realm.
