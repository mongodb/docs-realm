.. _react-native-client-quick-start-expo:

========================================
Quick Start with Expo - React Native SDK
========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

The :github:`Realm Expo template <expo/examples/tree/master/with-realm>`
provides a fully working React Native application that you can use to bootstrap
your app development project with Realm. This documentation covers how to
initialize, build and run the template on both Android and iOS, and the template's
file structure and core features. 


Prerequisites
-------------
- `Node.js version 12 LTS or greater <https://nodejs.org/en/about/releases/>`_


Initialize the Template
-----------------------

Before you initialize the template, install the `expo cli
<https://docs.expo.dev/workflow/expo-cli/>`_ by running the following command:

.. code-block:: shell
  
   npm install -g expo-cli

Use ``expo init``  with the flag ``-t @realm/expo-template-ts`` to initialize a
React Native application using the Realm Expo template. 

Run the following command in your terminal: 

.. code-block:: shell
  
   expo init MyAwesomeRealmApp -t @realm/expo-template-ts

Explore The File Structure
--------------------------

The relevant files are as follows:

.. cssclass:: config-table
.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - File
     - Purpose

   * - Task.ts
     - A typescript file that defines a Task :ref:`object schema
       <react-native-object-schemas>`, and returns a ``RealmProvider`` and the
       ``Realm React Hooks``.
      
   * - App.ts
     - The entry point to the application, which contains methods to create,
       update, and delete tasks. The ``RealmProvider`` component wraps around
       the ``App`` component, providing your entire application with access to
       the {+realm+}.

   * - TaskList.tsx
     - A React component that gets a list of Task objects from the {+realm+} and renders each object as a TaskItem component.

   * - TaskItem.tsx
     - A React component that displays the task's description, a checkbox to
       toggle the task's completion status, and a button to delete the task.

Build and Run the Application
-----------------------------

To run your application on an :android:`Android emulator <studio/run/emulator>`,
run the following command from your application root:

.. code-block:: shell
   
   npm run android

To run your application on an :apple:`iOS simulator
<documentation/xcode/running-your-app-in-the-simulator-or-on-a-device>`, run the
following command from your application root:

.. code-block:: shell
   
   npm run ios

When the application builds, you will see something similar to the following image:

.. image:: /images/realm-expo-template.png
   :alt: Realm Expo Template on an iOS Simulator
   :width: 350px