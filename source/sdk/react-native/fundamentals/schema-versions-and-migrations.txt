.. _react-native-schema-versions-and-migrations:

===============================================
Schema Versions & Migrations - React Native SDK
===============================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. important:: Migrations Apply to Local Realms Only
   
   Migrations only apply to {+realm+}s that are not synced through {+service+}.
   Synced {+realm+}s do not have schema versions and automatically migrate
   objects to the latest schema.
   
   Synced {+realm+}s only support additive schema changes. Destructive changes
   require a client reset.

.. _react-native-schema-version:

Schema Version
--------------

A **schema version** identifies the state of a :ref:`{+realm+} schema
<react-native-realm-schema>` at some point in time. {+client-database+} tracks the
schema version of each {+realm+} and uses it to map the objects in each
{+realm+} to the correct schema.

Schema versions are ascending integers that you can optionally include
in the {+realm+} configuration when you open a {+realm+}. If a client
application does not specify a version number when it opens a {+realm+} then
the {+realm+} defaults to version ``0``.

.. important:: Increment Versions Monotonically
   
   :ref:`Migrations <react-native-migrations>` must update a {+realm+} to a
   higher schema version. {+client-database+} will throw an error if a client
   application opens a {+realm+} with a schema version that is lower than
   the {+realm+}'s current version or if the specified schema version is the
   same as the {+realm+}'s current version but includes different
   :ref:`object schemas <react-native-object-schemas>`.

.. _react-native-migrations:

Migrations
----------

A **migration** is a function that updates a {+realm+} and any objects it
contains from one :ref:`schema version <react-native-schema-version>` to a newer
version. Migrations give you the flexibility to change your object schemas over
time to accommodate new features and refactors.

Whenever you open an existing {+realm+} with a schema version greater than the
{+realm+}'s current version, Realm runs a migration function that you define.
The function has access to the {+realm+}'s version number and incrementally
updates objects in the {+realm+} to conform to the new schema.

{+service+} automatically migrates certain changes, such as new and deleted
properties, but does not automatically set values for new properties unless the
updated object schema specifies a default value. You can define additional logic
in the migration function to further customize property values.

.. tip:: Learn How to Modify a Schema
   
   To learn how to modify your app's Realm object schemas with the React Native
   SDK, see :ref:`Modify an Object Schema <react-native-modify-an-object-schema>`.
