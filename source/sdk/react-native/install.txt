.. _react-native-install:

==============================
Install Realm for React Native
==============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The Realm React Native SDK enables development of `React
Native <https://facebook.github.io/react-native/>`__
applications using the JavaScript and `TypeScript
<https://www.typescriptlang.org/>`__ languages. React Native
enables you to build cross-platform iOS and Android apps
with a single codebase using the `React
<https://reactjs.org/>`__ framework.

Prerequisites
-------------

Before getting started, ensure your development environment
meets the following prerequisites:

- Follow the `official React Native CLI Quickstart instructions <https://reactnative.dev/docs/environment-setup>`__ to set up your environment.
- React Native v0.64.0 or later. Please consult the `compatibility chart <https://github.com/realm/realm-js/blob/master/COMPATIBILITY.md>`__ to determine which version of Realm is compatible.

.. important:: Using Realm with Expo

   `Expo <https://docs.expo.dev/>`__ now supports Realm with the Expo SDK version
   44. To use Realm with Expo, upgrade to `Expo SDK version 44
   <https://docs.expo.dev/workflow/upgrading-expo-sdk-walkthrough/>`__.  Consult
   the `compatibility chart
   <https://github.com/realm/realm-js/blob/master/COMPATIBILITY.md>`__ to
   determine which version of the Expo SDK is compatible Realm.

.. note:: Realm JS version 10.6.0 Supports Mac Catalyst

   For `React Native version 0.64 and below
   <https://reactnative.dev/versions>`__, you must take additional steps  to
   :doc:`build your application when using Mac Catalyst
   </sdk/react-native/integrations/mac-catalyst>`.

Installation
------------

Select the tab below that corresponds to your React Native
version. Follow the steps to create a React Native project
and add the Realm React Native SDK to it.

.. tabs::

   .. tab:: React Native v.60+
      :tabid: rn-v-60-plus

      .. procedure::

         .. step:: Create a React Native Project


            Create your React Native project with the following
            command:

            .. code-block:: bash

               npx react-native init MyRealmApp

            Change to the project directory that the previous command
            just created:

            .. code-block:: bash

               cd MyRealmApp

         .. step:: Install Realm with npm

            In your React Native project directory, add Realm to your
            project with the following command:

            .. code-block:: bash

               npm install realm

         .. step:: Enable Hermes (optional)

            .. note::

               To use Hermes, your app must use Realm v11 or later and React Native 0.70.0 or later

            Realm supports React Native's mobile-optimized JavaScript
            engine, Hermes. By default, new apps created with the React
            Native CLI already have Hermes enabled.

            We recommend that you use Hermes with Realm. However, Realm
            also supports the :apple:`JavaScriptCore (JSC) engine
            <documentation/javascriptcore>` if your app requires it.

            Existing apps that currently use JSC can enable Hermes
            separately for Android and iOS. To learn how, see the `Using
            Hermes <https://reactnative.dev/docs/hermes>`_ guide in the
            React Native docs.

         .. step:: Resolve CocoaPods Dependencies

            For the iOS app, fetch the CocoaPods dependencies with
            the following commands from your React Native project
            directory:

            .. code-block:: bash

               cd ios && pod install && cd ..

            This downloads the Realm libraries and regenerates the
            project ``.xcworkspace`` file that you can work with in
            Xcode to run your application.


         .. step:: Enable TypeScript (optional)


            .. include:: /includes/react-native-enable-typescript.rst

         .. step:: Install the @realm/react Library

            :npm:`@realm/react <package/@realm/react>` is an npm package that provides an easy-to-use API to perform
            common Realm operations, such as querying or writing to a realm
            and listening to realm objects.

            ``@realm/react`` helps you avoid creating boilerplate code, such as creating
            your own listeners and state management. ``@realm/react`` provides access to
            Realm through a set of hooks that update React state when the realm data changes. This means that components using these hooks
            will re-render on any changes to data in the realm.

            .. include:: /includes/note-realmreact-version-requirements-for-realmjs.rst

            In your React Native project directory, add ``@realm/react`` to your project with the following command:

            .. code-block:: shell

               npm install @realm/react

         .. step:: Run the App


            .. include:: /includes/react-native-run-the-app.rst


   .. tab:: Older React Native Versions
      :tabid: rn-pre-v-60

      .. note:: @realm/react Version Requirement
         
         The :npm:`@realm/react <package/@realm/react>` library requires react-native version ``>= 0.59``. If you are developing using older versions of React Native, you can use Realm JS without ``@realm/react``. Since the React Native SDK documentation makes heavy use of the ``@realm/react`` package, you may want to refer to the :ref:`Node.js SDK documentation <node-intro>`

      .. procedure::

         .. step:: Create a React Native Project


            Create your React Native project with the following
            command:

            .. code-block:: bash

               react-native init MyRealmApp

            Change to the project directory that the previous command
            just created:

            .. code-block:: bash

               cd MyRealmApp


         .. step:: Install Realm Using NPM


            In your React Native project directory, add Realm to your
            project with the following command:

            .. code-block:: bash

               npm install realm


         .. step:: Link the Realm Native Module


            In your React Native project directory, link the Realm
            native module to your project with the following command:

            .. code-block:: bash

               react-native link realm


         .. step:: Confirm the Link Step (Android)


            For Android development, confirm that the link step
            correctly added the Realm module to the Gradle
            configuration files. In some versions, React Native has
            been known to fail to link Realm properly. If this
            happens, you can link Realm manually by adding any
            missing lines below to the corresponding files.

            First, ensure the ``android/settings.gradle`` file
            includes Realm and specifies Realm's project directory:

            .. code-block:: text
               :emphasize-lines: 2-3

               rootProject.name = 'MyRealmApp'
               include ':realm'
               project(':realm').projectDir = new File(rootProject.projectDir, '../node_modules/realm/android')
               apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
               include ':app'

            Second, ensure the ``android/app/build.gradle`` file's
            ``dependencies`` section declares Realm as a dependency:

            .. code-block:: text
               :emphasize-lines: 2

               dependencies {
                   implementation project(':realm')
                   implementation fileTree(dir: "libs", include: ["*.jar"])
                   implementation "com.facebook.react:react-native:+"  // From node_modules
                   // ...
               }

            Finally, ensure the ``MainApplication.java`` file imports
            the ``RealmReactPackage`` and instantiates it in its
            packages list.

            .. code-block:: java
               :emphasize-lines: 1, 8

               import io.realm.react.RealmReactPackage; // Add this import.

               public class MainApplication extends Application implements ReactApplication {
                   @Override
                   protected List<ReactPackage> getPackages() {
                       return Arrays.<ReactPackage>asList(
                           new MainReactPackage(),
                           new RealmReactPackage() // Add this line.
                       );
                   }
                   // ...
               }


         .. step:: Enable TypeScript (optional)


            .. include:: /includes/react-native-enable-typescript.rst


         .. step:: Run the App


            .. include:: /includes/react-native-run-the-app.rst

Import Realm
------------

Add the following line to the top of your source files where
you want to use Realm:

.. code-block:: typescript

   import Realm from "realm";
