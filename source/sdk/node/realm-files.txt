===================================
Work with Realm Files - Node.js SDK
===================================

.. toctree::
   :titlesonly:

   Open & Close a Realm </sdk/node/realm-files/open-and-close-a-realm>
   Reduce Realm File Size </sdk/node/realm-files/compact-realm>
   Bundle a Realm </sdk/node/realm-files/bundle>
   Encrypt a Realm </sdk/node/realm-files/encrypt>

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Realms are the core data structure used to organize data in Realm Database. At
its core, a realm is a collection of the objects that you use in your
application, called Realm objects, as well as additional metadata that describe
the objects.

.. _node-realm-file:

Realm Files
-----------

Realm stores a binary encoded version of every object and type in a
realm in a single ``.realm`` file. The file is located at a specific path that
you define when you open the realm.

.. tip:: Implement Compacting in Your Production Application

   Every production application should implement a ``shouldCompactOnLaunch`` 
   callback to periodically reduce the realm file size.

.. note:: Auxiliary Realm Files
   
   Realm creates additional files for each realm.
   To learn more about these files, see :ref:`Realm Internals
   <node-realm-database>`.

.. warning:: Use Caution When Deleting Realm Files
   
   In some circumstances, such as a client reset scenario, you might need to
   delete a realm file and its auxiliary files.
   
   If you delete a realm file or any of its auxiliary files while one or
   more instances of the realm are open, you might corrupt the realm or
   disrupt :ref:`sync <sync>`.
   
   You may safely delete these files when all instances of a realm are
   closed. Before you delete a realm file, make sure that you back up any
   important objects as you will lose all unsynced data in the realm.

.. _node-in-memory-realm:

In-Memory Realms
~~~~~~~~~~~~~~~~

You can also open a realm entirely in memory, which will not create a ``.realm``
file or its associated auxiliary files. Instead the SDK stores objects in memory
while the realm is open and discards them immediately when all instances are
closed.
