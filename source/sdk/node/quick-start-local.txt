.. _node-client-quick-start-local:

=========================
Quick Start - Node.js SDK
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

This page contains information to quickly get {+client-database+}
integrated into your app.

.. important::

   If you will be using :ref:`Sync <sync>` and other backend features of 
   {+service-short+} in your app, see :ref:`<node-client-quick-start>`.

.. _node-quickstart-local-import-realm:

Import Realm
------------
At the top of your source files where you want to use {+service+}, add
the following line to import the SDK.

.. literalinclude:: /examples/generated/node/quickstart-local.codeblock.quickstart-local-import-realm.js
  :language: javascript

.. _node-quickstart-local-define-an-object-model:

Define Your Object Model
------------------------
Your application's :ref:`object model <node-object-schemas>` defines the data
that you can store within {+client-database+}. 

To define a Realm object type, create a schema object that specifies the type's
``name`` and ``properties``. The type name must be unique among object types in
a {+realm+}. For details on how to define specific properties, see :ref:`Define
Object Properties <node-define-a-property>`.

.. example::

    The following code shows how to define an object model for a ``Task``
    object. In this example, the ``primaryKey`` is the ``_id`` of type ``int``.
    Another common type used for primary keys is :js-sdk:`ObjectId
    <Realm.Object.html#objectId>`.  The ``name`` field is required. The
    ``status`` is optional, denoted by the question mark immediately after the
    data type.
    
   .. literalinclude:: /examples/generated/node/quickstart-local.codeblock.quickstart-local-define-an-object-model.js
     :language: javascript

.. _node-quickstart-local-open-a-realm:


Open a Realm
------------
To open a local (non-synced) {+realm+}, pass a :js-sdk:`Realm.Configuration
<Realm.html#~Configuration>` object to either :js-sdk:`Realm.open()
<Realm.html#.open>` or :js-sdk:`new Realm() <Realm.html>`.

.. literalinclude:: /examples/generated/node/quickstart-local.codeblock.quickstart-local-open-a-realm.js
  :language: javascript

.. _node-quickstart-local-create-realm-objects:

Create Realm Objects
--------------------

Once you have opened a {+realm+}, you can create :ref:`objects
<node-object-types>` in it. All writes must occur within a :ref:`Write
transaction <node-write-transactions>`.

.. example::

    In the following example, two tasks are created. One task with a name of "go
    grocery shopping" and another with the name of "go exercise". Both tasks
    have a status of "Open".
    
   .. literalinclude:: /examples/generated/node/quickstart-local.codeblock.quickstart-local-create-realm-objects.js
     :language: javascript

Find, Sort, and Filter Objects
------------------------------
The following code demonstrates how to:

- Query for all instances of the "Task" object type.
- Filter the query to retrieve only the tasks that are "Open".
- Sort the tasks by the name in an ascending order.

.. literalinclude:: /examples/generated/node/quickstart-local.codeblock.quickstart-local-find-sort-and-filter-objects.js
  :language: javascript

