.. _node-data-types-field-types:

========================
Field Types -Node.js SDK
========================
.. default-domain:: mongodb
.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

{+client-database+} supports the following field data types:

- ``bool`` maps to the JavaScript :mdn:`Boolean <Web/JavaScript/Reference/Global_Objects/Boolean>` type
- ``int`` maps to the JavaScript :mdn:`Number <Web/JavaScript/Reference/Global_Objects/Number>` type. Internally {+client-database+} stores ``int`` with 64 bits.
- ``float`` maps to the JavaScript :mdn:`Number <Web/JavaScript/Reference/Global_Objects/Number>` type. Internally {+client-database+} stores ``float`` with 32 bits.
- ``double`` maps to the JavaScript :mdn:`Number <Web/JavaScript/Reference/Global_Objects/Number>` type. Internally {+client-database+} stores ``double`` with 64 bits.
- ``string`` maps to the JavaScript :mdn:`String <Web/JavaScript/Reference/Global_Objects/Boolean>` type.
- ``decimal128`` for high precision numbers.
- ``objectId`` maps to BSON :manual:`ObjectId </reference/method/ObjectId/>` type.
- ``data`` maps to the JavaScript :mdn:`ArrayBuffer <Web/JavaScript/Reference/Global_Objects/ArrayBuffer>` type.
- ``date`` maps to the JavaScript :mdn:`Date <Web/JavaScript/Reference/Global_Objects/Date>` type.
- ``list`` maps to the JavaScript :mdn:`Array <Web/JavaScript/Reference/Global_Objects/Array>` type. You can also specify that a field contains a list of a primitive value type by appending ``[]`` to the type name.
- ``uuid`` is a universally unique identifier from :js-sdk:`Realm.BSON <Realm.html#.BSON>`.


ObjectId
--------

MongoDB's :manual:`ObjectId </reference/method/ObjectId/>`  is 12-byte unique
value. You can use ``ObjectId`` as an identifier for objects. ``ObjectId`` is
:ref:`indexable <node-indexes>` and can be used as a :ref:`primary keys
<node-primary-keys>`.


UUID 
----

.. versionadded:: 10.5.0-beta.1

``UUID`` (Universal Unique Identifier) is a 16-byte :wikipedia:`unique value
<Universally_unique_identifier>`. You can use ``UUID`` as an identifier for
objects. ``UUID`` is :ref:`indexable <node-indexes>` and can be used as a
:ref:`primary keys <node-primary-keys>`. Use ``UUID`` by importing
:js-sdk:`Realm.BSON <Realm.html#.BSON>` and calling ``new UUID()``.  

.. note::

   If you are migrating data not stored in MongoDB, it is likely that your
   object's unique identifiers are of a ``UUID`` type. 

