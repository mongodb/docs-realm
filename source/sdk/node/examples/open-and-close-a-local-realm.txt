.. _node-open-close-local-realm:

========================================
Open & Close a Local Realm - Node.js SDK
========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _node-open-a-local-realm:

Open a Local Realm
------------------

To open a local (non-synced) {+realm+}, pass a :js-sdk:`Realm.Configuration
<Realm.html#~Configuration>` object to :js-sdk:`Realm.open()
<Realm.html#.open>`.

.. note:: Accessing the Default Realm Path

   If the ``path`` property is not specified in your ``Configuration`` object,
   the default path is used. You can access and change the default Realm path
   using the ``Realm.defaultPath`` global property.

.. literalinclude:: /examples/generated/node/open-and-close-a-local-realm.codeblock.open-local-realm-with-car-schema.js
  :language: javascript
  :emphasize-lines: 2

Some additional options a ``Configuration`` objects has includes, but is not limited to:
- ``migration``: a function that updates a realm and any objects it contains from one schema version to a newer version. Learn more about :doc:`performing migrations </node/fundamentals/schema-versions-and-migrations>`.
- ``deleteRealmIfMigrationNeeded``: a boolean value that if true, deletes the Realm if a migration is needed. This is useful during development since the data model might change often.
- ``inMemory``: a boolean value that specifies if the Realm should be opened in-memory. Realms opened in memory are not be persisted the last Realm instance is closed.
- ``sync``: a sync configuration object that allows you to specify options to :doc:`sync data across devices </sync-changes-between-devices>` 
  
In the above example, the code shows how to open the {+realm+} *asynchronously*
by calling ``realm.open()``. You can also open a realm synchronously by passing
a ``Configuration object`` to a new instance of the :js-sdk:`Realm
<Realm.html>` object. This works even if the device is offline. 

.. literalinclude:: /examples/generated/node/open-and-close-a-local-realm.codeblock.open-local-realm-synchronously.js
  :language: javascript
  :emphasize-lines: 2

.. note::

   The first time a user logs on to your realm app, you should open the realm 
   *asynchronously* to sync data from the server to the device. After that initial 
   connection, you can open a realm *synchronously* to ensure the app works in 
   an offline state. 

.. _node-close-a-realm:

Close a Realm
-------------

It is important to remember to call the ``close()`` method when done with a
{+realm+} instance to avoid memory leaks.

.. literalinclude:: /examples/generated/node/open-and-close-a-local-realm.codeblock.close-local-realm.js
  :language: javascript

.. .. _node-local-realm-configuration:

.. Local Realm Configuration
.. -------------------------

.. .. _node-provide-a-subset-of-classes-to-a-realm:

.. Provide a Subset of Classes to a Realm
.. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
