.. _node-open-close-realm:

===================================
Open & Close a Realm - Node.js SDK
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _node-open-a-local-realm:

Open a Local Realm
------------------

.. include:: /includes/js-open-a-local-realm.rst

.. _node-open-a-synced-realm:

Open a Synced Realm
-------------------

.. include:: /includes/node-open-a-synced-realm.rst

.. warning:: 

   When attempting to synchronize a {+realm+} while not connected to 
   the Internet, you must pass ``Realm.open()`` a :js-sdk:`Configuration <Realm.html#~Configuration>`
   object that contains the ``newRealmFileBehavior`` and ``existingRealmFileBehavior`` properties. If you 
   don't include these properties, ``Realm.open()`` continues trying
   to connect to the server indefinitely without opening. 
   
   For more information about connecting to your synced {+realm+} 
   while offline, see :ref:`Open Immediately with Background Sync <node-open-immediately-with-background-sync>`.

.. _node-sync-all-data-before-returning:

Sync All Data Before Returning
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

By default, {+service-short+} syncs all data from the server before returning. 

.. example:: 

   The following example shows how to open a synced {+realm+} with with a 
   ``SyncConfiguration`` object that uses a predefined
   ``CarSchema`` :doc:`schema </sdk/node/examples/define-a-realm-object-model>`, 
   the currently logged in user, and a partition value of "myPartition".

   .. literalinclude:: /examples/generated/node/open-and-close-a-realm.codeblock.open-synced-realm-online-with-car-schema.js
      :language: javascript

.. _node-return-after-timeout-with-background-sync:

Return After Timeout with Background Sync
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you don't need to sync all data before before returning the {+realm+}, configure the
``newRealmFileBehavior`` and ``existingRealmFileBehavior`` properties of your
SyncConfiguration to automatically open the realm after a timeout period elapses. You
can use a single :js-sdk:`OpenRealmBehaviorConfiguration <Realm.App.Sync.html#~OpenRealmBehaviorConfiguration>`
for both ``newRealmFileBehavior`` and ``existingRealmFileBehavior`` 
that contains the following property values:  

- ``type``: "downloadBeforeOpen"
- ``timeOut``: <time in milliseconds>
- ``timeOutBehavior``: "openLocalRealm"

These properties force the ``Realm.open()`` method to return an open {+realm+} after ``timeOut`` milliseconds, or when the {+realm+} has completely downloaded, whichever comes first. 
If the {+realm+} doesn't finish downloading before the timeout, the initial realm sync continues in the background. For example: 

.. literalinclude:: /examples/generated/node/open-and-close-a-realm.codeblock.open-synced-realm-config.js
  :language: javascript

This configuration is also useful if you're attempting to sync in an environment 
where it's uncertain if the user has an Internet connection.

.. example::
  
  The following example shows opening a synced {+realm+} with a 
  ``Configuration`` object using a predefined ``Car`` :doc:`schema </sdk/node/examples/define-a-realm-object-model>`, 
  the currently logged in user, a partition value of "myPartition", and a 
  :js-sdk:`SyncConfiguration <Realm.App.Sync.html#~SyncConfiguration>`. The SyncConfiguration includes  
  ``existingRealmFileBehavior`` and ``newRealmFileBehavior`` set to allow the user 
  to work with the local {+realm+} if the device is doesn't fully sync within the ``timeOut``
  period of 1000 milliseconds.  

  .. literalinclude:: /examples/generated/node/open-and-close-a-realm.codeblock.open-synced-realm-offline-with-car-schema.js
    :language: javascript

.. _node-open-immediately-with-background-sync:

Open Immediately With Background Sync
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

When you want to connect to the {+realm+} immediately and sync data from the server 
in the background, you must use  a :js-sdk:`OpenRealmBehaviorConfiguration
<Realm.App.Sync.html#~OpenRealmBehaviorConfiguration>` that includes the ``newRealmFileBehavior`` and ``existingRealmFileBehavior`` 
properties. This configuration is useful if a user's device is not connected to the Internet or you're not certain if it's 
connected. 

Create a :js-sdk:`OpenRealmBehaviorConfiguration
<Realm.App.Sync.html#~OpenRealmBehaviorConfiguration>` object and set the
``type`` property to a value of "openImmediately". This configuration opens a local {+realm+} 
immediately without attempting to sync with the server. The client continues  
attempting to connect with the server in the background. 

Then create a :js-sdk:`Configuration <Realm.html#~Configuration>` object, which must
include the ``sync`` property defining a :js-sdk:`SyncConfiguration
<Realm.App.Sync.html#~SyncConfiguration>` object. Set this
OpenRealmBehaviorConfiguration object as the value for
the ``newRealmFileBehavior`` and ``existingRealmFileBehavior`` properties of the
``SyncConfiguration``. 

.. literalinclude:: /examples/generated/node/open-and-close-a-realm.codeblock.open-synced-realm-with-background-sync.js
      :language: javascript

.. _node-close-a-realm:

Close a Realm
-------------

.. include:: /includes/js-close-a-realm.rst
