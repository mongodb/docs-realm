.. _node-open-close-realm:

===================================
Open & Close a Realm - Node.js SDK
===================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _node-open-a-local-realm:

Open a Local Realm
------------------

.. include:: /includes/js-open-a-local-realm.rst

.. _node-open-a-synced-realm:

Open a Synced Realm
-------------------

.. include:: /includes/node-open-a-synced-realm.rst

.. _node-open-a-synced-realm-while-online:

Open a Synced Realm While Online
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To open a synced {+realm+} while online, call :js-sdk:`Realm.open() <Realm.html#.open>`. 
Pass in a :js-sdk:`Configuration <Realm.html#~Configuration>`
object, which must include the ``sync`` property defining a 
:js-sdk:`SyncConfiguration <Realm.App.Sync.html#~SyncConfiguration>` object. 
This method syncs data from the server before returning. 

If you'd like to connect to the local {+realm+} immediately, and sync with the server
in the background, call ``new Realm()`` with its Configuration object with a ``sync``
property. 

.. example:: Sync using ``Realm.open()``

   The following example shows how to open a synced {+realm+} with with a 
   ``SyncConfiguration`` object that uses a predefined
   ``CarSchema`` :doc:`schema </sdk/node/examples/define-a-realm-object-model>`, 
   the currently logged in user, and a partition value of "MyPartition".

   .. literalinclude:: /examples/generated/node/open-and-close-a-realm.codeblock.open-synced-realm-online-with-car-schema.js
      :language: javascript

.. warning::

   The ``Realm.open()`` function requires a different :js-sdk:`Configuration <Realm.html#~Configuration>`
   object if you are attempting to synchronize a {+realm+} while not connected to 
   the internet. Refer to the :ref:`Open a Synced Realm While Offline <node-open-a-synced-realm-while-offline>`
   documentation for more information about connecting to your offline {+realm+}. 

.. _node-open-a-synced-realm-while-offline:

Open a Synced Realm While Offline
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If a user's device is not connected to the Internet, there are a variety of ways 
to connect to the local {+realm+}. 

To access the local {+realm+} immediately, connect using the ``new Realm()`` method
using a :js-sdk:`Configuration <Realm.html#~Configuration>`with it's ``sync``property
set to a :js-sdk:`SyncConfiguration <Realm.App.Sync.html#~SyncConfiguration>` object. 
Synchronization occurs in the background when the device connects to the Internet. 

.. TODO(Ben): resume on refactoring the next paragraph
.. also regenerate the bluehawk stuff to take into account changes over there
.. then validate and this should be ready for re-review

If you're uncertain if the device is connected to the internet, configure the
device's behavior for when it's unable to fully synchronize in a specified time period. 
Regulate this timeout behavior in the :js-sdk:`Configuration <Realm.html#~Configuration>`
object passed to ``Realm.open()``. In the ``sync`` property, add ``newRealmFileBehavior``
and ``existingRealmFileBehavior`` properties with a :js-sdk:`OpenRealmBehaviorConfiguration <Realm.App.Sync.html#~OpenRealmBehaviorConfiguration>`
object set to have a ``timeOut: <time in milliseconds>`` and ``timeOutBehavior: 'openLocalRealm'``.
You must set the ``timeOut``, otherwise the devices continue to try to connect 
indefinitely. The ``timeOutBehavior`` specifies what the SDK does if it can't establish 
a sync in the time specified in ``timeOut``. For example: 

.. literalinclude:: /examples/generated/node/open-and-close-a-realm.codeblock.open-synced-realm-config.js
  :language: javascript

You can further manage the application based on if the device is online by using 
the :js-sdk:`syncSession methods<Realm.App.Sync.Session.html>` 
on your Realm object. 

.. example::
  
  In the following example, a synced {+realm+} is opened with a 
  a ``Configuration`` object that uses a predefined
  ``TaskSchema`` :doc:`schema </sdk/node/examples/define-a-realm-object-model>`, 
  the currently logged in user, a partition value of "MyPartition", and a 
  :js-sdk:`SyncConfiguration <Realm.App.Sync.html#~SyncConfiguration>` with 
  ``existingRealmFileBehavior`` and ``newRealmFileBehavior`` set to allow the user 
  to work with a local {+realm+} if the device is offline.  

  The example also includes ``syncSession``. 

  .. literalinclude:: /examples/generated/node/open-and-close-a-realm.codeblock.open-synced-realm-offline-with-car-schema.js
    :language: javascript

.. _node-close-a-realm:

Close a Realm
-------------

.. include:: /includes/js-close-a-realm.rst


.. .. _node-local-realm-configuration:

.. Local Realm Configuration
.. -------------------------

.. .. _node-provide-a-subset-of-classes-to-a-realm:

.. Provide a Subset of Classes to a Realm
.. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
