.. _node-electron-cra-client-quick-start:

=====================================
Quick Start with Electron using React
=====================================


.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


Overview
--------

This page contains information to get {+service+} integrated into your Electron
application quickly by developing an application using :reactjs:`Create React
App </docs/create-a-new-react-app.html>`.

Before you begin, ensure you have:

- :ref:`Created a {+app+} <create-a-realm-app>`
- :ref:`Enabled {+sync+} <enable-sync>`

.. note:: Version Requirement - Electron

   {+service+} works with any of the officially supported Electron
   versions. We recommend using the latest stable release. To see the
   officially supported Electron versions, check out the `Electron
   Releases <https://www.electronjs.org/releases/>`_ document.

.. note:: Version Requirement - React.js

   This guide was created with support for :reactjs:`React.js version 17.0
   </versions>` and :github:`Create React App version 4.0
   </facebook/create-react-app/releases>`. Versions other than those may lead to
   errors while building the application since new dependencies are frequently
   added to both React.js and Create React App.

.. _electron-setup:

Setup
------

To set up an Electron application using {+service+} use the following instructions:

.. include:: /includes/steps/realm-with-electron-using-create-react-app.rst

Open a Realm
------------

Authenticate a user, define a schema, and :ref:`sync enabled {+sync+}
<enable-sync>`, then call :js-sdk:`Realm.open() <Realm.html#.open>` in a file
that you have imported Realm into.

Once you have opened the realm, you can :ref:`write to the realm
<node-realm-database-writes>`.

.. code-block:: javascript
   :emphasize-lines: 17

   const app = new Realm.App({ id: "<Your App ID>" }); // create a new instance of the Realm.App
   async function run() {

     // login with an anonymous credential
     await app.logIn(Realm.Credentials.anonymous());

     const DogSchema = {
         name: "Dog",
         properties: {
           _id: 'int',
           name: "string",
           age: "int",
         },
         primaryKey: '_id'
     };

     const realm = await Realm.open({
       schema: [DogSchema],
       sync: {
         user: app.currentUser,
         partitionValue: "myPartition",
       },
     });
     
     // The myPartition realm is now synced to the device. You can
     // access it through the `realm` object returned by `Realm.open()`

     // write to the realm
   }
   run().catch(err => {
     console.error("Failed to open realm:", err)
   });

.. include:: /includes/note-electron-writes-from-both-processes.rst

.. seealso::

   - :ref:`Sync Data <node-open-a-synced-realm>`
   - :ref:`Define Your Schema <node-object-schemas>`
   - :doc:`Authenticate a User </sdk/node/examples/authenticate-users/>`