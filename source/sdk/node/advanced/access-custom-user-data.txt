.. _node-access-custom-user-data:

=====================================
Access Custom User Data - Node.js SDK
=====================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

You can read arbitrary data about your application users, known as
custom user data, directly within your Node application. For example,
you might store a user's preferred language, date of birth, or local
timezone. You can write to the Custom User Data object via a
:ref:`mongoClient <node-mongodb-data-access>`. 

The code examples in this page use the following :ref:`user object
<user-objects>` on which the custom_data field has not yet been set.

.. literalinclude:: /examples/generated/node/custom-user-data.snippet.user-data-object.js
  :language: javascript

.. include:: /includes/use-custom-data-note.rst

Before You Begin
----------------

To use custom user data, you must first enable custom user data
in App Services:

#. :ref:`Create an App <create-a-realm-app>`.
#. :ref:`Enable custom user data <enable-custom-user-data-procedure>`.

Write to Custom User Data with a MongoClient
--------------------------------------------

.. include:: /includes/write-access-to-custom-data-note.rst

Using standard CRUD operations through the :ref:`MongoDB Atlas service
<data-sources>`, a user's custom data can be accessed. The following example
updates the user's custom data to alter the user's ``favoriteColor`` to pink.

.. literalinclude:: /examples/generated/node/custom-user-data.snippet.write-to-custom-user-data.js
  :language: javascript

Read Custom User Data
---------------------

.. include:: /includes/custom-data-may-be-stale.rst

If you have updated your custom user data within the last 30 minutes,
use the :js-sdk:`refreshCustomData()
<Realm.User.html#refreshCustomData>` method on the user object.

.. code-block:: javascript

   const customUserData = await user.refreshCustomData()
   console.log(customUserData);

If you have not recently updated your custom user data, use the user object's :js-sdk:`customData
<Realm.User.html#customData>` field.

.. note::

   The ``customData`` field of the user object is read-only from a Node application.

.. code-block:: javascript

   const customUserData = user.customData
   console.log(customUserData);
   // Console output shows the `favoriteColor` field we added earlier.
   // {
   //    "_id":"5f233a3ac49aca916792de1d",
   //    "description":"a test document for user test@test.com",
   //    "userID":"5f1f298f757611faec901d0f",
   //   "favoriteColor":"pink"
   // }
