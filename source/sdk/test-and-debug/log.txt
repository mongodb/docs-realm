.. _sdks-logging:

=======
Logging
=======

.. meta::
   :description: Use logging to debug your Atlas Device SDK app.
   :keywords: Realm, C++ SDK, Flutter SDK, Kotlin SDK, Java SDK, Node.js SDK, Swift SDK, code example

.. facet::
  :name: genre
  :values: reference

.. facet::
   :name: programming_language
   :values: cpp, csharp, dart, java, javascript/typescript, kotlin, objective-c, swift

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. tabs-selector:: drivers

You can set or change your app's log level when developing or debugging 
your app. You might want to change the log level to log different 
amounts of data depending on your development needs. You can specify 
different log levels or custom loggers.

.. sdks-set-the-client-log-level:

Set or Change the Log Level
---------------------------

You can set the level of detail reported by Atlas Device SDK.

.. tabs-drivers::

   tabs:
     - id: cpp
       content: |

         .. literalinclude:: /examples/generated/cpp/logger.snippet.set-default-log-level.cpp
            :language: cpp

     - id: csharp
       content: |

         .. literalinclude:: /examples/generated/dotnet/ErrorHandler.snippet.set-log-level.cs
            :language: csharp

     - id: dart
       content: |

         .. literalinclude:: /examples/generated/flutter/logger.snippet.set-the-log-level.dart
            :language: dart

     - id: java
       content: |

         .. literalinclude:: /examples/MissingPlaceholders/api.java
            :language: java

     - id: javascript
       content: |

         .. literalinclude::  /examples/generated/node/v12/logger.test.snippet.set-log-level.ts
            :language: javascript

     - id: kotlin
       content: |

         .. literalinclude:: /examples/generated/kotlin/SyncTest.snippet.set-log-level-realmlog.kt 
            :language: kotlin

     - id: objectivec
       content: |

         .. literalinclude:: /examples/MissingPlaceholders/api.m
            :language: objectivec

     - id: swift
       content: |

         .. literalinclude:: /examples/generated/code/start/Logging.snippet.set-log-level.swift
            :language: swift

     - id: typescript
       content: |

         .. literalinclude::  /examples/generated/node/v12/logger.test.snippet.set-log-level.ts
            :language: typescript

You can change the log level to increase or decrease verbosity at different
points in your code.

.. tabs-drivers::

   tabs:
     - id: cpp
       content: |

         .. literalinclude:: /examples/MissingPlaceholders/example.cpp
            :language: cpp

     - id: csharp
       content: |

         .. literalinclude:: /examples/generated/dotnet/ErrorHandler.snippet.set-log-level.cs
            :language: csharp

     - id: dart
       content: |

         .. literalinclude:: /examples/generated/flutter/logger.snippet.change-log-level.dart
            :language: dart

     - id: java
       content: |

         .. literalinclude:: /examples/MissingPlaceholders/api.java
            :language: java

     - id: javascript
       content: |

         .. literalinclude::  /examples/generated/node/v12/logger.test.snippet.change-log-level.ts
            :language: javascript

     - id: kotlin
       content: |

         .. literalinclude:: /examples/MissingPlaceholders/example.kt 
            :language: kotlin

     - id: objectivec
       content: |

         .. literalinclude:: /examples/MissingPlaceholders/api.m
            :language: objectivec

     - id: swift
       content: |

         .. literalinclude:: /examples/generated/code/start/Logging.snippet.change-log-level.swift
            :language: swift

     - id: typescript
       content: |

         .. literalinclude::  /examples/generated/node/v12/logger.test.snippet.change-log-level.ts
            :language: typescript

.. _sdks-customize-logger:

Customize the Logger
--------------------

You can create a custom logger. You might want to customize logging to add
specific tags or set specific log levels during development, testing, or
debugging.

.. tabs-drivers::

   .. tab::
      :tabid: cpp

      .. include:: /includes/api-details/cpp/logger/customize-logger.rst

   .. tab::
      :tabid: csharp

      .. include:: /includes/api-details/csharp/logger/customize-logger.rst
      
   .. tab::
      :tabid: dart

      .. include:: /includes/api-details/dart/logger/customize-logger.rst

   .. tab::
      :tabid: java

      .. include:: /includes/api-details/java/logger/customize-logger.rst

   .. tab::
      :tabid: kotlin

      .. include:: /includes/api-details/kotlin/logger/customize-logger.rst

   .. tab::
      :tabid: javascript

      .. include:: /includes/api-details/javascript/logger/customize-logger.rst

   .. tab::
      :tabid: kotlin

      .. include:: /includes/api-details/kotlin/logger/customize-logger.rst

   .. tab::
      :tabid: objectivec

      .. include:: /includes/api-details/objectivec/logger/customize-logger.rst

   .. tab::
      :tabid: swift

      .. include:: /includes/api-details/swift/logger/customize-logger.rst

   .. tab::
      :tabid: typescript

      .. include:: /includes/api-details/javascript/logger/customize-logger.rst

.. include:: /includes/sdk-examples/logger/set-custom-logger.rst

After setting a custom logger, you should also initialize the logger and and set
it as the default logger for your database.

.. tabs-drivers::

   .. tab::
      :tabid: cpp

      .. include:: /includes/api-details/cpp/logger/init-custom-logger.rst

   .. tab::
      :tabid: csharp

      .. include:: /includes/api-details/csharp/logger/init-custom-logger.rst
      
   .. tab::
      :tabid: dart

      .. include:: /includes/api-details/dart/logger/init-custom-logger.rst

   .. tab::
      :tabid: java

      .. include:: /includes/api-details/java/logger/init-custom-logger.rst

   .. tab::
      :tabid: kotlin

      .. include:: /includes/api-details/kotlin/logger/init-custom-logger.rst

   .. tab::
      :tabid: javascript

      .. include:: /includes/api-details/javascript/logger/init-custom-logger.rst

   .. tab::
      :tabid: kotlin

      .. include:: /includes/api-details/kotlin/logger/init-custom-logger.rst

   .. tab::
      :tabid: objectivec

      .. include:: /includes/api-details/objectivec/logger/init-custom-logger.rst

   .. tab::
      :tabid: swift

      .. include:: /includes/api-details/swift/logger/init-custom-logger.rst

   .. tab::
      :tabid: typescript

      .. include:: /includes/api-details/javascript/logger/init-custom-logger.rst

.. include:: /includes/sdk-examples/logger/initialize-custom-logger.rst

.. _sdks-turn-off-logging:

Turn Off Logging
----------------

You can turn off logging by setting the log level:

.. note:: Flutter SDK Isolates and Logging Behavior

   For the Flutter SDK, if you turn off logging from the first isolate, this
   stops the default printing logger.

.. tabs-drivers::

   tabs:
     - id: cpp
       content: |

         .. literalinclude:: /examples/MissingPlaceholders/example.cpp
            :language: cpp
            :copyable: false

     - id: csharp
       content: |

         .. literalinclude:: /examples/MissingPlaceholders/example.cs
            :language: csharp
            :copyable: false

     - id: dart
       content: |

         .. literalinclude:: /examples/generated/flutter/logger.snippet.set-custom-logger.dart
            :language: dart

     - id: java
       content: |

         .. literalinclude:: /examples/MissingPlaceholders/api.java
            :language: java
            :copyable: false

     - id: javascript
       content: |

         .. literalinclude:: /examples/generated/node/v12/logger.test.snippet.disable-logger.ts
            :language: javascript

     - id: kotlin
       content: |

         .. literalinclude:: /examples/MissingPlaceholders/example.cs
            :language: kotlin
            :copyable: false

     - id: objectivec
       content: |

         .. literalinclude:: /examples/MissingPlaceholders/api.m
            :language: objectivec
            :copyable: false

     - id: swift
       content: |

         .. literalinclude:: /examples/generated/code/start/Logging.snippet.turn-logging-off.swift
            :language: swift

     - id: typescript
       content: |

         .. literalinclude:: /examples/generated/node/v12/logger.test.snippet.disable-logger.ts
            :language: typescript

.. Dart: You can specify different log levels or custom loggers on a per-isolate basis.
.. C++ and Java: they haven't deprecated the sync logger. Need two main page sections
   one for the new logger and one for the sync logger.
.. Swift: Has a Set the Logger Before Initializing an App Client section not found in the other sdks. Should make an admonition
.. Node.js has "Performance and console.log()" section. Should make an admonition
