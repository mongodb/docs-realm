.. _android-field-types:
.. _android-supported-data-types:

=========================
Field Types - Android SDK
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

{+client-database+} supports the following field data types:

- ``Boolean`` or ``boolean``
- ``Integer`` or ``int``
- ``Short`` or ``short``
- ``Long`` or ``long``
- ``Byte`` or ``byte[]``
- ``Double`` or ``double``
- ``Float`` or ``float``
- ``String``
- ``Date``
- ``Decimal128`` from ``org.bson.types``
- ``ObjectId`` from ``org.bson.types``
- ``UUID`` from ``java.util.UUID``
- Any ``RealmObject`` subclass
- ``RealmList``
- ``RealmAny``
- ``RealmSet``
- ``RealmDictionary``

The ``Byte``, ``Short``, ``Integer``, and ``Long`` types and their
lowercase primitive alternatives are all stored as ``Long`` values
within {+client-database+}. Similarly, {+client-database+} stores objects
of the ``Float`` and ``float`` types as type ``Double``.

{+service-short+} does not support fields with modifiers ``final`` and
``volatile``, though you can use fields with those modifiers if you
:ref:`ignore <android-ignore-field>` them. If you choose to provide custom
constructors, you must declare a public constructor with no arguments.

Updating Strings and Byte Arrays
--------------------------------

Since {+client-database+} operates on fields as a whole, it's not possible
to directly update individual elements of strings or byte arrays. Instead,
you'll need to read the whole field, make your modification to individual
elements, and then write the entire field back again in a transaction block.

Object IDs and UUIDs
--------------------

.. note:: UUID type -- *new to version 10.6.0*

``ObjectId`` and ``UUID`` (Universal Unique Identifier) both provide
unique values that can be used as identifiers for objects.
``ObjectId`` is a :manual:`MongoDB-specific </reference/method/ObjectId/>`
12-byte unique value. ``UUID`` is a :rfc:`standardized <rfc4122>` 16-byte
unique value. Both types are :ref:`indexable <android-indexes-fundamentals>`
and can be used as :ref:`primary keys <android-primary-key-fundamentals>`.
