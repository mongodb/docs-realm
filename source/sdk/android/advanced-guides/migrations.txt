.. _android-client-migrations:
.. _android-synced-migration:

========================
Migrations - Android SDK
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

A **migration** transforms an existing {+realm+} and its objects from its
current :ref:`{+backend-schema+} version <android-schema-version>` to a newer one.
Application data models typically change over time to accommodate new
requirements and features. Migrations give you the flexibility to
automatically update your existing application data whenever a client
application upgrades to a newer version.

A **synced migration** is a migration for a {+realm+} that
automatically :doc:`{+sync-short+}s </sync>` with
another remote {+realm+}. {+client-database+} automatically handles all
synced schema migrations and does not allow you to specify a
migration function.

Synced {+realms+} represent multiple end users and devices that will likely
not all immediately update to the most recent version of an application.
{+service+} ensures that synced schema changes are backwards compatible,
which means that client applications that have not updated to the most
recent version can still sync with clients that are using the most recent
version.

{+service+} handles synced migrations using the following framework:

.. list-table::
   :header-rows: 1
   :widths: 20 80

   * - Change Type
     - Description

   * - **Schema Version**
     - {+service+} ignores any :ref:`schema version <android-schema-version>`
       set by the client application.

   * - **Migration Function**
     - {+service+} throws an error if the {+realm+} configuration
       includes a :ref:`local migration <android-local-migration>` function.

   * - **Additions**
     - {+service+} automatically applies additive changes, such as a new
       class or class property.

   * - **Deletions**
     - {+service+} does not delete removed fields from the database, but
       ignores them in future read operations. {+service+} includes
       deleted properties in new objects with a default value that
       depends on whether or not the property was required:

       - {+service+} sets the value of optional deleted properties to
         ``null``.
       
       - {+service+} sets the value of required deleted properties to the
         empty value of the property type (e.g. ``0`` for numeric
         fields, ``""`` for string properties, etc.).

   * - **Modifications**
     - {+service+} prevents modifications to an existing property other
       than delete operations. Modifications that synced {+realms+} do not
       support include:
       
       - Changing a propertyâ€™s type but keeping the same name.
       - Changing an object type's :ref:`primary key <android-primary-key>`.
       - Changing a property from optional to required (or vice-versa).

Summary
-------

- A **migration** transforms an existing {+realm+} and its objects from
  its current schema version to a later one.

- {+service+} allows you to specify migration functions for
  **local migrations**, i.e. migrations where the {+realm+} is not
  :doc:`synced </sync>` with {+backend+}.

- {+service+} automatically handles **synced migration**, i.e. migrations
  where the {+realm+} is synced. {+service+} does not allow migration
  functions for such migrations.
