.. _android-modify-an-object-schema:
.. _android-local-migrations:
.. _android-local-migration:

=====================================
Modify an Object Schema - Android SDK
=====================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _android-og-schema:

The following examples demonstrate how to add, delete, and modify 
properties in a schema. First, make the required schema change. Then,
create a corresponding :ref:`migration function
<android-migration-function>` to move data from the original schema
to the updated schema.

.. include:: /includes/note-modify-schema-properties-of-synced-realms.rst

.. note:: Versions Update on Realm Open

   Assume that each schema change in this example occurs after
   an application has used each version for some amount of time. New
   schema version numbers only apply once you open the {+realm+} 
   with an updated schema and explicitly specify the new version
   number, so in order to get to version 3, you would first need to
   open the app with versions 1 and 2.

A {+realm+} using schema version ``0`` has a ``Person`` object type:

.. tabs-realm-languages::
 
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/Migrations/PersonClassV1/PersonClassV1.kt
         :language: kotlin

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/Migrations/PersonClassV1/PersonClassV1.java
         :language: java

.. _android-add-a-property:

Add a Property
--------------

The following example adds a ``lastName`` property to the
:ref:`original Person schema <android-og-schema>`:

.. tabs-realm-languages::
 
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/Migrations/PersonClassV2/PersonClassV2.kt
         :language: kotlin
         :emphasize-lines: 3

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/Migrations/PersonClassV2/PersonClassV2.java
         :language: java
         :emphasize-lines: 5

.. _android-delete-a-property:

Delete a Property
-----------------

The following example uses a combined
``fullName`` property instead of the separate ``firstName`` and
``lastName`` property in the :ref:`original Person schema <android-og-schema>`:

.. tabs-realm-languages::

   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/Migrations/PersonClassV3/PersonClassV3.kt
         :language: kotlin
         :emphasize-lines: 2

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/Migrations/PersonClassV3/PersonClassV3.java
         :language: java
         :emphasize-lines: 3

.. _android-modify-a-property-type:
.. _android-rename-a-property:

Modify a Property Type or Rename a Property
-------------------------------------------

The following example modifies the ``age`` property in the
:ref:`original Person schema <android-og-schema>` by
renaming it to ``birthday`` and changing the type to ``Date``:

.. tabs-realm-languages::

   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/Migrations/PersonClassV4/PersonClassV4.kt
         :language: kotlin
         :emphasize-lines: 3

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/Migrations/PersonClassV4/PersonClassV4.java
         :language: java
         :emphasize-lines: 5

.. _android-migration-function:

Migration Functions
-------------------

To migrate the {+realm+} to conform to the updated
``Person`` schema, set the {+realm+}'s
:ref:`schema version <android-schema-version>` to ``3``
and define a migration function to set the value of
``fullName`` based on the existing ``firstName`` and
``lastName`` properties and the value of ``birthday`` based on
``age``:

.. tabs-realm-languages::

   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/Migrations/LocalMigration/LocalMigration.kt
         :language: kotlin

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/Migrations/LocalMigration/LocalMigration.java
         :language: java

.. seealso::

   :ref:`Fundamentals: Migrations <android-migrations>`

.. tip::

   You can use the
   :java-sdk:`RealmConfiguration.shouldDeleteRealmIfMigrationNeeded()
   <io/realm/RealmConfiguration.html#shouldDeleteRealmIfMigrationNeeded-->`
   builder method when constructing a {+realm+} to delete the {+realm+}
   instead of performing a migration when a migration is required. This
   can come in handy during development when schemas often change.
