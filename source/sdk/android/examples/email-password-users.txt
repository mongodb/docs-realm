.. _android-manage-email-password-users:

=========================================
Manage Email/Password Users - Android SDK
=========================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

When you have enabled the :ref:`email/password provider
<email-password-authentication>` in your {+app+}, you can register a new
account, confirm an email address, and reset a user's password from
client code.

.. _android-register-a-new-user-account:

Register a New User Account
---------------------------

To register a new user, pass a user-provided email and password to the
:java-sdk:`registerUser() <io/realm/mongodb/auth/EmailPasswordAuth.html#registerUser-java.lang.String-java.lang.String->`
or :java-sdk:`registerUserAsync()
<io/realm/mongodb/auth/EmailPasswordAuth.html#registerUserAsync-java.lang.String-java.lang.String-io.realm.mongodb.App.Callback->`
methods of your {+service-short+} ``App``'s :java-sdk:`EmailPasswordAuth <io/realm/mongodb/auth/EmailPasswordAuth.html>`
instance:

.. tabs-realm-languages::
   
   .. tab::
       :tabid: kotlin

       .. literalinclude:: /examples/generated/android/code/start/ManageEmailPasswordTest.codeblock.register-a-new-user-account.kt
         :language: kotlin

   .. tab::
       :tabid: java

       .. literalinclude:: /examples/generated/android/code/start/ManageEmailPasswordTest.codeblock.register-a-new-user-account.java
         :language: java

.. _android-confirm-a-new-users-email-address:

Confirm a New User's Email Address
----------------------------------

To confirm a newly-created user, pass a confirmation ``token`` and
``tokenId`` to the :java-sdk:`confirmUser() <io/realm/mongodb/auth/EmailPasswordAuth.html#confirmUser-java.lang.String-java.lang.String->`
or :java-sdk:`confirmUserAsync() <io/realm/mongodb/auth/EmailPasswordAuth.html#confirmUserAsync-java.lang.String-java.lang.String-io.realm.mongodb.App.Callback->`
methods of your {+service-short+} ``App``'s :java-sdk:`EmailPasswordAuth <io/realm/mongodb/auth/EmailPasswordAuth.html>`
instance:

.. tabs-realm-languages::
   
   .. tab::
       :tabid: kotlin

       .. literalinclude:: /examples/generated/android/code/start/ManageEmailPasswordTest.codeblock.confirm-a-new-users-email-address.kt
         :language: kotlin

   .. tab::
       :tabid: java

       .. literalinclude:: /examples/generated/android/code/start/ManageEmailPasswordTest.codeblock.confirm-a-new-users-email-address.java
         :language: java

.. note::

   To access the ``token`` and ``tokenId`` values sent in the user
   confirmation email, you can use a :ref:`custom confirmation email subject
   <auth-send-a-confirmation-email>` containing a `deep link
   <https://developer.android.com/training/app-links/deep-linking>`__.

.. _android-reset-a-users-password:

Reset a User's Password
-----------------------

To reset a user's password, first send the user a password reset email with
:java-sdk:`sendResetPasswordEmail() <io/realm/mongodb/auth/EmailPasswordAuth.html#sendResetPasswordEmail-java.lang.String->`
or :java-sdk:`sendResetPasswordEmailAsync() <io/realm/mongodb/auth/EmailPasswordAuth.html#sendResetPasswordEmailAsync-java.lang.String-io.realm.mongodb.App.Callback->`:

.. tabs-realm-languages::
   
   .. tab::
       :tabid: kotlin

       .. literalinclude:: /examples/generated/android/code/start/ManageEmailPasswordTest.codeblock.send-reset-password-email.kt
         :language: kotlin

   .. tab::
       :tabid: java

       .. literalinclude:: /examples/generated/android/code/start/ManageEmailPasswordTest.codeblock.send-reset-password-email.java
         :language: java

Password reset emails contain two values, ``token`` and ``tokenId``.
To complete the password reset flow, prompt the user to enter a new
password and pass the ``token`` and ``tokenId`` values along with the
new password value to your {+service-short+} ``App``'s
:java-sdk:`EmailPasswordAuth <io/realm/mongodb/auth/EmailPasswordAuth.html>`
instance's :java-sdk:`resetPassword() <io/realm/mongodb/auth/EmailPasswordAuth.html#resetPassword-java.lang.String-java.lang.String-java.lang.String->`
or :java-sdk:`resetPasswordAsync()
<io/realm/mongodb/auth/EmailPasswordAuth.html#resetPasswordAsync-java.lang.String-java.lang.String-java.lang.String-io.realm.mongodb.App.Callback->`
methods:

.. tabs-realm-languages::
   
   .. tab::
       :tabid: kotlin

       .. literalinclude:: /examples/generated/android/code/start/ManageEmailPasswordTest.codeblock.reset-password.kt
         :language: kotlin

   .. tab::
       :tabid: java

       .. literalinclude:: /examples/generated/android/code/start/ManageEmailPasswordTest.codeblock.reset-password.java
         :language: java

.. note::

   To access the ``token`` and ``tokenId`` values sent in the password
   reset email, you can use a :ref:`custom password reset email subject
   <auth-send-a-password-reset-email>` containing a `deep link
   <https://developer.android.com/training/app-links/deep-linking>`__.

Summary
-------

- You can register new email/password users by passing a new email and
  password to ``App.registerUser()``.

- You can confirm a new email/password user's email address by passing
  the ``token`` and ``tokenId`` generated by {+service+} upon account
  creation to ``App.confirmUser()``.

- You can reset a user's password by calling ``App.sendResetPasswordEmail()``
  with a user's email address and then passing the ``token`` and
  ``tokenId`` generated by {+service+} to ``App.resetPassword()``.
