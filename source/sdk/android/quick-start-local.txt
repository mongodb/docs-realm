.. _android-client-quick-start:
.. _android-client-quick-start-local:

=========================
Quick Start - Android SDK
=========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. important:: This Guide Does Not Use Realm Sync

   This guide can help you get started with device-local Realm Database.
   If your application needs to communicate with a backend
   {+app+} over the network using features like :ref:`Sync <sync>`, Realm
   Functions, or user management, you should follow the
   :ref:`Quick Start with Sync <android-client-quick-start-sync>` guide.


This page contains information to quickly get {+client-database+}
integrated into your app. Before you begin, ensure you have:

- :ref:`Installed the Android SDK <android-install>`

.. include:: /includes/android-initialize-realm.rst

Define Your Object Model
------------------------

Your application's **data model** defines the structure of data
stored within {+client-database+}.
You can define your application's data model via Kotlin or
Java classes in your application code with
:ref:`Realm Object Models <create-schema-from-rom>`.

To define your application's data model, add the following class
definitions to your application code:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      ``Task.java``:

      .. literalinclude:: /examples/generated/android/local/DefinitelyNotJavaTask.codeblock.define-object-model-local.java
         :language: java

      ``TaskStatus.java``:
      
      .. literalinclude:: /examples/generated/android/local/TaskStatus.codeblock.define-object-model-local.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.define-object-model-local.kt
         :language: kotlin

Open a Realm
------------

Use ``RealmConfiguration`` to control the specifics of the {+realm+} you
would like to open, including the name or location of the {+realm+},
whether to allow synchronous reads or writes to a {+realm+} on the UI
thread, and more.

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.open-a-realm-local.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.open-a-realm-local.kt
         :language: kotlin

Create, Read, Update, and Delete Objects
----------------------------------------

Once you have opened a {+realm+}, you can modify the
:ref:`objects <android-realm-objects>` within that {+realm+} in a
:ref:`write transaction <android-open-a-transaction>` block.

.. include:: /includes/android-synchronous-reads-writes-ui-thread.rst

To create a new ``Task``, instantiate an instance of the
``Task`` class and add it to the {+realm+} in a write block:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.create-object-local.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.create-object-local.kt
         :language: kotlin

You can retrieve a live :ref:`collection <android-client-collections>`
of all items in the {+realm+}:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.read-object-local.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.read-object-local.kt
         :language: kotlin

You can also filter that collection using a :ref:`filter
<android-client-query-engine>`:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.filter-collection-local.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.filter-collection-local.kt
         :language: kotlin

To modify a task, update its properties in a write transaction block:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.update-object-local.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.update-object-local.kt
         :language: kotlin

Finally, you can delete a task by calling the ``deleteFromRealm()``
method in a write transaction block:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.delete-object-local.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.delete-object-local.kt
         :language: kotlin

Watch for Changes
-----------------

You can :ref:`watch a realm, collection, or object for changes
<android-client-notifications>` by attaching a custom
``OrderedRealmCollectionChangeListener`` with the ``addChangeListener()``
method:

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.watch-for-changes-local.java
         :language: java
   
   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.watch-for-changes-local.kt
         :language: kotlin

Complete Example
----------------

If you're running this project in a fresh Android Studio project, you can
copy and paste this file into your application's ``MainActivity`` -- just
remember to:

- use a package declaration at the top of the file for your own project

- update the ``import`` statements for ``Task`` and ``TaskStatus`` if
  you're using java

.. tabs-realm-languages::

   .. tab::
      :tabid: java

      .. literalinclude:: /examples/generated/android/local/DefinitelyNotJavaTask.codeblock.define-object-model-local.java
         :caption: Task.java
         :language: java

      .. literalinclude:: /examples/generated/android/local/TaskStatus.codeblock.define-object-model-local.java
         :caption: TaskStatus.java
         :language: java

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.complete.java
         :caption: MainActivity.java
         :language: java

   .. tab::
      :tabid: kotlin

      .. literalinclude:: /examples/generated/android/local/MainActivity.codeblock.complete.kt
         :caption: MainActivity.kt
         :language: kotlin

Output
------
Running the above code should produce output resembling the following:

.. code-block:: shell

   Successfully authenticated anonymously.

   Updated range: 0 to 1

   Deleted range: 0 to 1

   Successfully logged out.
