.. _ios-intro:

=======================
MongoDB Realm Swift SDK
=======================

.. toctree::
   :titlesonly:
   
   Install Realm for iOS, macOS, tvOS, and watchOS </sdk/swift/install>
   Quick Start </sdk/swift/quick-start>
   Quick Start with Sync </sdk/swift/quick-start-with-sync>
   Quick Start with SwiftUI </sdk/swift/swiftui>
   Supported Property Types </sdk/swift/supported-property-types>
   Define a Realm Object Schema </sdk/swift/define-a-realm-object-model>
   Map an Unsupported Type to a Supported Type with Type Projection </sdk/swift/type-projection>
   Configure & Open a Realm </sdk/swift/configure-and-open-a-realm>
   Write Data </sdk/swift/write>
   Read Data </sdk/swift/read>
   Filter Data </sdk/swift/filter-data>
   React to Changes </sdk/swift/react-to-changes>
   Collections </sdk/swift/collections>
   Maps </sdk/swift/map>
   MutableSets </sdk/swift/mutablesets>
   AnyRealmValue </sdk/swift/anyrealmvalue>
   Embedded Objects </sdk/swift/embedded-objects>
   Class Projections </sdk/swift/define-and-use-class-projections>
   SwiftUI Guide </sdk/swift/swiftui-guide>
   Threading </sdk/swift/threading>
   Encrypt a Realm </sdk/swift/encrypt-a-realm>
   Compact a Realm </sdk/swift/compacting>
   Bundle a Realm File with Your App </sdk/swift/bundle>
   Update and Migrate Schemas </sdk/swift/modify-an-object-schema>
   Client Resets </sdk/swift/client-reset>
   Connect to a MongoDB Realm Backend App </sdk/swift/connect-to-a-mongodb-realm-backend-app>
   Work with Users </sdk/swift/work-with-users>
   Sync Changes Between Devices </sdk/swift/sync-changes-between-devices>
   Flexible Sync </sdk/swift/flexible-sync>
   Call a Function </sdk/swift/call-a-function>
   Query MongoDB </sdk/swift/mongodb-remote-access>   
   Test and Debug </sdk/swift/test-and-debug>
   Build for tvOS </sdk/swift/tvos>
   Extras </sdk/swift/extras>

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The {+service+} Swift SDK enables mobile applications to access data
stored in local {+realms+}. Optionally, interact with {+backend+} services 
like Functions, MongoDB Data Access, and authentication.

.. seealso::

   Are you looking for information about using Swift with MongoDB in a 
   backend app, command-line utility, or running on macOS or Linux? See 
   the :driver:`MongoDB Swift Driver documentation </swift>`.
