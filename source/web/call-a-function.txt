.. _web-call-a-function:

===============
Call a Function
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 3
   :class: singlecol

Overview
--------

You can call a :doc:`function </functions>` from a connected client application.

The examples in this section demonstrate calling a simple function named
``sum`` that takes two arguments, adds them, and returns the result:

.. code-block:: javascript

   // sum: adds two numbers
   exports = function(a, b) {
     return a + b;
   };

Usage
-----

In the Node SDK you call functions as a logged in user with the
``User.functions`` interface. There are two ways to call a function:

- You can call a function as if was a method defined locally on the
  ``User.functions`` interface.

- You can call the ``User.functions.callFunction()`` method to call a function
  by providing its stringified name and a list of arguments.

Call a Function
~~~~~~~~~~~~~~~

.. tabs-realm-languages::

   .. tab::
      :tabid: javascript
      
      .. code-block:: javascript
         
         const result = await user.functions.sum(2, 3);

   .. tab::
      :tabid: typescript

      .. code-block:: typescript
         
         const result: number = await user.functions.sum(2, 3);

Call a Function Programmatically
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. tabs-realm-languages::

   .. tab::
      :tabid: javascript
      
      .. code-block:: javascript
         
         const functionName = "sum";
         const args = [2, 3];
         const result = await user.callFunction(functionName, args);

   .. tab::
      :tabid: typescript

      .. code-block:: typescript
         
         const functionName = "sum";
         const args = [2, 3];
         const result: number = await user.callFunction(functionName, args);
