.. _web-multi-user:

========================
Work with Multiple Users
========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

The Realm SDK allows multiple :ref:`users <user-accounts>` to be logged in to an
app simultaneously on a given browser. {+service-short+} client applications run
in the context of a single active user even if multiple users are logged in
simultaneously. You can quickly switch between authenticated users without
requiring them to log in again.

.. important::
   
   **Any logged in user may become the active user without re-authenticating.**
   Depending on your app, this may be a security vulnerability. For example, a
   user on a shared browser may switch to a coworker's logged in account without
   providing their credentials or requiring their explicit permission. If your
   application requires stricter authentication, avoid switching between users
   and prefer to explicitly log the active user out before authenticating
   another user.

User Account States
~~~~~~~~~~~~~~~~~~~

When a user first logs in through a {+service-short+} SDK on a given browser,
the SDK saves the user's information and keeps track of the user's state. The
user's data remains in local storage, even if they log out, unless you actively
:ref:`remove the user <ios-remove-user>` or purge data from the browser.

The following states describe a tracked user at any given time:

- **Authenticated:** any user that has logged in on the browser
  and has not logged out or had its session revoked.
  
  - **Active**: a single authenticated user that is currently using the
    app on a given browser. The SDK associates this user with outgoing
    requests and {+backend-short+} evaluates data access permissions and runs
    functions in this user's context. See :ref:`active user <active-user>` for
    more information.
   
  - **Inactive**: all authenticated users that are not the current
    active user. You can :ref:`switch the active user <ios-switch-user>` to a
    currently inactive user at any time.

- **Logged Out:** any user that authenticated on the browser but
  has since logged out or had its session revoked.

The following diagram shows how users within a {+service-short+} client app
transition between states when certain events occur:

.. figure:: /images/multi-user.png
   :alt: A diagram the outlines the different states a user can be in: logged out, logged in and active, & logged in and inactive.

.. _web-add-user:

Add a New User to a Device
--------------------------

The {+service-short+} SDK automatically saves user data to a browser's local
storage when they log in for the first time on that browser. When a user logs
in, they immediately become the application's :ref:`active user <active-user>`.

.. tabs-realm-languages::
   
   .. tab::
      :tabid: javascript
      
      .. literalinclude:: /examples/MultiUser/AddUser/AddUser.js
         :language: javascript
   
   .. tab::
      :tabid: typescript
      
      .. literalinclude:: /examples/MultiUser/AddUser/AddUser.ts
         :language: typescript

.. _web-list-users:

List All On-Device Users
~~~~~~~~~~~~~~~~~~~~~~~~

You can access a list of all :ref:`user accounts <user-accounts>` associated
with the browser. This list includes all users that have logged in to the client
app regardless of whether they are currently authenticated.

.. tabs-realm-languages::
   
   .. tab::
      :tabid: javascript
      
      .. literalinclude:: /examples/MultiUser/ListUsers/ListUsers.js
         :language: javascript
   
   .. tab::
      :tabid: typescript
      
      .. literalinclude:: /examples/MultiUser/ListUsers/ListUsers.ts
         :language: typescript

.. _web-switch-user:

Switch the Active User
~~~~~~~~~~~~~~~~~~~~~~

You can quickly switch an app's :ref:`active user <active-user>` to another
logged in user at any time.

.. tabs-realm-languages::
   
   .. tab::
      :tabid: javascript
      
      .. literalinclude:: /examples/MultiUser/SwitchUser/SwitchUser.js
         :language: javascript
   
   .. tab::
      :tabid: typescript
      
      .. literalinclude:: /examples/MultiUser/SwitchUser/SwitchUser.ts
         :language: typescript

.. _web-remove-user:

Remove a User from the Device
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can remove all information about a user from the browser and automatically
log the user out.

.. tabs-realm-languages::
   
   .. tab::
      :tabid: javascript
      
      .. literalinclude:: /examples/MultiUser/LogoutUser/LogoutUser.js
         :language: javascript
   
   .. tab::
      :tabid: typescript
      
      .. literalinclude:: /examples/MultiUser/LogoutUser/LogoutUser.ts
         :language: typescript
