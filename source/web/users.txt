.. _web-manage-users:

======================
Manage Users - Web SDK
======================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

TODO: update w web content

.. toctree::
   :titlesonly:

   Create & Delete Users </web/create-delete-user>
   Authenticate Users <web/authenticate>
   Manage Email/Password Users </web/manage-email-password-users>
   Work with Multiple Users </web/work-with-multiple-users>
   Access Custom User Data </web/access-custom-user-data>
   Link User Identities </web/link-identities>

Overview
--------

When you use App Services to back your client app, you get access to a
:ref:`user object <user-objects>`. Use Web SDK methods with this user
object to conveniently:

- Create and delete users
- Log users in and out
- Create and update custom user data

.. _web-create-and-delete-users:

Create and Delete Users
-----------------------

For all authentication providers other than email/password authentication,
App Services automatically :ref:`creates a user object <web-create-user>`
the first time a user authenticates. If a user authenticates via more than
one method, you can :ref:`link these user identities <web-link-user-identities>`
to a single user object.

You can :ref:`delete user objects <web-delete-user>`. Deleting a user object
deletes metadata attached to the user object, but does not delete user-entered
data from the backend.


.. _web-access-the-app-client:

Log Users In and Out
--------------------

Use one or more :ref:`authentication providers <auth-providers>` to :ref:`log
users in and out <web-authenticate>` of your client app. You can:

- Log users in with an existing social account, such as Apple, Facebook,
  or Google.
- Create new user accounts with App Services email/password management,
  your own custom function, or custom JWT user management.
- Enable anonymous users to let users access your App Services App without persisting
  user data.

When you have a logged-in user, SDK methods enable you to:

- :ref:`Run a backend function <web-call-a-function>` as the logged-in user
- :ref:`Log the user out <web-logout>`
- :ref:`Change the active user <web-switch-user>` in a multi-user
  application
- :ref:`Remove a user <web-remove-user>` from the device

User Sessions
~~~~~~~~~~~~~

Atlas App Services manages sessions with access tokens and refresh tokens.
Client SDKs supply the logic to manage tokens, and provide them with requests.
The Web SDK stores these tokens in the browser storage.

.. seealso::

   :ref:`<user-sessions>`

.. _web-app-work-with-custom-user-data:

Read and Update Custom User Data
--------------------------------

You can :ref:`associate custom data <custom-user-data>` with a user object,
such as a preferred language or local timezone, and read it from your client
application. A user object has a ``customData`` property that you can use
to :ref:`access custom user data <web-read-custom-user-data>`.

To :ref:`create and update <web-modify-custom-user-data>` custom user data,
you must access your MongoDB data source directly.
