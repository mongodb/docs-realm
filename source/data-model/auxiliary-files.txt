===============
Auxiliary Files
===============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

Realm stores data on the filesystem in **auxiliary files**.
You can access these files through the Realm SDK or Realm
Studio. In some error situations detailed below, you might
need to manually delete the auxiliary files. Otherwise,
these are implementation details that you can safely ignore,
presented here only for the curious.

Auxiliary File Types
--------------------

Realm's internal operation depends on several auxiliary file
types:

``<path>.realm``:
  The **Realm file** contains the data and metadata of the
  Realm at the given :ref:`Realm path <realm-path>`. Each
  app can have several Realms at different paths, each with
  their own Realm file.

``<name>.realm.lock``:
  The **lock file** enables synchronization between writes.

``<name>.realm.note``:
  The **note file** is a :wikipedia:`named pipe
  <Named_pipe>` for inter-thread and inter-process
  notifications. While usually completely internal, the note
  file can cause the "unsupported resource found" error in
  iOS builds if you accidentally add it to the app bundle.
  If you see this error, delete the pipe.

``<name>.realm.management``:
  The **management directory** contains internal files for
  the Realm's state management.

Manually Deleting Auxiliary Files
---------------------------------

In some circumstances, you might need to delete the
auxiliary files. You may delete auxiliary files when the Realm is
closed. Deleting any of a Realm's files while the Realm is
open might corrupt the Realm or disrupt :doc:`Sync
</sync/sync-overview>`.

Client Reset Scenario
~~~~~~~~~~~~~~~~~~~~~

When using :doc:`Realm Sync </sync/sync-overview>`, a **client
reset** is a serious error recovery task that your client
app must perform in the following situation:

- The given synced Realm on the server was restored from a backup. For example, due to a Realm server crash.
- The client app made changes to that Realm since the backup was made, but did not sync those changes back to the server before the server was restored.

In other words, the client app must carry out a client reset
on a given synced Realm if the server is restored to a
version older than the version on the client.

To perform a client reset, follow these steps:
1. Create a backup of the local Realm file.
#. Delete the local Realm file.
#. The next time the app connects to the server and opens that Realm, the app dowloads a fresh copy of the Realm file. The local changes made since the backup on the server are not reflected in the new file.
