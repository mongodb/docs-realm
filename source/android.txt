.. _android-intro:

=========================
MongoDB Realm Android SDK
=========================

.. toctree::
   :titlesonly:
   
   Install Realm for Android </android/install>
   Quick Start </android/quick-start>
   Quick Start with LiveData </android/livedata>
   The Realm Data Model </android/data-model>
   Realm Database </android/database>
   MongoDB Realm </android/mongodb-realm>
   Reference </android/reference>

The {+service+} Android SDK enables client applications on the Android
platform to access data stored in local {+realms+} and interact with
{+backend+} services like Functions, MongoDB Data Access, and
authentication. The Android SDK supports both Java and Kotlin
Android applications.

.. note::

   The Android SDK does not support Java or Kotlin applications
   written for environments other than Android.

Get Started
-----------

To learn how to add the {+service+} Android SDK library as a dependency
to your Android application, see :ref:`Install Realm for Android
<android-install>`.

The Realm Data Model
--------------------

You can store a wide variety of data within {+realms+} stored on your
device. With :term:`{+sync+}`, you can share updates to that data across
client devices and {+atlas+}.

For information about the structure of data you can store in {+realms+},
see :ref:`Realms <android-realms>`, :ref:`Objects
<android-realm-objects>`, and :ref:`Relationships
<android-client-relationships>`.

To learn about the results returned from {+realm+} queries, see
:ref:`Collections <android-client-collections>`.

To gracefully update the schema to a new version at runtime, see :ref:`Migrations
<android-client-migrations>`.

Realm Database
--------------

Once you have defined a data model for your application, you
need to be able to :ref:`write <android-realm-database-writes>` and
:ref:`read <android-realm-database-reads>` pieces of data to and from
your {+realm+}s.

To learn how to query for data in local {+realms+}, see
:ref:`Query Engine <android-client-query-engine>`.

For information about how to react to changes in {+realm+} data, see
:ref:`Notifications <android-client-notifications>`.

For advice on how to safely interact with {+client-database+} across
threads in an application, see :ref:`Threading
<android-client-threading>`.

For additional security, you can also :ref:`encrypt a {+realm+}
<android-encrypt-a-realm>`.

MongoDB Realm
-------------

The Android SDK also connects your {+service-short+} client application
with your {+app+}'s backend services, including Functions, Services,
Webhooks, {+sync+}, and built-in third-party authentication.

To get connected to your {+backend+} app, see
:ref:`Initialize the Realm App Client <android-init-appclient>`.

You can also :ref:`access custom user data <android-access-custom-user-data>`.

To learn how to connect to a {+backend+} app to call
Functions, query data in an instance of {+atlas+}, and synchronize data
in {+realms+}, see :ref:`Call a Function <android-call-a-function>`.

To learn how to query for data in MongoDB remotely, see :ref:`Remotely
Access MongoDB <android-mongodb-data-access>`.

Reference
---------

{+service+} uses additional support files, detailed in :ref:`Auxiliary Files
<android-client-auxiliary-files>`.
