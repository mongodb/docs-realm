.. _dotnet-client-resets:
.. _dotnet-client-reset:

=============
Client Resets
=============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

When using :doc:`{+sync+} </sync>`, a **client reset** is a possible issue that 
your client app should handle. While not common, it can be caused when Sync was 
terminated on the server. For example, a destructive schema change might cause 
Sync to stop. Meanwhile, the user made changes on the client while Sync was 
stopped. When Sync is restarted, the client app must perform a client reset
on the given synced {+realm+}.

.. warning::

   A client reset erases all local data and downloads a new copy of the
   data stored in MongoDB Atlas. Performing a client reset loses all local
   changes made since the client last successfully synced.


Example
-------

By default, the SDK performs client resets automatically on startup when
instructed to do so by the server and makes no effort to preserve local 
changes.

However, when a reset is required, {+realm+} sends a  
:dotnet-sdk:`ClientResetException <reference/Realms.Sync.Exceptions.ClientResetException.html>`. 
You can add a listener on the 
:dotnet-sdk:`Session.Error <reference/Realms.Sync.Session.html#Realms_Sync_Session_Error>` 
event and handle the client reset by calling the 
:dotnet-sdk:`InitiateClientReset() <reference/Realms.Sync.Exceptions.ClientResetException.html#Realms_Sync_Exceptions_ClientResetException_InitiateClientReset>` 
method. The following example demonstrates this:

.. literalinclude:: /examples/generated/code/start/ClientResetExamples.codeblock.handle.cs
   :language: csharp

