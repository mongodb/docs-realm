.. _dotnet-open-realm:
.. _dotnet-open-a-realm:

======================
Open and Close a Realm
======================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. _dotnet-open-synced-realm:

Open a Synced Realm
-------------------

.. include:: /includes/dotnet-open-synced-realm.rst

Open a Local (Non-Synced) Realm
-------------------------------
When opening a local (non-synced) {+realm+}, pass a 
:dotnet-sdk:`RealmConfiguration <reference/Realms.RealmConfiguration.html#Realms_RealmConfiguration__ctor_System_String_>` 
object to either ``GetInstanceAsync()`` or ``GetInstance()``. The following example 
creates a ``RealmConfiguration`` object with a local file path, sets the 
``IsReadOnly`` property to ``true``, and then opens a local {+realm+}  with that 
configuration information:

.. literalinclude:: /examples/generated/code/start/Examples.codeblock.local-realm.cs
   :language: csharp

Scoping the Realm
-----------------
The Realm instance implements ``IDisposable`` to ensure native resources are 
freed up. You should dispose of a realm object immediately after use, especially 
on background threads. The simplest way to do this is by declaring the realm 
object with a ``using`` statement, or wrapping the code that interacts with a 
{+realm+} in a ``using (...)`` statement:

.. literalinclude:: /examples/generated/code/start/Examples.codeblock.scope.cs
   :language: csharp

If you require a realm object to be shared outside of a single method, be sure 
to manage its state by calling the
:dotnet-sdk:`Dispose() <reference/Realms.Realm.html#Realms_Realm_Dispose>` method:

.. literalinclude:: /examples/generated/code/start/Examples.codeblock.dispose.cs
   :language: csharp

.. note::
   
   As a general rule, you should dispose of the realm only on background threads,  
   because disposing of a {+realm+} invalidates all objects associated with that 
   instance. If you are data binding the {+realm+} objects on the main thread, 
   for example, you should not call ``Dispose()``. 