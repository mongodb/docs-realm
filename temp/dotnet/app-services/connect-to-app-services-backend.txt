.. _dotnet-init-appclient:
.. _connect-to-mongodb-realm-backend-app:


===================================================
Connect to an Atlas App Services Backend - .NET SDK
===================================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

The App client is the interface to the App Services
backend. It provides access to the :ref:`authentication functionality
<dotnet-authenticate>`, :ref:`functions <dotnet-call-a-function>`, and
:ref:`sync management <dotnet-sync>`.

.. _dotnet-access-the-app-client:

Access the App Client
---------------------

Pass the App ID for your App, which you can 
:ref:`find in the Realm UI <find-your-app-id>`.

.. literalinclude:: /examples/generated/dotnet/WorkWithRealm.snippet.initialize-realm.cs
   :language: csharp

.. _dotnet-app-client-configuration:

Configuration
-------------

For most use cases, you only need your application's App ID to connect
to App Services. For granular control of your app connection, such as 
custom timeouts for connections and the log level, you can optionally pass an 
:dotnet-sdk:`AppConfiguration <reference/Realms.Sync.AppConfiguration.html>` 
object to the 
:dotnet-sdk:`App.Create() <reference/Realms.Sync.App.html#Realms_Sync_App_Create_Realms_Sync_AppConfiguration_>` 
method. The following example sets the LogLevel and the request timeout:

.. literalinclude:: /examples/generated/dotnet/WorkWithRealm.snippet.appConfig.cs
   :language: csharp

You can create multiple App client instances to connect to multiple
Apps. All App client instances that share the same App ID use the same 
underlying connection.

.. _dotnet-connect-to-specific-server:

Connect to a Specific Server
----------------------------

By default, Atlas Device SDK connects to Atlas using the global ``baseURL``
of ``https://services.cloud.mongodb.com``. In some cases, you may want to
connect to a different server:

- Your App Services App uses :ref:`local deployment <local-deployment>`, and 
  you want to connect directly to a local ``baseURL`` in your region.
- You want to connect to an :ref:`Edge Server instance <edge-server-connect-from-client>`.

You can specify a ``baseURL`` in the 
:dotnet-sdk:`AppConfiguration <reference/Realms.Sync.AppConfiguration.html#Realms_Sync_AppConfiguration_BaseUri>`.

.. literalinclude:: /examples/generated/dotnet/BaseURLChange.snippet.custom-base-url.cs
   :language: csharp

Connect to a Different Server During Runtime
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. versionadded:: 12.1.0

In some cases, you might want to change the ``baseURL`` while the app is
running. For example, you might want to roam between Edge Servers, or
move from an App Services connection to an Edge Server connection. To change
the ``baseURL`` during runtime, call the 
:dotnet-sdk:`app.UpdateBaseUriAsync() <reference/Realms.Sync.App.html#Realms_Sync_App_UpdateBaseUriAsync_System_Uri_>` 
method:

.. literalinclude:: /examples/generated/dotnet/BaseURLChange.snippet.update-base-url.cs
   :language: csharp

This API is experimental. As seen above, you must use ``#pragma warning disable Rlm001`` 
and ``#pragma warning restore Rlm001`` to suppress the experimental errors, 
where ``Rlm001`` is the experimental attributes's  ``diagnosticId``. You must 
also import the following namespace at the top of your file, which contains 
the ``Experimental`` attribute:

.. literalinclude:: /examples/generated/dotnet/BaseURLChange.snippet.experimental-import.cs
   :language: csharp

If you want to change the ``baseURL`` after you have logged in a user and
have opened a synced database, the app must perform a 
:ref:`client reset <dotnet-client-resets>`. Perform these steps in your code:

1. :ref:`Pause the Sync session <dotnet-suspend-resume-sync>`.
2. Update the ``baseURL`` by calling the ``app.updateBaseUrl(to: )`` method.
3. Authenticate and log the user in again with the new ``baseURL``.
4. Open a synced database pulling data from the new server.

Both the server and the client must be online for the user to authenticate and
connect to the new server. If the server is not online or the client does not
have a network connection, the user cannot authenticate and open the database.

.. important:: Changing an App Config After Initializing the App

   .. versionchanged:: v11.7.0
      ``BaseUri`` is not cached in the App configuration
   
   When you initialize the App client, the configuration is cached internally. 
   Attempting to close and then re-open an App with a changed configuration
   within the same process has no effect. The client continues to use the 
   cached configuration. 

   In .NET SDK version 11.7.0 and later, the :dotnet-sdk:`BaseUri <reference/Realms.Sync.AppConfiguration.html#Realms_Sync_AppConfiguration_BaseUri>` 
   is *no longer* cached in the App configuration. This means that you can change the 
   ``BaseUri``, and the App client will use the updated configuration. In 
   earlier SDK versions, changes to the ``BaseUri`` in a cached App 
   configuration have no effect.
